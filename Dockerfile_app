FROM python:3.12-slim

# To reduce the security risk
RUN apt-get update \
    && apt-get upgrade -y \
    && rm -rf /var/lib/apt/lists/*

# Define build arguments with default fallback values
ARG USER_UID=1000
ARG USER_GID=1000

# Create a non-root user and group
RUN groupadd -g $USER_GID fastapigroup \
    && useradd -u $USER_UID -g fastapigroup fastapiuser

# Set the working directory in the container
WORKDIR /app

# Copy the project files into the container
COPY --chown=fastapiuser:fastapigroup . /app

# Upgrade pip and install the "uv" tool which manages the project
RUN pip install --upgrade pip \
        && pip install uv

# Create a virtual environment using uv with Python 3.12
RUN uv venv --python 3.12

# "Activate" the venv for subsequent commands by updating PATH.
# This makes executables from the venv (like pip) available.
ENV PATH="/app/.venv/bin:$PATH"

# Install only the "api" extra dependencies defined in your pyproject file
RUN uv pip install -r pyproject.toml --extra api

# Set the folder structure and permissions - ensure /app directory itself is owned by fastapiuser
RUN chown fastapiuser:fastapigroup /app \
    && mkdir /data \
    && chown -R fastapiuser:fastapigroup /data

# Set the user to run the application
USER fastapiuser
EXPOSE 8000

# CMD will be specified in docker-compose.yml for centralized management
