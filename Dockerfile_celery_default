FROM python:3.12.10.slim

# Define build arguments with default fallback values
ARG USER_UID=1000
ARG USER_GID=1000

# Create a non-root user and group
RUN groupadd -g $USER_GID celerygroup && \
    useradd -u $USER_UID -g celerygroup celeryuser

# Set the working directory in the container
WORKDIR /app

# Copy the project files into the container
COPY . /app

# Upgrade pip and install the "uv" tool which manages the project
RUN pip install --upgrade pip && pip install uv

# Create a virtual environment using uv with Python 3.12
RUN uv venv --python 3.12

# "Activate" the venv for subsequent commands by updating PATH.
# This makes executables from the venv (like pip) available.
ENV PATH="/app/.venv/bin:$PATH"

# Install only the "celery-default" extra dependencies defined in pyproject file
RUN uv pip install -r pyproject.toml --extra celery-default

# Give the celeryuser user ownership of the app and data directory
RUN chown -R celeryuser:celerygroup /app
RUN mkdir /data
RUN chown -R celeryuser:celerygroup /data
USER celeryuser

# Start the celery default worker
CMD ["watchmedo", "auto-restart", "--directory=/app/cp_server", "--pattern=*.py", "--recursive", "--", "celery", "-A", "cp_server.tasks_server.celery_app:celery_app", "worker", "-Q", "celery", "--loglevel=info"]
