2025-01-17 16:16:54,997 - cellpose.models - INFO - Downloading: "https://www.cellpose.org/models/denoise_cyto2" to /home/ben/.cellpose/models/denoise_cyto2

2025-01-17 16:16:59,441 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:16:59,544 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:16:59,544 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:16:59,630 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:16:59,630 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:16:59,630 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:16:59,630 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:16:59,674 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:16:59,737 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:17:18,074 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:17:18,160 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:17:18,161 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:17:18,255 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:17:18,255 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:17:18,256 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:17:18,256 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:17:18,295 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:17:18,338 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:17:22,234 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:17:22,319 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:17:22,319 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:17:22,411 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:17:22,411 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:17:22,411 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:17:22,411 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:17:22,452 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:17:22,493 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:18:17,995 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:18:18,085 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:18:18,085 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:18:18,180 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:18:18,180 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:18:18,180 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:18:18,180 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:18:18,219 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:18:18,270 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:18:42,887 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:18:42,969 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:18:42,969 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:18:43,060 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:18:43,060 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:18:43,060 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:18:43,060 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:18:43,101 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:18:43,141 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:20:10,730 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:20:10,818 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:20:10,818 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:20:10,905 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:20:10,905 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:20:10,905 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:20:10,905 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:20:10,945 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:20:10,986 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:21:40,506 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:21:40,591 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:21:40,591 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:21:40,679 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:21:40,679 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:21:40,680 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:21:40,680 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:21:40,716 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:21:40,760 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:24:38,945 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:24:39,035 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:24:39,036 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:24:39,129 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:24:39,129 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:24:39,129 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:24:39,129 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:24:39,166 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:24:39,211 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:27:20,786 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:27:20,878 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:27:20,878 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:27:20,962 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:27:20,963 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:27:20,963 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:27:20,963 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:27:21,010 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:27:21,060 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:27:58,128 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:27:58,209 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:27:58,209 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:27:58,295 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:27:58,296 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:27:58,296 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:27:58,296 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:27:58,340 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:27:58,376 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:29:36,910 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:29:36,997 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:29:36,997 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:29:37,086 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:29:37,086 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:29:37,086 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:29:37,086 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:29:37,123 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:29:37,165 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:29:40,850 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-17 16:29:40,935 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:29:40,935 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:29:41,023 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 16:29:41,023 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-17 16:29:41,023 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-17 16:29:41,024 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-17 16:29:41,062 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-17 16:29:41,102 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-17 23:35:47,826 - root - INFO - Model created successfully
2025-01-19 14:45:15,250 - root - INFO - Model created successfully
2025-01-19 14:45:25,396 - root - INFO - Model updated successfully with Field(name=None,type=None,default=<dataclasses._MISSING_TYPE object at 0x7b56209b8380>,default_factory=<dataclasses._MISSING_TYPE object at 0x7b56209b8380>,init=False,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=<dataclasses._MISSING_TYPE object at 0x7b56209b8380>,_field_type=None)
2025-01-19 14:48:23,669 - root - INFO - Model created successfully
2025-01-19 14:48:30,881 - root - INFO - Model created successfully
2025-01-19 14:50:55,933 - root - INFO - Model created successfully
2025-01-19 14:51:19,172 - root - INFO - Model created successfully
2025-01-19 14:51:59,877 - root - INFO - Model created successfully
2025-01-19 14:52:02,822 - root - INFO - Model created successfully
2025-01-19 14:52:08,642 - root - INFO - Model created successfully
2025-01-19 14:52:21,388 - root - INFO - Model updated successfully
2025-01-19 14:54:20,065 - root - INFO - Model updated successfully
2025-01-19 14:54:51,065 - root - INFO - Model created successfully
2025-01-19 14:57:23,570 - root - INFO - Model created successfully
2025-01-19 14:57:45,566 - root - INFO - Model created successfully
2025-01-19 14:57:55,226 - root - INFO - Model created successfully
2025-01-19 14:57:58,397 - root - INFO - Model created successfully
2025-01-19 14:58:01,396 - root - INFO - Model created successfully
2025-01-19 14:58:04,281 - root - INFO - Model created successfully
2025-01-19 14:58:59,694 - root - INFO - Model updated successfully
2025-01-19 15:01:47,284 - root - INFO - Model created successfully
2025-01-19 15:01:50,967 - root - INFO - Model created successfully
2025-01-19 15:01:54,340 - root - INFO - Model created successfully
2025-01-19 15:01:57,731 - root - INFO - Model created successfully
2025-01-19 15:02:41,034 - root - INFO - Model updated successfully
2025-01-19 15:02:52,518 - root - INFO - Model updated successfully
2025-01-19 15:03:15,472 - root - INFO - Model created successfully
2025-01-19 15:03:18,828 - root - INFO - Model created successfully
2025-01-19 15:03:22,036 - root - INFO - Model created successfully
2025-01-19 15:03:34,078 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto2', 'pretrained_model': False, 'restore_type': 'denoise_cyto2'}
2025-01-19 15:04:57,790 - root - INFO - Model created successfully
2025-01-19 15:04:57,794 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 15:06:07,179 - root - INFO - Model created successfully
2025-01-19 15:07:03,917 - root - INFO - Model created successfully
2025-01-19 15:07:10,200 - root - INFO - Model created successfully
2025-01-19 15:07:17,954 - root - INFO - Model created successfully
2025-01-19 15:07:18,032 - httpcore.connection - DEBUG - connect_tcp.started host='127.0.0.1' port=8000 local_address=None timeout=5.0 socket_options=None
2025-01-19 15:07:18,033 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x758718e893a0>
2025-01-19 15:07:18,034 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-19 15:07:18,034 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-01-19 15:07:18,034 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-19 15:07:18,034 - httpcore.http11 - DEBUG - send_request_body.complete
2025-01-19 15:07:18,034 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-19 15:07:18,034 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 15:07:18,035 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Sun, 19 Jan 2025 14:07:17 GMT'), (b'server', b'uvicorn'), (b'content-length', b'39'), (b'content-type', b'application/json')])
2025-01-19 15:07:18,035 - httpx - INFO - HTTP Request: POST http://127.0.0.1:8000/model/ "HTTP/1.1 200 OK"
2025-01-19 15:07:18,035 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-19 15:07:18,035 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-01-19 15:07:18,035 - httpcore.http11 - DEBUG - response_closed.started
2025-01-19 15:07:18,035 - httpcore.http11 - DEBUG - response_closed.complete
2025-01-19 15:07:18,035 - httpcore.connection - DEBUG - close.started
2025-01-19 15:07:18,036 - httpcore.connection - DEBUG - close.complete
2025-01-19 15:09:43,445 - root - INFO - Model created successfully
2025-01-19 15:09:46,672 - root - INFO - Model created successfully
2025-01-19 15:10:18,482 - root - INFO - Model created successfully
2025-01-19 15:14:08,463 - root - INFO - Model created successfully
2025-01-19 15:14:51,885 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 15:14:52,192 - root - INFO - Model created successfully
2025-01-19 15:16:03,330 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 15:16:42,840 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 15:17:56,361 - root - INFO - Model created successfully
2025-01-19 15:18:59,717 - root - INFO - Model created successfully
2025-01-19 15:19:10,501 - root - INFO - Model created successfully
2025-01-19 21:13:20,229 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 21:14:29,630 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 21:15:45,898 - root - INFO - Model created successfully
2025-01-19 21:18:20,146 - root - INFO - Model created successfully
2025-01-19 21:18:23,445 - root - INFO - Model created successfully
2025-01-19 21:18:26,609 - root - INFO - Model created successfully
2025-01-19 21:18:41,962 - root - INFO - Model created successfully
2025-01-19 21:18:50,125 - root - INFO - Model created successfully
2025-01-19 21:18:57,944 - root - INFO - Model created successfully
2025-01-19 21:19:04,155 - root - INFO - Model created successfully
2025-01-19 21:20:22,131 - root - INFO - Model created successfully
2025-01-19 21:20:25,487 - root - INFO - Model created successfully
2025-01-19 21:20:28,700 - root - INFO - Model created successfully
2025-01-19 21:20:44,471 - root - INFO - Model created successfully
2025-01-19 21:21:26,446 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 21:21:56,198 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 21:22:48,767 - root - INFO - Model created successfully
2025-01-19 21:22:49,004 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 21:26:06,554 - root - INFO - Model created successfully
2025-01-19 21:26:06,884 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-19 21:26:38,692 - root - INFO - Model created successfully
2025-01-19 21:26:38,807 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 09:17:10,739 - root - INFO - Model created successfully
2025-01-20 09:34:07,396 - root - INFO - Default model created successfully
2025-01-20 09:34:07,767 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 11:21:27,432 - root - INFO - Default model created successfully
2025-01-20 11:21:27,791 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 13:15:52,976 - root - INFO - Default model created successfully
2025-01-20 13:15:53,373 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:27:31,819 - root - INFO - Default model created successfully
2025-01-20 15:27:32,149 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:27:32,173 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:27:32,173 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:27:32,173 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:27:32,173 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:27:32,173 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:27:32,173 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:27:32,173 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:27:32,173 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:27:32,174 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:10139]
2025-01-20 15:27:32,174 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:27:32,174 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:29:15,967 - root - INFO - Default model created successfully
2025-01-20 15:29:16,267 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:29:16,289 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:29:16,289 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:29:16,289 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:29:16,290 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:29:16,290 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:29:16,290 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:29:16,290 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:29:16,290 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:29:16,290 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:10139]
2025-01-20 15:29:16,290 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:29:16,290 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:33:19,154 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-20 15:33:19,244 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:33:19,245 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:33:19,328 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:33:19,329 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-20 15:33:19,329 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:33:19,329 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:33:19,371 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-20 15:33:19,409 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:33:19,409 - root - INFO - Default model created successfully
2025-01-20 15:33:19,488 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:10139]
2025-01-20 15:33:19,512 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:33:19,513 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:33:19,513 - cellpose.transforms - WARNING - WARNING: more than 2 channels given, use 'channels' input for specifying channels - just using first 2 channels to run processing
2025-01-20 15:33:19,513 - cellpose.transforms - CRITICAL - Image needs to have at least 3 dimensions
2025-01-20 15:39:40,210 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-20 15:39:40,303 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:39:40,303 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:39:40,389 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:39:40,389 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-20 15:39:40,390 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:39:40,390 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:39:40,433 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-20 15:39:40,470 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:39:40,471 - root - INFO - Default model created successfully
2025-01-20 15:39:40,992 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:10139]
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:39:41,015 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:39:41,016 - cellpose.transforms - WARNING - WARNING: more than 2 channels given, use 'channels' input for specifying channels - just using first 2 channels to run processing
2025-01-20 15:39:41,016 - cellpose.transforms - CRITICAL - Image needs to have at least 3 dimensions
2025-01-20 15:44:22,839 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-20 15:44:22,928 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:44:22,928 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:44:23,015 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:44:23,015 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-20 15:44:23,015 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:44:23,015 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:44:23,051 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-20 15:44:23,091 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:44:23,092 - root - INFO - Default model created successfully
2025-01-20 15:44:23,179 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:44:23,204 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:98362]
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_part_data with data[0:256000]
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_part_data with data[0:256000]
2025-01-20 15:44:23,205 - python_multipart.multipart - DEBUG - Calling on_part_data with data[0:256000]
2025-01-20 15:44:23,206 - python_multipart.multipart - DEBUG - Calling on_part_data with data[0:133777]
2025-01-20 15:44:23,206 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:44:23,206 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:44:23,208 - cellpose.transforms - WARNING - WARNING: more than 2 channels given, use 'channels' input for specifying channels - just using first 2 channels to run processing
2025-01-20 15:44:23,208 - cellpose.transforms - CRITICAL - Image needs to have at least 3 dimensions
2025-01-20 15:47:10,911 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-20 15:47:10,993 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:47:10,993 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:47:11,080 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:47:11,080 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-20 15:47:11,081 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:47:11,081 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:47:11,122 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-20 15:47:11,161 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:47:11,161 - root - INFO - Default model created successfully
2025-01-20 15:47:11,645 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:47:11,669 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:65675]
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:47:11,670 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:47:11,671 - cellpose.transforms - WARNING - WARNING: more than 2 channels given, use 'channels' input for specifying channels - just using first 2 channels to run processing
2025-01-20 15:47:11,671 - cellpose.transforms - CRITICAL - Image needs to have at least 3 dimensions
2025-01-20 15:48:55,538 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-20 15:48:55,626 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:48:55,626 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:48:55,713 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:48:55,714 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-20 15:48:55,714 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:48:55,714 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:48:55,751 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-20 15:48:55,792 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:48:55,792 - root - INFO - Default model created successfully
2025-01-20 15:48:55,878 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:65675]
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:48:55,905 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:48:55,906 - cellpose.transforms - WARNING - WARNING: more than 2 channels given, use 'channels' input for specifying channels - just using first 2 channels to run processing
2025-01-20 15:48:55,906 - cellpose.transforms - CRITICAL - Image needs to have at least 3 dimensions
2025-01-20 15:50:07,359 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-20 15:50:07,443 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:50:07,444 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:50:07,529 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:50:07,529 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-20 15:50:07,529 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:50:07,529 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:50:07,568 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-20 15:50:07,609 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:50:07,609 - root - INFO - Default model created successfully
2025-01-20 15:50:07,673 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:65675]
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:50:07,699 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:56:19,302 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-20 15:56:19,402 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:56:19,402 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:56:19,488 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:56:19,488 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-20 15:56:19,488 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:56:19,488 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:56:19,532 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-20 15:56:19,566 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:56:19,566 - root - INFO - Default model created successfully
2025-01-20 15:56:19,621 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:65675]
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:56:19,648 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:59:11,280 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-20 15:59:11,368 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:59:11,368 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:59:11,459 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:59:11,459 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-20 15:59:11,459 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 15:59:11,459 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 15:59:11,497 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-20 15:59:11,538 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 15:59:11,538 - root - INFO - Default model created successfully
2025-01-20 15:59:11,653 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:65675]
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 15:59:11,677 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 15:59:12,080 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=98)
           2	RESUME(arg=0, lineno=98)
           4	LOAD_GLOBAL(arg=1, lineno=112)
          14	LOAD_ATTR(arg=2, lineno=112)
          34	LOAD_GLOBAL(arg=5, lineno=112)
          44	LOAD_FAST(arg=1, lineno=112)
          46	CALL(arg=1, lineno=112)
          54	LOAD_CONST(arg=1, lineno=112)
          56	BUILD_TUPLE(arg=2, lineno=112)
          58	LOAD_CONST(arg=2, lineno=112)
          60	CALL(arg=2, lineno=112)
          68	STORE_FAST(arg=2, lineno=112)
          70	LOAD_GLOBAL(arg=1, lineno=113)
          80	LOAD_ATTR(arg=2, lineno=113)
         100	LOAD_GLOBAL(arg=5, lineno=113)
         110	LOAD_FAST(arg=1, lineno=113)
         112	CALL(arg=1, lineno=113)
         120	BUILD_TUPLE(arg=1, lineno=113)
         122	LOAD_CONST(arg=2, lineno=113)
         124	CALL(arg=2, lineno=113)
         132	STORE_FAST(arg=3, lineno=113)
         134	LOAD_GLOBAL(arg=7, lineno=114)
         144	LOAD_GLOBAL(arg=5, lineno=114)
         154	LOAD_FAST(arg=1, lineno=114)
         156	CALL(arg=1, lineno=114)
         164	CALL(arg=1, lineno=114)
         172	GET_ITER(arg=None, lineno=114)
>        174	FOR_ITER(arg=213, lineno=114)
         178	STORE_FAST(arg=4, lineno=114)
         180	LOAD_FAST(arg=1, lineno=115)
         182	LOAD_FAST(arg=4, lineno=115)
         184	BINARY_SUBSCR(arg=None, lineno=115)
         188	STORE_FAST(arg=5, lineno=115)
         190	LOAD_FAST(arg=5, lineno=116)
         192	LOAD_CONST(arg=3, lineno=116)
         194	BINARY_SUBSCR(arg=None, lineno=116)
         198	STORE_FAST(arg=6, lineno=116)
         200	LOAD_FAST(arg=5, lineno=117)
         202	LOAD_CONST(arg=4, lineno=117)
         204	LOAD_CONST(arg=5, lineno=117)
         206	BINARY_SLICE(arg=None, lineno=117)
         208	LOAD_FAST(arg=5, lineno=117)
         210	LOAD_CONST(arg=5, lineno=117)
         212	LOAD_CONST(arg=6, lineno=117)
         214	BINARY_SLICE(arg=None, lineno=117)
         216	STORE_FAST(arg=8, lineno=117)
         218	STORE_FAST(arg=7, lineno=117)
         220	LOAD_GLOBAL(arg=1, lineno=119)
         230	LOAD_ATTR(arg=8, lineno=119)
         250	LOAD_FAST(arg=0, lineno=119)
         252	LOAD_FAST(arg=7, lineno=119)
         254	LOAD_CONST(arg=3, lineno=119)
         256	BINARY_SUBSCR(arg=None, lineno=119)
         260	LOAD_FAST(arg=7, lineno=119)
         262	LOAD_CONST(arg=7, lineno=119)
         264	BINARY_SUBSCR(arg=None, lineno=119)
         268	BUILD_SLICE(arg=2, lineno=119)
         270	LOAD_FAST(arg=8, lineno=119)
         272	LOAD_CONST(arg=3, lineno=119)
         274	BINARY_SUBSCR(arg=None, lineno=119)
         278	LOAD_FAST(arg=8, lineno=119)
         280	LOAD_CONST(arg=7, lineno=119)
         282	BINARY_SUBSCR(arg=None, lineno=119)
         286	BUILD_SLICE(arg=2, lineno=119)
         288	BUILD_TUPLE(arg=2, lineno=119)
         290	BINARY_SUBSCR(arg=None, lineno=119)
         294	LOAD_FAST(arg=6, lineno=119)
         296	LOAD_CONST(arg=4, lineno=119)
         298	BINARY_OP(arg=0, lineno=119)
         302	COMPARE_OP(arg=40, lineno=119)
         306	CALL(arg=1, lineno=119)
         314	UNPACK_SEQUENCE(arg=2, lineno=119)
         318	STORE_FAST(arg=9, lineno=119)
         320	STORE_FAST(arg=10, lineno=119)
         322	LOAD_FAST(arg=9, lineno=120)
         324	LOAD_ATTR(arg=11, lineno=120)
         344	CALL(arg=0, lineno=120)
         352	STORE_FAST(arg=11, lineno=120)
         354	LOAD_FAST(arg=10, lineno=121)
         356	LOAD_ATTR(arg=11, lineno=121)
         376	CALL(arg=0, lineno=121)
         384	STORE_FAST(arg=12, lineno=121)
         386	LOAD_FAST(arg=10, lineno=123)
         388	LOAD_FAST(arg=12, lineno=123)
         390	BINARY_OP(arg=10, lineno=123)
         394	LOAD_CONST(arg=1, lineno=123)
         396	BINARY_OP(arg=8, lineno=123)
         400	LOAD_FAST(arg=9, lineno=123)
         402	LOAD_FAST(arg=11, lineno=123)
         404	BINARY_OP(arg=10, lineno=123)
         408	LOAD_CONST(arg=1, lineno=123)
         410	BINARY_OP(arg=8, lineno=123)
         414	BINARY_OP(arg=0, lineno=123)
         418	LOAD_ATTR(arg=13, lineno=123)
         438	CALL(arg=0, lineno=123)
         446	STORE_FAST(arg=13, lineno=123)
         448	LOAD_FAST(arg=9, lineno=124)
         450	LOAD_FAST(arg=13, lineno=124)
         452	BINARY_SUBSCR(arg=None, lineno=124)
         456	LOAD_FAST(arg=7, lineno=124)
         458	LOAD_CONST(arg=3, lineno=124)
         460	BINARY_SUBSCR(arg=None, lineno=124)
         464	BINARY_OP(arg=0, lineno=124)
         468	STORE_FAST(arg=11, lineno=124)
         470	LOAD_FAST(arg=10, lineno=125)
         472	LOAD_FAST(arg=13, lineno=125)
         474	BINARY_SUBSCR(arg=None, lineno=125)
         478	LOAD_FAST(arg=8, lineno=125)
         480	LOAD_CONST(arg=3, lineno=125)
         482	BINARY_SUBSCR(arg=None, lineno=125)
         486	BINARY_OP(arg=0, lineno=125)
         490	STORE_FAST(arg=12, lineno=125)
         492	LOAD_GLOBAL(arg=1, lineno=126)
         502	LOAD_ATTR(arg=14, lineno=126)
         522	LOAD_FAST(arg=11, lineno=126)
         524	LOAD_FAST(arg=12, lineno=126)
         526	BUILD_LIST(arg=2, lineno=126)
         528	CALL(arg=1, lineno=126)
         536	LOAD_FAST(arg=2, lineno=126)
         538	LOAD_FAST(arg=4, lineno=126)
         540	STORE_SUBSCR(arg=None, lineno=126)
         544	LOAD_FAST(arg=7, lineno=127)
         546	LOAD_CONST(arg=7, lineno=127)
         548	BINARY_SUBSCR(arg=None, lineno=127)
         552	LOAD_FAST(arg=7, lineno=127)
         554	LOAD_CONST(arg=3, lineno=127)
         556	BINARY_SUBSCR(arg=None, lineno=127)
         560	BINARY_OP(arg=10, lineno=127)
         564	LOAD_FAST(arg=8, lineno=127)
         566	LOAD_CONST(arg=7, lineno=127)
         568	BINARY_SUBSCR(arg=None, lineno=127)
         572	LOAD_FAST(arg=8, lineno=127)
         574	LOAD_CONST(arg=3, lineno=127)
         576	BINARY_SUBSCR(arg=None, lineno=127)
         580	BINARY_OP(arg=10, lineno=127)
         584	BINARY_OP(arg=0, lineno=127)
         588	LOAD_CONST(arg=1, lineno=127)
         590	BINARY_OP(arg=0, lineno=127)
         594	LOAD_FAST(arg=3, lineno=127)
         596	LOAD_FAST(arg=4, lineno=127)
         598	STORE_SUBSCR(arg=None, lineno=127)
         602	JUMP_BACKWARD(arg=215, lineno=127)
>        604	END_FOR(arg=None, lineno=114)
         606	LOAD_FAST(arg=2, lineno=128)
         608	LOAD_FAST(arg=3, lineno=128)
         610	BUILD_TUPLE(arg=2, lineno=128)
         612	RETURN_VALUE(arg=None, lineno=128)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=98)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=98)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=112)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=112)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_GLOBAL(arg=5, lineno=112)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2']
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=112)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$null$34.4', '$34load_global.3']
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=112)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$null$34.4', '$34load_global.3', '$slices44.5']
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=112)
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$46call.6']
2025-01-20 15:59:12,081 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=BUILD_TUPLE(arg=2, lineno=112)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$46call.6', '$const54.7']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_CONST(arg=2, lineno=112)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$56build_tuple.8']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=CALL(arg=2, lineno=112)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$56build_tuple.8', '$const58.9']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=STORE_FAST(arg=2, lineno=112)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$60call.10']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_GLOBAL(arg=1, lineno=113)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=LOAD_ATTR(arg=2, lineno=113)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$70.12', '$70load_global.11']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_GLOBAL(arg=5, lineno=113)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$70.12', '$80load_attr.13']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=113)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$70.12', '$80load_attr.13', '$null$100.15', '$100load_global.14']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=CALL(arg=1, lineno=113)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$70.12', '$80load_attr.13', '$null$100.15', '$100load_global.14', '$slices110.16']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=BUILD_TUPLE(arg=1, lineno=113)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$70.12', '$80load_attr.13', '$112call.17']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_CONST(arg=2, lineno=113)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$70.12', '$80load_attr.13', '$120build_tuple.18']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=124, inst=CALL(arg=2, lineno=113)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$70.12', '$80load_attr.13', '$120build_tuple.18', '$const122.19']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=132, inst=STORE_FAST(arg=3, lineno=113)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$124call.20']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=7, lineno=114)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=144, inst=LOAD_GLOBAL(arg=5, lineno=114)
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - stack ['$null$134.22', '$134load_global.21']
2025-01-20 15:59:12,082 - numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=1, lineno=114)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack ['$null$134.22', '$134load_global.21', '$null$144.24', '$144load_global.23']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - dispatch pc=156, inst=CALL(arg=1, lineno=114)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack ['$null$134.22', '$134load_global.21', '$null$144.24', '$144load_global.23', '$slices154.25']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=114)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack ['$null$134.22', '$134load_global.21', '$156call.26']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - dispatch pc=172, inst=GET_ITER(arg=None, lineno=114)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack ['$164call.27']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=174, stack=('$172get_iter.28',), blockstack=(), npush=0)]
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=174 nstack_initial=1)])
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack: ['$phi174.0']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=174 nstack_initial=1)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - dispatch pc=174, inst=FOR_ITER(arg=213, lineno=114)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack ['$phi174.0']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=604, stack=('$phi174.0', '$174for_iter.2'), blockstack=(), npush=0), Edge(pc=178, stack=('$phi174.0', '$174for_iter.2'), blockstack=(), npush=0)]
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=604 nstack_initial=2), State(pc_initial=178 nstack_initial=2)])
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack: ['$phi604.0', '$phi604.1']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=604 nstack_initial=2)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - dispatch pc=604, inst=END_FOR(arg=None, lineno=114)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack ['$phi604.0', '$phi604.1']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - dispatch pc=606, inst=LOAD_FAST(arg=2, lineno=128)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - dispatch pc=608, inst=LOAD_FAST(arg=3, lineno=128)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack ['$centers606.2']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - dispatch pc=610, inst=BUILD_TUPLE(arg=2, lineno=128)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack ['$centers606.2', '$ext608.3']
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - dispatch pc=612, inst=RETURN_VALUE(arg=None, lineno=128)
2025-01-20 15:59:12,083 - numba.core.byteflow - DEBUG - stack ['$610build_tuple.4']
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=2)])
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - stack: ['$phi178.0', '$phi178.1']
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=2)
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - dispatch pc=178, inst=STORE_FAST(arg=4, lineno=114)
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$phi178.1']
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=1, lineno=115)
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=4, lineno=115)
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$slices180.2']
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - dispatch pc=184, inst=BINARY_SUBSCR(arg=None, lineno=115)
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$slices180.2', '$p182.3']
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - dispatch pc=188, inst=STORE_FAST(arg=5, lineno=115)
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$184binary_subscr.4']
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=5, lineno=116)
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - dispatch pc=192, inst=LOAD_CONST(arg=3, lineno=116)
2025-01-20 15:59:12,084 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$si190.5']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=116)
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$si190.5', '$const192.6']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=198, inst=STORE_FAST(arg=6, lineno=116)
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$194binary_subscr.7']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=5, lineno=117)
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=202, inst=LOAD_CONST(arg=4, lineno=117)
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$si200.8']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=5, lineno=117)
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$si200.8', '$const202.9']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=206, inst=BINARY_SLICE(arg=None, lineno=117)
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$si200.8', '$const202.9', '$const204.10']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=5, lineno=117)
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$206binary_slice.12']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=210, inst=LOAD_CONST(arg=5, lineno=117)
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$206binary_slice.12', '$si208.14']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=212, inst=LOAD_CONST(arg=6, lineno=117)
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$206binary_slice.12', '$si208.14', '$const210.15']
2025-01-20 15:59:12,085 - numba.core.byteflow - DEBUG - dispatch pc=214, inst=BINARY_SLICE(arg=None, lineno=117)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$206binary_slice.12', '$si208.14', '$const210.15', '$const212.16']
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - dispatch pc=216, inst=STORE_FAST(arg=8, lineno=117)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$206binary_slice.12', '$214binary_slice.18']
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - dispatch pc=218, inst=STORE_FAST(arg=7, lineno=117)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$206binary_slice.12']
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - dispatch pc=220, inst=LOAD_GLOBAL(arg=1, lineno=119)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - dispatch pc=230, inst=LOAD_ATTR(arg=8, lineno=119)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$220load_global.20']
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - dispatch pc=250, inst=LOAD_FAST(arg=0, lineno=119)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22']
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - dispatch pc=252, inst=LOAD_FAST(arg=7, lineno=119)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23']
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - dispatch pc=254, inst=LOAD_CONST(arg=3, lineno=119)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$sr252.24']
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - dispatch pc=256, inst=BINARY_SUBSCR(arg=None, lineno=119)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$sr252.24', '$const254.25']
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=7, lineno=119)
2025-01-20 15:59:12,086 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$256binary_subscr.26']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=262, inst=LOAD_CONST(arg=7, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$256binary_subscr.26', '$sr260.27']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$256binary_subscr.26', '$sr260.27', '$const262.28']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=268, inst=BUILD_SLICE(arg=2, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$256binary_subscr.26', '$264binary_subscr.29']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=8, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$268build_slice.31']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=3, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$268build_slice.31', '$sc270.32']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$268build_slice.31', '$sc270.32', '$const272.33']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=8, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$268build_slice.31', '$274binary_subscr.34']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=280, inst=LOAD_CONST(arg=7, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$268build_slice.31', '$274binary_subscr.34', '$sc278.35']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=282, inst=BINARY_SUBSCR(arg=None, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$268build_slice.31', '$274binary_subscr.34', '$sc278.35', '$const280.36']
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - dispatch pc=286, inst=BUILD_SLICE(arg=2, lineno=119)
2025-01-20 15:59:12,087 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$268build_slice.31', '$274binary_subscr.34', '$282binary_subscr.37']
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - dispatch pc=288, inst=BUILD_TUPLE(arg=2, lineno=119)
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$268build_slice.31', '$286build_slice.39']
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=119)
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$masks250.23', '$288build_tuple.40']
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=6, lineno=119)
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$290binary_subscr.41']
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - dispatch pc=296, inst=LOAD_CONST(arg=4, lineno=119)
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$290binary_subscr.41', '$i294.42']
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - dispatch pc=298, inst=BINARY_OP(arg=0, lineno=119)
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$290binary_subscr.41', '$i294.42', '$const296.43']
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - dispatch pc=302, inst=COMPARE_OP(arg=40, lineno=119)
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$290binary_subscr.41', '$binop_add298.44']
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - dispatch pc=306, inst=CALL(arg=1, lineno=119)
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$220.21', '$230load_attr.22', '$302compare_op.45']
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - dispatch pc=314, inst=UNPACK_SEQUENCE(arg=2, lineno=119)
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$306call.46']
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - dispatch pc=318, inst=STORE_FAST(arg=9, lineno=119)
2025-01-20 15:59:12,088 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$314unpack_sequence.48', '$314unpack_sequence.47']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=320, inst=STORE_FAST(arg=10, lineno=119)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$314unpack_sequence.48']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=9, lineno=120)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=324, inst=LOAD_ATTR(arg=11, lineno=120)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$yi322.50']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=344, inst=CALL(arg=0, lineno=120)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$324.51', '$324load_attr.52']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=352, inst=STORE_FAST(arg=11, lineno=120)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$344call.53']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=354, inst=LOAD_FAST(arg=10, lineno=121)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=356, inst=LOAD_ATTR(arg=11, lineno=121)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$xi354.54']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=376, inst=CALL(arg=0, lineno=121)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$356.55', '$356load_attr.56']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=384, inst=STORE_FAST(arg=12, lineno=121)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$376call.57']
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - dispatch pc=386, inst=LOAD_FAST(arg=10, lineno=123)
2025-01-20 15:59:12,089 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=388, inst=LOAD_FAST(arg=12, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$xi386.58']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=10, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$xi386.58', '$xmed388.59']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=394, inst=LOAD_CONST(arg=1, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub390.60']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=396, inst=BINARY_OP(arg=8, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub390.60', '$const394.61']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=9, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_pow396.62']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=11, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_pow396.62', '$yi400.63']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=404, inst=BINARY_OP(arg=10, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_pow396.62', '$yi400.63', '$ymed402.64']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=408, inst=LOAD_CONST(arg=1, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_pow396.62', '$binop_sub404.65']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=410, inst=BINARY_OP(arg=8, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_pow396.62', '$binop_sub404.65', '$const408.66']
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=0, lineno=123)
2025-01-20 15:59:12,090 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_pow396.62', '$binop_pow410.67']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=418, inst=LOAD_ATTR(arg=13, lineno=123)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_add414.68']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=438, inst=CALL(arg=0, lineno=123)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$418.69', '$418load_attr.70']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=446, inst=STORE_FAST(arg=13, lineno=123)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$438call.71']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=448, inst=LOAD_FAST(arg=9, lineno=124)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=450, inst=LOAD_FAST(arg=13, lineno=124)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$yi448.72']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=452, inst=BINARY_SUBSCR(arg=None, lineno=124)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$yi448.72', '$imin450.73']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=456, inst=LOAD_FAST(arg=7, lineno=124)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$452binary_subscr.74']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=458, inst=LOAD_CONST(arg=3, lineno=124)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$452binary_subscr.74', '$sr456.75']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=460, inst=BINARY_SUBSCR(arg=None, lineno=124)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$452binary_subscr.74', '$sr456.75', '$const458.76']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=464, inst=BINARY_OP(arg=0, lineno=124)
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$452binary_subscr.74', '$460binary_subscr.77']
2025-01-20 15:59:12,091 - numba.core.byteflow - DEBUG - dispatch pc=468, inst=STORE_FAST(arg=11, lineno=124)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_add464.78']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=470, inst=LOAD_FAST(arg=10, lineno=125)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=472, inst=LOAD_FAST(arg=13, lineno=125)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$xi470.79']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=474, inst=BINARY_SUBSCR(arg=None, lineno=125)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$xi470.79', '$imin472.80']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=478, inst=LOAD_FAST(arg=8, lineno=125)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$474binary_subscr.81']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=480, inst=LOAD_CONST(arg=3, lineno=125)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$474binary_subscr.81', '$sc478.82']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=125)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$474binary_subscr.81', '$sc478.82', '$const480.83']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=0, lineno=125)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$474binary_subscr.81', '$482binary_subscr.84']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=490, inst=STORE_FAST(arg=12, lineno=125)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_add486.85']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=492, inst=LOAD_GLOBAL(arg=1, lineno=126)
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,092 - numba.core.byteflow - DEBUG - dispatch pc=502, inst=LOAD_ATTR(arg=14, lineno=126)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$492.87', '$492load_global.86']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=522, inst=LOAD_FAST(arg=11, lineno=126)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$492.87', '$502load_attr.88']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=524, inst=LOAD_FAST(arg=12, lineno=126)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$492.87', '$502load_attr.88', '$ymed522.89']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=526, inst=BUILD_LIST(arg=2, lineno=126)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$492.87', '$502load_attr.88', '$ymed522.89', '$xmed524.90']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=528, inst=CALL(arg=1, lineno=126)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$492.87', '$502load_attr.88', '$526build_list.91']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=536, inst=LOAD_FAST(arg=2, lineno=126)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$528call.92']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=538, inst=LOAD_FAST(arg=4, lineno=126)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$528call.92', '$centers536.93']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=540, inst=STORE_SUBSCR(arg=None, lineno=126)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$528call.92', '$centers536.93', '$p538.94']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=544, inst=LOAD_FAST(arg=7, lineno=127)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=546, inst=LOAD_CONST(arg=7, lineno=127)
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$sr544.95']
2025-01-20 15:59:12,093 - numba.core.byteflow - DEBUG - dispatch pc=548, inst=BINARY_SUBSCR(arg=None, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$sr544.95', '$const546.96']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=7, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$548binary_subscr.97']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=554, inst=LOAD_CONST(arg=3, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$548binary_subscr.97', '$sr552.98']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=556, inst=BINARY_SUBSCR(arg=None, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$548binary_subscr.97', '$sr552.98', '$const554.99']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=560, inst=BINARY_OP(arg=10, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$548binary_subscr.97', '$556binary_subscr.100']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=564, inst=LOAD_FAST(arg=8, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub560.101']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=566, inst=LOAD_CONST(arg=7, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub560.101', '$sc564.102']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=568, inst=BINARY_SUBSCR(arg=None, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub560.101', '$sc564.102', '$const566.103']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=8, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub560.101', '$568binary_subscr.104']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=574, inst=LOAD_CONST(arg=3, lineno=127)
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub560.101', '$568binary_subscr.104', '$sc572.105']
2025-01-20 15:59:12,094 - numba.core.byteflow - DEBUG - dispatch pc=576, inst=BINARY_SUBSCR(arg=None, lineno=127)
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub560.101', '$568binary_subscr.104', '$sc572.105', '$const574.106']
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - dispatch pc=580, inst=BINARY_OP(arg=10, lineno=127)
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub560.101', '$568binary_subscr.104', '$576binary_subscr.107']
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - dispatch pc=584, inst=BINARY_OP(arg=0, lineno=127)
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_sub560.101', '$binop_sub580.108']
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - dispatch pc=588, inst=LOAD_CONST(arg=1, lineno=127)
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_add584.109']
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=0, lineno=127)
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_add584.109', '$const588.110']
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=3, lineno=127)
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_add590.111']
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - dispatch pc=596, inst=LOAD_FAST(arg=4, lineno=127)
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_add590.111', '$ext594.112']
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - dispatch pc=598, inst=STORE_SUBSCR(arg=None, lineno=127)
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$binop_add590.111', '$ext594.112', '$p596.113']
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - dispatch pc=602, inst=JUMP_BACKWARD(arg=215, lineno=127)
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=174, stack=('$phi178.0',), blockstack=(), npush=0)]
2025-01-20 15:59:12,095 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=174 nstack_initial=1)])
2025-01-20 15:59:12,096 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,096 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=174 nstack_initial=1): {'$phi174.0'},
             State(pc_initial=178 nstack_initial=2): {'$phi178.1'},
             State(pc_initial=604 nstack_initial=2): set()})
2025-01-20 15:59:12,096 - numba.core.byteflow - DEBUG - defmap: {'$phi174.0': State(pc_initial=0 nstack_initial=0),
 '$phi178.1': State(pc_initial=174 nstack_initial=1),
 '$phi604.1': State(pc_initial=174 nstack_initial=1)}
2025-01-20 15:59:12,096 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi174.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi178.0',
                            State(pc_initial=178 nstack_initial=2))},
             '$phi178.0': {('$phi174.0',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi178.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi604.0': {('$phi174.0',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi604.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))}})
2025-01-20 15:59:12,096 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi174.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi174.0',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi178.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi604.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi604.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))}})
2025-01-20 15:59:12,096 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi174.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi604.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi604.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))}})
2025-01-20 15:59:12,097 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi174.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi604.0': {('$172get_iter.28',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi604.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))}})
2025-01-20 15:59:12,097 - numba.core.byteflow - DEBUG - keep phismap: {'$phi174.0': {('$172get_iter.28', State(pc_initial=0 nstack_initial=0))},
 '$phi178.1': {('$174for_iter.2', State(pc_initial=174 nstack_initial=1))}}
2025-01-20 15:59:12,097 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi174.0': '$172get_iter.28'},
             State(pc_initial=174 nstack_initial=1): {'$phi178.1': '$174for_iter.2'}})
2025-01-20 15:59:12,097 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,097 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'item': '$4load_global.0', 'res': '$14load_attr.2'}), (34, {'idx': 2, 'res': '$34load_global.3'}), (44, {'res': '$slices44.5'}), (46, {'func': '$34load_global.3', 'args': ['$slices44.5'], 'kw_names': None, 'res': '$46call.6'}), (54, {'res': '$const54.7'}), (56, {'items': ['$46call.6', '$const54.7'], 'res': '$56build_tuple.8'}), (58, {'res': '$const58.9'}), (60, {'func': '$14load_attr.2', 'args': ['$56build_tuple.8', '$const58.9'], 'kw_names': None, 'res': '$60call.10'}), (68, {'value': '$60call.10'}), (70, {'idx': 0, 'res': '$70load_global.11'}), (80, {'item': '$70load_global.11', 'res': '$80load_attr.13'}), (100, {'idx': 2, 'res': '$100load_global.14'}), (110, {'res': '$slices110.16'}), (112, {'func': '$100load_global.14', 'args': ['$slices110.16'], 'kw_names': None, 'res': '$112call.17'}), (120, {'items': ['$112call.17'], 'res': '$120build_tuple.18'}), (122, {'res': '$const122.19'}), (124, {'func': '$80load_attr.13', 'args': ['$120build_tuple.18', '$const122.19'], 'kw_names': None, 'res': '$124call.20'}), (132, {'value': '$124call.20'}), (134, {'idx': 3, 'res': '$134load_global.21'}), (144, {'idx': 2, 'res': '$144load_global.23'}), (154, {'res': '$slices154.25'}), (156, {'func': '$144load_global.23', 'args': ['$slices154.25'], 'kw_names': None, 'res': '$156call.26'}), (164, {'func': '$134load_global.21', 'args': ['$156call.26'], 'kw_names': None, 'res': '$164call.27'}), (172, {'value': '$164call.27', 'res': '$172get_iter.28'})), outgoing_phis={'$phi174.0': '$172get_iter.28'}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: ('$172get_iter.28',)})
2025-01-20 15:59:12,098 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=174 nstack_initial=1):
AdaptBlockInfo(insts=((174, {'iterator': '$phi174.0', 'pair': '$174for_iter.1', 'indval': '$174for_iter.2', 'pred': '$174for_iter.3'}),), outgoing_phis={'$phi178.1': '$174for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={604: ('$phi174.0', '$174for_iter.2'), 178: ('$phi174.0', '$174for_iter.2')})
2025-01-20 15:59:12,098 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=178 nstack_initial=2):
AdaptBlockInfo(insts=((178, {'value': '$phi178.1'}), (180, {'res': '$slices180.2'}), (182, {'res': '$p182.3'}), (184, {'index': '$p182.3', 'target': '$slices180.2', 'res': '$184binary_subscr.4'}), (188, {'value': '$184binary_subscr.4'}), (190, {'res': '$si190.5'}), (192, {'res': '$const192.6'}), (194, {'index': '$const192.6', 'target': '$si190.5', 'res': '$194binary_subscr.7'}), (198, {'value': '$194binary_subscr.7'}), (200, {'res': '$si200.8'}), (202, {'res': '$const202.9'}), (204, {'res': '$const204.10'}), (206, {'start': '$const202.9', 'end': '$const204.10', 'container': '$si200.8', 'res': '$206binary_slice.12', 'slicevar': '$206binary_slice.13', 'temp_res': '$206binary_slice.11'}), (208, {'res': '$si208.14'}), (210, {'res': '$const210.15'}), (212, {'res': '$const212.16'}), (214, {'start': '$const210.15', 'end': '$const212.16', 'container': '$si208.14', 'res': '$214binary_slice.18', 'slicevar': '$214binary_slice.19', 'temp_res': '$214binary_slice.17'}), (216, {'value': '$214binary_slice.18'}), (218, {'value': '$206binary_slice.12'}), (220, {'idx': 0, 'res': '$220load_global.20'}), (230, {'item': '$220load_global.20', 'res': '$230load_attr.22'}), (250, {'res': '$masks250.23'}), (252, {'res': '$sr252.24'}), (254, {'res': '$const254.25'}), (256, {'index': '$const254.25', 'target': '$sr252.24', 'res': '$256binary_subscr.26'}), (260, {'res': '$sr260.27'}), (262, {'res': '$const262.28'}), (264, {'index': '$const262.28', 'target': '$sr260.27', 'res': '$264binary_subscr.29'}), (268, {'start': '$256binary_subscr.26', 'stop': '$264binary_subscr.29', 'step': None, 'res': '$268build_slice.31', 'slicevar': '$268build_slice.30'}), (270, {'res': '$sc270.32'}), (272, {'res': '$const272.33'}), (274, {'index': '$const272.33', 'target': '$sc270.32', 'res': '$274binary_subscr.34'}), (278, {'res': '$sc278.35'}), (280, {'res': '$const280.36'}), (282, {'index': '$const280.36', 'target': '$sc278.35', 'res': '$282binary_subscr.37'}), (286, {'start': '$274binary_subscr.34', 'stop': '$282binary_subscr.37', 'step': None, 'res': '$286build_slice.39', 'slicevar': '$286build_slice.38'}), (288, {'items': ['$268build_slice.31', '$286build_slice.39'], 'res': '$288build_tuple.40'}), (290, {'index': '$288build_tuple.40', 'target': '$masks250.23', 'res': '$290binary_subscr.41'}), (294, {'res': '$i294.42'}), (296, {'res': '$const296.43'}), (298, {'op': '+', 'lhs': '$i294.42', 'rhs': '$const296.43', 'res': '$binop_add298.44'}), (302, {'lhs': '$290binary_subscr.41', 'rhs': '$binop_add298.44', 'res': '$302compare_op.45'}), (306, {'func': '$230load_attr.22', 'args': ['$302compare_op.45'], 'kw_names': None, 'res': '$306call.46'}), (314, {'iterable': '$306call.46', 'stores': ['$314unpack_sequence.47', '$314unpack_sequence.48'], 'tupleobj': '$314unpack_sequence.49'}), (318, {'value': '$314unpack_sequence.47'}), (320, {'value': '$314unpack_sequence.48'}), (322, {'res': '$yi322.50'}), (324, {'item': '$yi322.50', 'res': '$324load_attr.52'}), (344, {'func': '$324load_attr.52', 'args': [], 'kw_names': None, 'res': '$344call.53'}), (352, {'value': '$344call.53'}), (354, {'res': '$xi354.54'}), (356, {'item': '$xi354.54', 'res': '$356load_attr.56'}), (376, {'func': '$356load_attr.56', 'args': [], 'kw_names': None, 'res': '$376call.57'}), (384, {'value': '$376call.57'}), (386, {'res': '$xi386.58'}), (388, {'res': '$xmed388.59'}), (390, {'op': '-', 'lhs': '$xi386.58', 'rhs': '$xmed388.59', 'res': '$binop_sub390.60'}), (394, {'res': '$const394.61'}), (396, {'op': '**', 'lhs': '$binop_sub390.60', 'rhs': '$const394.61', 'res': '$binop_pow396.62'}), (400, {'res': '$yi400.63'}), (402, {'res': '$ymed402.64'}), (404, {'op': '-', 'lhs': '$yi400.63', 'rhs': '$ymed402.64', 'res': '$binop_sub404.65'}), (408, {'res': '$const408.66'}), (410, {'op': '**', 'lhs': '$binop_sub404.65', 'rhs': '$const408.66', 'res': '$binop_pow410.67'}), (414, {'op': '+', 'lhs': '$binop_pow396.62', 'rhs': '$binop_pow410.67', 'res': '$binop_add414.68'}), (418, {'item': '$binop_add414.68', 'res': '$418load_attr.70'}), (438, {'func': '$418load_attr.70', 'args': [], 'kw_names': None, 'res': '$438call.71'}), (446, {'value': '$438call.71'}), (448, {'res': '$yi448.72'}), (450, {'res': '$imin450.73'}), (452, {'index': '$imin450.73', 'target': '$yi448.72', 'res': '$452binary_subscr.74'}), (456, {'res': '$sr456.75'}), (458, {'res': '$const458.76'}), (460, {'index': '$const458.76', 'target': '$sr456.75', 'res': '$460binary_subscr.77'}), (464, {'op': '+', 'lhs': '$452binary_subscr.74', 'rhs': '$460binary_subscr.77', 'res': '$binop_add464.78'}), (468, {'value': '$binop_add464.78'}), (470, {'res': '$xi470.79'}), (472, {'res': '$imin472.80'}), (474, {'index': '$imin472.80', 'target': '$xi470.79', 'res': '$474binary_subscr.81'}), (478, {'res': '$sc478.82'}), (480, {'res': '$const480.83'}), (482, {'index': '$const480.83', 'target': '$sc478.82', 'res': '$482binary_subscr.84'}), (486, {'op': '+', 'lhs': '$474binary_subscr.81', 'rhs': '$482binary_subscr.84', 'res': '$binop_add486.85'}), (490, {'value': '$binop_add486.85'}), (492, {'idx': 0, 'res': '$492load_global.86'}), (502, {'item': '$492load_global.86', 'res': '$502load_attr.88'}), (522, {'res': '$ymed522.89'}), (524, {'res': '$xmed524.90'}), (526, {'items': ['$ymed522.89', '$xmed524.90'], 'res': '$526build_list.91'}), (528, {'func': '$502load_attr.88', 'args': ['$526build_list.91'], 'kw_names': None, 'res': '$528call.92'}), (536, {'res': '$centers536.93'}), (538, {'res': '$p538.94'}), (540, {'target': '$centers536.93', 'index': '$p538.94', 'value': '$528call.92'}), (544, {'res': '$sr544.95'}), (546, {'res': '$const546.96'}), (548, {'index': '$const546.96', 'target': '$sr544.95', 'res': '$548binary_subscr.97'}), (552, {'res': '$sr552.98'}), (554, {'res': '$const554.99'}), (556, {'index': '$const554.99', 'target': '$sr552.98', 'res': '$556binary_subscr.100'}), (560, {'op': '-', 'lhs': '$548binary_subscr.97', 'rhs': '$556binary_subscr.100', 'res': '$binop_sub560.101'}), (564, {'res': '$sc564.102'}), (566, {'res': '$const566.103'}), (568, {'index': '$const566.103', 'target': '$sc564.102', 'res': '$568binary_subscr.104'}), (572, {'res': '$sc572.105'}), (574, {'res': '$const574.106'}), (576, {'index': '$const574.106', 'target': '$sc572.105', 'res': '$576binary_subscr.107'}), (580, {'op': '-', 'lhs': '$568binary_subscr.104', 'rhs': '$576binary_subscr.107', 'res': '$binop_sub580.108'}), (584, {'op': '+', 'lhs': '$binop_sub560.101', 'rhs': '$binop_sub580.108', 'res': '$binop_add584.109'}), (588, {'res': '$const588.110'}), (590, {'op': '+', 'lhs': '$binop_add584.109', 'rhs': '$const588.110', 'res': '$binop_add590.111'}), (594, {'res': '$ext594.112'}), (596, {'res': '$p596.113'}), (598, {'target': '$ext594.112', 'index': '$p596.113', 'value': '$binop_add590.111'}), (602, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: ('$phi178.0',)})
2025-01-20 15:59:12,098 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=604 nstack_initial=2):
AdaptBlockInfo(insts=((606, {'res': '$centers606.2'}), (608, {'res': '$ext608.3'}), (610, {'items': ['$centers606.2', '$ext608.3'], 'res': '$610build_tuple.4'}), (612, {'retval': '$610build_tuple.4', 'castval': '$612return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,100 - numba.core.interpreter - DEBUG - label 0:
    masks = arg(0, name=masks)               ['masks']
    slices = arg(1, name=slices)             ['slices']
    $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>) ['$4load_global.0']
    $14load_attr.2 = getattr(value=$4load_global.0, attr=zeros) ['$14load_attr.2', '$4load_global.0']
    $34load_global.3 = global(len: <built-in function len>) ['$34load_global.3']
    $46call.6 = call $34load_global.3(slices, func=$34load_global.3, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.3', '$46call.6', 'slices']
    $const54.7 = const(int, 2)               ['$const54.7']
    $56build_tuple.8 = build_tuple(items=[Var($46call.6, dynamics.py:112), Var($const54.7, dynamics.py:112)]) ['$46call.6', '$56build_tuple.8', '$const54.7']
    $const58.9 = const(str, int32)           ['$const58.9']
    centers = call $14load_attr.2($56build_tuple.8, $const58.9, func=$14load_attr.2, args=[Var($56build_tuple.8, dynamics.py:112), Var($const58.9, dynamics.py:112)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_attr.2', '$56build_tuple.8', '$const58.9', 'centers']
    $70load_global.11 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>) ['$70load_global.11']
    $80load_attr.13 = getattr(value=$70load_global.11, attr=zeros) ['$70load_global.11', '$80load_attr.13']
    $100load_global.14 = global(len: <built-in function len>) ['$100load_global.14']
    $112call.17 = call $100load_global.14(slices, func=$100load_global.14, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_global.14', '$112call.17', 'slices']
    $120build_tuple.18 = build_tuple(items=[Var($112call.17, dynamics.py:113)]) ['$112call.17', '$120build_tuple.18']
    $const122.19 = const(str, int32)         ['$const122.19']
    ext = call $80load_attr.13($120build_tuple.18, $const122.19, func=$80load_attr.13, args=[Var($120build_tuple.18, dynamics.py:113), Var($const122.19, dynamics.py:113)], kws=(), vararg=None, varkwarg=None, target=None) ['$120build_tuple.18', '$80load_attr.13', '$const122.19', 'ext']
    $134load_global.21 = global(prange: <class 'numba.misc.special.prange'>) ['$134load_global.21']
    $144load_global.23 = global(len: <built-in function len>) ['$144load_global.23']
    $156call.26 = call $144load_global.23(slices, func=$144load_global.23, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None) ['$144load_global.23', '$156call.26', 'slices']
    $164call.27 = call $134load_global.21($156call.26, func=$134load_global.21, args=[Var($156call.26, dynamics.py:114)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.21', '$156call.26', '$164call.27']
    $172get_iter.28 = getiter(value=$164call.27) ['$164call.27', '$172get_iter.28']
    $phi174.0 = $172get_iter.28              ['$172get_iter.28', '$phi174.0']
    jump 174                                 []
label 174:
    $174for_iter.1 = iternext(value=$phi174.0) ['$174for_iter.1', '$phi174.0']
    $174for_iter.2 = pair_first(value=$174for_iter.1) ['$174for_iter.1', '$174for_iter.2']
    $174for_iter.3 = pair_second(value=$174for_iter.1) ['$174for_iter.1', '$174for_iter.3']
    $phi178.1 = $174for_iter.2               ['$174for_iter.2', '$phi178.1']
    branch $174for_iter.3, 178, 604          ['$174for_iter.3']
label 178:
    p = $phi178.1                            ['$phi178.1', 'p']
    si = getitem(value=slices, index=p, fn=<built-in function getitem>) ['p', 'si', 'slices']
    $const192.6 = const(int, 0)              ['$const192.6']
    i = getitem(value=si, index=$const192.6, fn=<built-in function getitem>) ['$const192.6', 'i', 'si']
    $const202.9 = const(int, 1)              ['$const202.9']
    $const204.10 = const(int, 3)             ['$const204.10']
    $206binary_slice.13 = global(slice: <class 'slice'>) ['$206binary_slice.13']
    $206binary_slice.11 = call $206binary_slice.13($const202.9, $const204.10, func=$206binary_slice.13, args=(Var($const202.9, dynamics.py:117), Var($const204.10, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None) ['$206binary_slice.11', '$206binary_slice.13', '$const202.9', '$const204.10']
    $206binary_slice.12 = getitem(value=si, index=$206binary_slice.11, fn=<built-in function getitem>) ['$206binary_slice.11', '$206binary_slice.12', 'si']
    $const210.15 = const(int, 3)             ['$const210.15']
    $const212.16 = const(int, 5)             ['$const212.16']
    $214binary_slice.19 = global(slice: <class 'slice'>) ['$214binary_slice.19']
    $214binary_slice.17 = call $214binary_slice.19($const210.15, $const212.16, func=$214binary_slice.19, args=(Var($const210.15, dynamics.py:117), Var($const212.16, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None) ['$214binary_slice.17', '$214binary_slice.19', '$const210.15', '$const212.16']
    sc = getitem(value=si, index=$214binary_slice.17, fn=<built-in function getitem>) ['$214binary_slice.17', 'sc', 'si']
    sr = $206binary_slice.12                 ['$206binary_slice.12', 'sr']
    $220load_global.20 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>) ['$220load_global.20']
    $230load_attr.22 = getattr(value=$220load_global.20, attr=nonzero) ['$220load_global.20', '$230load_attr.22']
    $const254.25 = const(int, 0)             ['$const254.25']
    $256binary_subscr.26 = getitem(value=sr, index=$const254.25, fn=<built-in function getitem>) ['$256binary_subscr.26', '$const254.25', 'sr']
    $const262.28 = const(int, -1)            ['$const262.28']
    $264binary_subscr.29 = getitem(value=sr, index=$const262.28, fn=<built-in function getitem>) ['$264binary_subscr.29', '$const262.28', 'sr']
    $268build_slice.30 = global(slice: <class 'slice'>) ['$268build_slice.30']
    $268build_slice.31 = call $268build_slice.30($256binary_subscr.26, $264binary_subscr.29, func=$268build_slice.30, args=(Var($256binary_subscr.26, dynamics.py:119), Var($264binary_subscr.29, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None) ['$256binary_subscr.26', '$264binary_subscr.29', '$268build_slice.30', '$268build_slice.31']
    $const272.33 = const(int, 0)             ['$const272.33']
    $274binary_subscr.34 = getitem(value=sc, index=$const272.33, fn=<built-in function getitem>) ['$274binary_subscr.34', '$const272.33', 'sc']
    $const280.36 = const(int, -1)            ['$const280.36']
    $282binary_subscr.37 = getitem(value=sc, index=$const280.36, fn=<built-in function getitem>) ['$282binary_subscr.37', '$const280.36', 'sc']
    $286build_slice.38 = global(slice: <class 'slice'>) ['$286build_slice.38']
    $286build_slice.39 = call $286build_slice.38($274binary_subscr.34, $282binary_subscr.37, func=$286build_slice.38, args=(Var($274binary_subscr.34, dynamics.py:119), Var($282binary_subscr.37, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None) ['$274binary_subscr.34', '$282binary_subscr.37', '$286build_slice.38', '$286build_slice.39']
    $288build_tuple.40 = build_tuple(items=[Var($268build_slice.31, dynamics.py:119), Var($286build_slice.39, dynamics.py:119)]) ['$268build_slice.31', '$286build_slice.39', '$288build_tuple.40']
    $290binary_subscr.41 = getitem(value=masks, index=$288build_tuple.40, fn=<built-in function getitem>) ['$288build_tuple.40', '$290binary_subscr.41', 'masks']
    $const296.43 = const(int, 1)             ['$const296.43']
    $binop_add298.44 = i + $const296.43      ['$binop_add298.44', '$const296.43', 'i']
    $302compare_op.45 = $290binary_subscr.41 == $binop_add298.44 ['$290binary_subscr.41', '$302compare_op.45', '$binop_add298.44']
    $306call.46 = call $230load_attr.22($302compare_op.45, func=$230load_attr.22, args=[Var($302compare_op.45, dynamics.py:119)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_attr.22', '$302compare_op.45', '$306call.46']
    $314unpack_sequence.49 = exhaust_iter(value=$306call.46, count=2) ['$306call.46', '$314unpack_sequence.49']
    $314unpack_sequence.47 = static_getitem(value=$314unpack_sequence.49, index=0, index_var=None, fn=<built-in function getitem>) ['$314unpack_sequence.47', '$314unpack_sequence.49']
    $314unpack_sequence.48 = static_getitem(value=$314unpack_sequence.49, index=1, index_var=None, fn=<built-in function getitem>) ['$314unpack_sequence.48', '$314unpack_sequence.49']
    yi = $314unpack_sequence.47              ['$314unpack_sequence.47', 'yi']
    xi = $314unpack_sequence.48              ['$314unpack_sequence.48', 'xi']
    $324load_attr.52 = getattr(value=yi, attr=mean) ['$324load_attr.52', 'yi']
    ymed = call $324load_attr.52(func=$324load_attr.52, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$324load_attr.52', 'ymed']
    $356load_attr.56 = getattr(value=xi, attr=mean) ['$356load_attr.56', 'xi']
    xmed = call $356load_attr.56(func=$356load_attr.56, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$356load_attr.56', 'xmed']
    $binop_sub390.60 = xi - xmed             ['$binop_sub390.60', 'xi', 'xmed']
    $const394.61 = const(int, 2)             ['$const394.61']
    $binop_pow396.62 = $binop_sub390.60 ** $const394.61 ['$binop_pow396.62', '$binop_sub390.60', '$const394.61']
    $binop_sub404.65 = yi - ymed             ['$binop_sub404.65', 'yi', 'ymed']
    $const408.66 = const(int, 2)             ['$const408.66']
    $binop_pow410.67 = $binop_sub404.65 ** $const408.66 ['$binop_pow410.67', '$binop_sub404.65', '$const408.66']
    $binop_add414.68 = $binop_pow396.62 + $binop_pow410.67 ['$binop_add414.68', '$binop_pow396.62', '$binop_pow410.67']
    $418load_attr.70 = getattr(value=$binop_add414.68, attr=argmin) ['$418load_attr.70', '$binop_add414.68']
    imin = call $418load_attr.70(func=$418load_attr.70, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$418load_attr.70', 'imin']
    $452binary_subscr.74 = getitem(value=yi, index=imin, fn=<built-in function getitem>) ['$452binary_subscr.74', 'imin', 'yi']
    $const458.76 = const(int, 0)             ['$const458.76']
    $460binary_subscr.77 = getitem(value=sr, index=$const458.76, fn=<built-in function getitem>) ['$460binary_subscr.77', '$const458.76', 'sr']
    ymed = $452binary_subscr.74 + $460binary_subscr.77 ['$452binary_subscr.74', '$460binary_subscr.77', 'ymed']
    $474binary_subscr.81 = getitem(value=xi, index=imin, fn=<built-in function getitem>) ['$474binary_subscr.81', 'imin', 'xi']
    $const480.83 = const(int, 0)             ['$const480.83']
    $482binary_subscr.84 = getitem(value=sc, index=$const480.83, fn=<built-in function getitem>) ['$482binary_subscr.84', '$const480.83', 'sc']
    xmed = $474binary_subscr.81 + $482binary_subscr.84 ['$474binary_subscr.81', '$482binary_subscr.84', 'xmed']
    $492load_global.86 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>) ['$492load_global.86']
    $502load_attr.88 = getattr(value=$492load_global.86, attr=array) ['$492load_global.86', '$502load_attr.88']
    $526build_list.91 = build_list(items=[Var(ymed, dynamics.py:120), Var(xmed, dynamics.py:121)]) ['$526build_list.91', 'xmed', 'ymed']
    $528call.92 = call $502load_attr.88($526build_list.91, func=$502load_attr.88, args=[Var($526build_list.91, dynamics.py:126)], kws=(), vararg=None, varkwarg=None, target=None) ['$502load_attr.88', '$526build_list.91', '$528call.92']
    centers[p] = $528call.92                 ['$528call.92', 'centers', 'p']
    $const546.96 = const(int, -1)            ['$const546.96']
    $548binary_subscr.97 = getitem(value=sr, index=$const546.96, fn=<built-in function getitem>) ['$548binary_subscr.97', '$const546.96', 'sr']
    $const554.99 = const(int, 0)             ['$const554.99']
    $556binary_subscr.100 = getitem(value=sr, index=$const554.99, fn=<built-in function getitem>) ['$556binary_subscr.100', '$const554.99', 'sr']
    $binop_sub560.101 = $548binary_subscr.97 - $556binary_subscr.100 ['$548binary_subscr.97', '$556binary_subscr.100', '$binop_sub560.101']
    $const566.103 = const(int, -1)           ['$const566.103']
    $568binary_subscr.104 = getitem(value=sc, index=$const566.103, fn=<built-in function getitem>) ['$568binary_subscr.104', '$const566.103', 'sc']
    $const574.106 = const(int, 0)            ['$const574.106']
    $576binary_subscr.107 = getitem(value=sc, index=$const574.106, fn=<built-in function getitem>) ['$576binary_subscr.107', '$const574.106', 'sc']
    $binop_sub580.108 = $568binary_subscr.104 - $576binary_subscr.107 ['$568binary_subscr.104', '$576binary_subscr.107', '$binop_sub580.108']
    $binop_add584.109 = $binop_sub560.101 + $binop_sub580.108 ['$binop_add584.109', '$binop_sub560.101', '$binop_sub580.108']
    $const588.110 = const(int, 2)            ['$const588.110']
    $binop_add590.111 = $binop_add584.109 + $const588.110 ['$binop_add584.109', '$binop_add590.111', '$const588.110']
    ext[p] = $binop_add590.111               ['$binop_add590.111', 'ext', 'p']
    jump 174                                 []
label 604:
    $610build_tuple.4 = build_tuple(items=[Var(centers, dynamics.py:112), Var(ext, dynamics.py:113)]) ['$610build_tuple.4', 'centers', 'ext']
    $612return_value.5 = cast(value=$610build_tuple.4) ['$610build_tuple.4', '$612return_value.5']
    return $612return_value.5                ['$612return_value.5']

2025-01-20 15:59:12,108 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,108 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528f1b5c0>
2025-01-20 15:59:12,108 - numba.core.ssa - DEBUG - on stmt: masks = arg(0, name=masks)
2025-01-20 15:59:12,108 - numba.core.ssa - DEBUG - on stmt: slices = arg(1, name=slices)
2025-01-20 15:59:12,108 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $14load_attr.2 = getattr(value=$4load_global.0, attr=zeros)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $34load_global.3 = global(len: <built-in function len>)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $46call.6 = call $34load_global.3(slices, func=$34load_global.3, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $const54.7 = const(int, 2)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $56build_tuple.8 = build_tuple(items=[Var($46call.6, dynamics.py:112), Var($const54.7, dynamics.py:112)])
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $const58.9 = const(str, int32)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: centers = call $14load_attr.2($56build_tuple.8, $const58.9, func=$14load_attr.2, args=[Var($56build_tuple.8, dynamics.py:112), Var($const58.9, dynamics.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $70load_global.11 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $80load_attr.13 = getattr(value=$70load_global.11, attr=zeros)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $100load_global.14 = global(len: <built-in function len>)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $112call.17 = call $100load_global.14(slices, func=$100load_global.14, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $120build_tuple.18 = build_tuple(items=[Var($112call.17, dynamics.py:113)])
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $const122.19 = const(str, int32)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: ext = call $80load_attr.13($120build_tuple.18, $const122.19, func=$80load_attr.13, args=[Var($120build_tuple.18, dynamics.py:113), Var($const122.19, dynamics.py:113)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $134load_global.21 = global(prange: <class 'numba.misc.special.prange'>)
2025-01-20 15:59:12,109 - numba.core.ssa - DEBUG - on stmt: $144load_global.23 = global(len: <built-in function len>)
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: $156call.26 = call $144load_global.23(slices, func=$144load_global.23, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: $164call.27 = call $134load_global.21($156call.26, func=$134load_global.21, args=[Var($156call.26, dynamics.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: $172get_iter.28 = getiter(value=$164call.27)
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.28
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 174
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528f1b5c0>
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 604
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 178
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528f1b5c0>
2025-01-20 15:59:12,110 - numba.core.ssa - DEBUG - on stmt: p = $phi178.1
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: si = getitem(value=slices, index=p, fn=<built-in function getitem>)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $const192.6 = const(int, 0)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: i = static_getitem(value=si, index=0, index_var=$const192.6, fn=<built-in function getitem>)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $const202.9 = const(int, 1)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $const204.10 = const(int, 3)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.13 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.11 = call $206binary_slice.13($const202.9, $const204.10, func=$206binary_slice.13, args=(Var($const202.9, dynamics.py:117), Var($const204.10, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.12 = static_getitem(value=si, index=slice(1, 3, None), index_var=$206binary_slice.11, fn=<built-in function getitem>)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $const210.15 = const(int, 3)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $const212.16 = const(int, 5)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.19 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.17 = call $214binary_slice.19($const210.15, $const212.16, func=$214binary_slice.19, args=(Var($const210.15, dynamics.py:117), Var($const212.16, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: sc = static_getitem(value=si, index=slice(3, 5, None), index_var=$214binary_slice.17, fn=<built-in function getitem>)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: sr = $206binary_slice.12
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $220load_global.20 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,111 - numba.core.ssa - DEBUG - on stmt: $230load_attr.22 = getattr(value=$220load_global.20, attr=nonzero)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $const254.25 = const(int, 0)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $256binary_subscr.26 = static_getitem(value=sr, index=0, index_var=$const254.25, fn=<built-in function getitem>)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $const262.28 = const(int, -1)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $264binary_subscr.29 = static_getitem(value=sr, index=-1, index_var=$const262.28, fn=<built-in function getitem>)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $268build_slice.30 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $268build_slice.31 = call $268build_slice.30($256binary_subscr.26, $264binary_subscr.29, func=$268build_slice.30, args=(Var($256binary_subscr.26, dynamics.py:119), Var($264binary_subscr.29, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $const272.33 = const(int, 0)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $274binary_subscr.34 = static_getitem(value=sc, index=0, index_var=$const272.33, fn=<built-in function getitem>)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $const280.36 = const(int, -1)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $282binary_subscr.37 = static_getitem(value=sc, index=-1, index_var=$const280.36, fn=<built-in function getitem>)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $286build_slice.38 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $286build_slice.39 = call $286build_slice.38($274binary_subscr.34, $282binary_subscr.37, func=$286build_slice.38, args=(Var($274binary_subscr.34, dynamics.py:119), Var($282binary_subscr.37, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $288build_tuple.40 = build_tuple(items=[Var($268build_slice.31, dynamics.py:119), Var($286build_slice.39, dynamics.py:119)])
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $290binary_subscr.41 = getitem(value=masks, index=$288build_tuple.40, fn=<built-in function getitem>)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $const296.43 = const(int, 1)
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $binop_add298.44 = i + $const296.43
2025-01-20 15:59:12,112 - numba.core.ssa - DEBUG - on stmt: $302compare_op.45 = $290binary_subscr.41 == $binop_add298.44
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $306call.46 = call $230load_attr.22($302compare_op.45, func=$230load_attr.22, args=[Var($302compare_op.45, dynamics.py:119)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.49 = exhaust_iter(value=$306call.46, count=2)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.47 = static_getitem(value=$314unpack_sequence.49, index=0, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.48 = static_getitem(value=$314unpack_sequence.49, index=1, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: yi = $314unpack_sequence.47
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: xi = $314unpack_sequence.48
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $324load_attr.52 = getattr(value=yi, attr=mean)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: ymed = call $324load_attr.52(func=$324load_attr.52, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $356load_attr.56 = getattr(value=xi, attr=mean)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: xmed = call $356load_attr.56(func=$356load_attr.56, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $binop_sub390.60 = xi - xmed
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $const394.61 = const(int, 2)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $binop_pow396.62 = $binop_sub390.60 ** $const394.61
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $binop_sub404.65 = yi - ymed
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $const408.66 = const(int, 2)
2025-01-20 15:59:12,113 - numba.core.ssa - DEBUG - on stmt: $binop_pow410.67 = $binop_sub404.65 ** $const408.66
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $binop_add414.68 = $binop_pow396.62 + $binop_pow410.67
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $418load_attr.70 = getattr(value=$binop_add414.68, attr=argmin)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: imin = call $418load_attr.70(func=$418load_attr.70, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $452binary_subscr.74 = getitem(value=yi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $const458.76 = const(int, 0)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $460binary_subscr.77 = static_getitem(value=sr, index=0, index_var=$const458.76, fn=<built-in function getitem>)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: ymed = $452binary_subscr.74 + $460binary_subscr.77
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $474binary_subscr.81 = getitem(value=xi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $const480.83 = const(int, 0)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $482binary_subscr.84 = static_getitem(value=sc, index=0, index_var=$const480.83, fn=<built-in function getitem>)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: xmed = $474binary_subscr.81 + $482binary_subscr.84
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $492load_global.86 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $502load_attr.88 = getattr(value=$492load_global.86, attr=array)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $526build_list.91 = build_list(items=[Var(ymed, dynamics.py:120), Var(xmed, dynamics.py:121)])
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: $528call.92 = call $502load_attr.88($526build_list.91, func=$502load_attr.88, args=[Var($526build_list.91, dynamics.py:126)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,114 - numba.core.ssa - DEBUG - on stmt: centers[p] = $528call.92
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $const546.96 = const(int, -1)
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $548binary_subscr.97 = static_getitem(value=sr, index=-1, index_var=$const546.96, fn=<built-in function getitem>)
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $const554.99 = const(int, 0)
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $556binary_subscr.100 = static_getitem(value=sr, index=0, index_var=$const554.99, fn=<built-in function getitem>)
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $binop_sub560.101 = $548binary_subscr.97 - $556binary_subscr.100
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $const566.103 = const(int, -1)
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $568binary_subscr.104 = static_getitem(value=sc, index=-1, index_var=$const566.103, fn=<built-in function getitem>)
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $const574.106 = const(int, 0)
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $576binary_subscr.107 = static_getitem(value=sc, index=0, index_var=$const574.106, fn=<built-in function getitem>)
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $binop_sub580.108 = $568binary_subscr.104 - $576binary_subscr.107
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $binop_add584.109 = $binop_sub560.101 + $binop_sub580.108
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $const588.110 = const(int, 2)
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $binop_add590.111 = $binop_add584.109 + $const588.110
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: ext[p] = $binop_add590.111
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 604
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528f1b5c0>
2025-01-20 15:59:12,115 - numba.core.ssa - DEBUG - on stmt: $610build_tuple.4 = build_tuple(items=[Var(centers, dynamics.py:112), Var(ext, dynamics.py:113)])
2025-01-20 15:59:12,116 - numba.core.ssa - DEBUG - on stmt: $612return_value.5 = cast(value=$610build_tuple.4)
2025-01-20 15:59:12,116 - numba.core.ssa - DEBUG - on stmt: return $612return_value.5
2025-01-20 15:59:12,117 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_global.14': [(<numba.core.ir.Assign object at 0x7635299fd520>,
                                     0)],
             '$112call.17': [(<numba.core.ir.Assign object at 0x7635299ffc20>,
                              0)],
             '$120build_tuple.18': [(<numba.core.ir.Assign object at 0x763528f26750>,
                                     0)],
             '$134load_global.21': [(<numba.core.ir.Assign object at 0x763528f249e0>,
                                     0)],
             '$144load_global.23': [(<numba.core.ir.Assign object at 0x763528f27290>,
                                     0)],
             '$14load_attr.2': [(<numba.core.ir.Assign object at 0x7635299e0410>,
                                 0)],
             '$156call.26': [(<numba.core.ir.Assign object at 0x763528f25820>,
                              0)],
             '$164call.27': [(<numba.core.ir.Assign object at 0x763528f25e80>,
                              0)],
             '$172get_iter.28': [(<numba.core.ir.Assign object at 0x763528f27c80>,
                                  0)],
             '$174for_iter.1': [(<numba.core.ir.Assign object at 0x763528f24bf0>,
                                 174)],
             '$174for_iter.2': [(<numba.core.ir.Assign object at 0x763528f275c0>,
                                 174)],
             '$174for_iter.3': [(<numba.core.ir.Assign object at 0x763528f26990>,
                                 174)],
             '$206binary_slice.11': [(<numba.core.ir.Assign object at 0x763528f26060>,
                                      178)],
             '$206binary_slice.12': [(<numba.core.ir.Assign object at 0x7635299e09b0>,
                                      178)],
             '$206binary_slice.13': [(<numba.core.ir.Assign object at 0x763528f263f0>,
                                      178)],
             '$214binary_slice.17': [(<numba.core.ir.Assign object at 0x763528f24350>,
                                      178)],
             '$214binary_slice.19': [(<numba.core.ir.Assign object at 0x763528f246b0>,
                                      178)],
             '$220load_global.20': [(<numba.core.ir.Assign object at 0x763528f25be0>,
                                     178)],
             '$230load_attr.22': [(<numba.core.ir.Assign object at 0x763528f26300>,
                                   178)],
             '$256binary_subscr.26': [(<numba.core.ir.Assign object at 0x7635299e3620>,
                                       178)],
             '$264binary_subscr.29': [(<numba.core.ir.Assign object at 0x7635299e22d0>,
                                       178)],
             '$268build_slice.30': [(<numba.core.ir.Assign object at 0x763528fa0470>,
                                     178)],
             '$268build_slice.31': [(<numba.core.ir.Assign object at 0x763528fa0590>,
                                     178)],
             '$274binary_subscr.34': [(<numba.core.ir.Assign object at 0x763528fa1700>,
                                       178)],
             '$282binary_subscr.37': [(<numba.core.ir.Assign object at 0x763528fa3680>,
                                       178)],
             '$286build_slice.38': [(<numba.core.ir.Assign object at 0x763528fa0e00>,
                                     178)],
             '$286build_slice.39': [(<numba.core.ir.Assign object at 0x763528fa0f20>,
                                     178)],
             '$288build_tuple.40': [(<numba.core.ir.Assign object at 0x763528fa1040>,
                                     178)],
             '$290binary_subscr.41': [(<numba.core.ir.Assign object at 0x763528fa11c0>,
                                       178)],
             '$302compare_op.45': [(<numba.core.ir.Assign object at 0x763528fa16a0>,
                                    178)],
             '$306call.46': [(<numba.core.ir.Assign object at 0x763528fa1820>,
                              178)],
             '$314unpack_sequence.47': [(<numba.core.ir.Assign object at 0x763528fa1a60>,
                                         178)],
             '$314unpack_sequence.48': [(<numba.core.ir.Assign object at 0x763528fa1b80>,
                                         178)],
             '$314unpack_sequence.49': [(<numba.core.ir.Assign object at 0x763528fa1910>,
                                         178)],
             '$324load_attr.52': [(<numba.core.ir.Assign object at 0x763528fa1f40>,
                                   178)],
             '$34load_global.3': [(<numba.core.ir.Assign object at 0x763528f1bbf0>,
                                   0)],
             '$356load_attr.56': [(<numba.core.ir.Assign object at 0x763528fa2390>,
                                   178)],
             '$418load_attr.70': [(<numba.core.ir.Assign object at 0x763528fa33e0>,
                                   178)],
             '$452binary_subscr.74': [(<numba.core.ir.Assign object at 0x763528fa39b0>,
                                       178)],
             '$460binary_subscr.77': [(<numba.core.ir.Assign object at 0x763528fa2270>,
                                       178)],
             '$46call.6': [(<numba.core.ir.Assign object at 0x763528f196d0>,
                            0)],
             '$474binary_subscr.81': [(<numba.core.ir.Assign object at 0x763528fcc200>,
                                       178)],
             '$482binary_subscr.84': [(<numba.core.ir.Assign object at 0x763528fa2c90>,
                                       178)],
             '$492load_global.86': [(<numba.core.ir.Assign object at 0x763528fcc800>,
                                     178)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x7635299e1be0>,
                                  0)],
             '$502load_attr.88': [(<numba.core.ir.Assign object at 0x763528fcc950>,
                                   178)],
             '$526build_list.91': [(<numba.core.ir.Assign object at 0x763528fccc50>,
                                    178)],
             '$528call.92': [(<numba.core.ir.Assign object at 0x763528fcce00>,
                              178)],
             '$548binary_subscr.97': [(<numba.core.ir.Assign object at 0x763528fa3740>,
                                       178)],
             '$556binary_subscr.100': [(<numba.core.ir.Assign object at 0x763528fa27e0>,
                                        178)],
             '$568binary_subscr.104': [(<numba.core.ir.Assign object at 0x763528fa21b0>,
                                        178)],
             '$56build_tuple.8': [(<numba.core.ir.Assign object at 0x763528f1bb90>,
                                   0)],
             '$576binary_subscr.107': [(<numba.core.ir.Assign object at 0x763528f24bc0>,
                                        178)],
             '$610build_tuple.4': [(<numba.core.ir.Assign object at 0x763528f26e10>,
                                    604)],
             '$612return_value.5': [(<numba.core.ir.Assign object at 0x763528fa1280>,
                                     604)],
             '$70load_global.11': [(<numba.core.ir.Assign object at 0x7635299fcad0>,
                                    0)],
             '$80load_attr.13': [(<numba.core.ir.Assign object at 0x7635299fe120>,
                                  0)],
             '$binop_add298.44': [(<numba.core.ir.Assign object at 0x763528fa1550>,
                                   178)],
             '$binop_add414.68': [(<numba.core.ir.Assign object at 0x763528fa32c0>,
                                   178)],
             '$binop_add584.109': [(<numba.core.ir.Assign object at 0x763528fce1e0>,
                                    178)],
             '$binop_add590.111': [(<numba.core.ir.Assign object at 0x763528fce450>,
                                    178)],
             '$binop_pow396.62': [(<numba.core.ir.Assign object at 0x763528fa2bd0>,
                                   178)],
             '$binop_pow410.67': [(<numba.core.ir.Assign object at 0x763528fa3170>,
                                   178)],
             '$binop_sub390.60': [(<numba.core.ir.Assign object at 0x763528fa2960>,
                                   178)],
             '$binop_sub404.65': [(<numba.core.ir.Assign object at 0x763528fa2f00>,
                                   178)],
             '$binop_sub560.101': [(<numba.core.ir.Assign object at 0x763528fcd880>,
                                    178)],
             '$binop_sub580.108': [(<numba.core.ir.Assign object at 0x763528fce090>,
                                    178)],
             '$const122.19': [(<numba.core.ir.Assign object at 0x763528f24410>,
                               0)],
             '$const192.6': [(<numba.core.ir.Assign object at 0x763528f27770>,
                              178)],
             '$const202.9': [(<numba.core.ir.Assign object at 0x763528f26c00>,
                              178)],
             '$const204.10': [(<numba.core.ir.Assign object at 0x763528f26840>,
                               178)],
             '$const210.15': [(<numba.core.ir.Assign object at 0x763528f25610>,
                               178)],
             '$const212.16': [(<numba.core.ir.Assign object at 0x763528f24cb0>,
                               178)],
             '$const254.25': [(<numba.core.ir.Assign object at 0x763528f273b0>,
                               178)],
             '$const262.28': [(<numba.core.ir.Assign object at 0x763528fa01d0>,
                               178)],
             '$const272.33': [(<numba.core.ir.Assign object at 0x763528fa07d0>,
                               178)],
             '$const280.36': [(<numba.core.ir.Assign object at 0x763528fa0b60>,
                               178)],
             '$const296.43': [(<numba.core.ir.Assign object at 0x763528fa13d0>,
                               178)],
             '$const394.61': [(<numba.core.ir.Assign object at 0x763528fa2a80>,
                               178)],
             '$const408.66': [(<numba.core.ir.Assign object at 0x763528fa2ff0>,
                               178)],
             '$const458.76': [(<numba.core.ir.Assign object at 0x763528fa3b90>,
                               178)],
             '$const480.83': [(<numba.core.ir.Assign object at 0x763528fcc410>,
                               178)],
             '$const54.7': [(<numba.core.ir.Assign object at 0x763528f19340>,
                             0)],
             '$const546.96': [(<numba.core.ir.Assign object at 0x763528fcd220>,
                               178)],
             '$const554.99': [(<numba.core.ir.Assign object at 0x763528fcd5b0>,
                               178)],
             '$const566.103': [(<numba.core.ir.Assign object at 0x763528fcda60>,
                                178)],
             '$const574.106': [(<numba.core.ir.Assign object at 0x763528fcddf0>,
                                178)],
             '$const58.9': [(<numba.core.ir.Assign object at 0x763528f1a2a0>,
                             0)],
             '$const588.110': [(<numba.core.ir.Assign object at 0x763528fce300>,
                                178)],
             '$phi174.0': [(<numba.core.ir.Assign object at 0x7635299fc800>,
                            0)],
             '$phi178.1': [(<numba.core.ir.Assign object at 0x763528f26090>,
                            174)],
             'centers': [(<numba.core.ir.Assign object at 0x7635299fc980>, 0)],
             'ext': [(<numba.core.ir.Assign object at 0x763528f26cc0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7635299e0a70>, 178)],
             'imin': [(<numba.core.ir.Assign object at 0x763528fa3590>, 178)],
             'masks': [(<numba.core.ir.Assign object at 0x7635299e1970>, 0)],
             'p': [(<numba.core.ir.Assign object at 0x763528f27aa0>, 178)],
             'sc': [(<numba.core.ir.Assign object at 0x7635299e3fe0>, 178)],
             'si': [(<numba.core.ir.Assign object at 0x763528f27e90>, 178)],
             'slices': [(<numba.core.ir.Assign object at 0x7635299e0b60>, 0)],
             'sr': [(<numba.core.ir.Assign object at 0x763528f254f0>, 178)],
             'xi': [(<numba.core.ir.Assign object at 0x763528fa1d00>, 178)],
             'xmed': [(<numba.core.ir.Assign object at 0x763528fa2540>, 178),
                      (<numba.core.ir.Assign object at 0x763528fcc650>, 178)],
             'yi': [(<numba.core.ir.Assign object at 0x763528fa1c10>, 178)],
             'ymed': [(<numba.core.ir.Assign object at 0x763528fa20f0>, 178),
                      (<numba.core.ir.Assign object at 0x763528fa3e30>, 178)]})
2025-01-20 15:59:12,117 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528fa0080>
2025-01-20 15:59:12,117 - numba.core.ssa - DEBUG - Fix SSA violator on var ymed
2025-01-20 15:59:12,117 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,117 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299e82f0>
2025-01-20 15:59:12,117 - numba.core.ssa - DEBUG - on stmt: masks = arg(0, name=masks)
2025-01-20 15:59:12,117 - numba.core.ssa - DEBUG - on stmt: slices = arg(1, name=slices)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $14load_attr.2 = getattr(value=$4load_global.0, attr=zeros)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $34load_global.3 = global(len: <built-in function len>)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $46call.6 = call $34load_global.3(slices, func=$34load_global.3, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $const54.7 = const(int, 2)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $56build_tuple.8 = build_tuple(items=[Var($46call.6, dynamics.py:112), Var($const54.7, dynamics.py:112)])
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $const58.9 = const(str, int32)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: centers = call $14load_attr.2($56build_tuple.8, $const58.9, func=$14load_attr.2, args=[Var($56build_tuple.8, dynamics.py:112), Var($const58.9, dynamics.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $70load_global.11 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $80load_attr.13 = getattr(value=$70load_global.11, attr=zeros)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $100load_global.14 = global(len: <built-in function len>)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $112call.17 = call $100load_global.14(slices, func=$100load_global.14, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $120build_tuple.18 = build_tuple(items=[Var($112call.17, dynamics.py:113)])
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $const122.19 = const(str, int32)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: ext = call $80load_attr.13($120build_tuple.18, $const122.19, func=$80load_attr.13, args=[Var($120build_tuple.18, dynamics.py:113), Var($const122.19, dynamics.py:113)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $134load_global.21 = global(prange: <class 'numba.misc.special.prange'>)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $144load_global.23 = global(len: <built-in function len>)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $156call.26 = call $144load_global.23(slices, func=$144load_global.23, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $164call.27 = call $134load_global.21($156call.26, func=$134load_global.21, args=[Var($156call.26, dynamics.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $172get_iter.28 = getiter(value=$164call.27)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.28
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299e82f0>
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 604
2025-01-20 15:59:12,118 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299e82f0>
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: p = $phi178.1
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: si = getitem(value=slices, index=p, fn=<built-in function getitem>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $const192.6 = const(int, 0)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: i = static_getitem(value=si, index=0, index_var=$const192.6, fn=<built-in function getitem>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $const202.9 = const(int, 1)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $const204.10 = const(int, 3)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.13 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.11 = call $206binary_slice.13($const202.9, $const204.10, func=$206binary_slice.13, args=(Var($const202.9, dynamics.py:117), Var($const204.10, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.12 = static_getitem(value=si, index=slice(1, 3, None), index_var=$206binary_slice.11, fn=<built-in function getitem>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $const210.15 = const(int, 3)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $const212.16 = const(int, 5)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.19 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.17 = call $214binary_slice.19($const210.15, $const212.16, func=$214binary_slice.19, args=(Var($const210.15, dynamics.py:117), Var($const212.16, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: sc = static_getitem(value=si, index=slice(3, 5, None), index_var=$214binary_slice.17, fn=<built-in function getitem>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: sr = $206binary_slice.12
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $220load_global.20 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $230load_attr.22 = getattr(value=$220load_global.20, attr=nonzero)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $const254.25 = const(int, 0)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $256binary_subscr.26 = static_getitem(value=sr, index=0, index_var=$const254.25, fn=<built-in function getitem>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $const262.28 = const(int, -1)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $264binary_subscr.29 = static_getitem(value=sr, index=-1, index_var=$const262.28, fn=<built-in function getitem>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $268build_slice.30 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $268build_slice.31 = call $268build_slice.30($256binary_subscr.26, $264binary_subscr.29, func=$268build_slice.30, args=(Var($256binary_subscr.26, dynamics.py:119), Var($264binary_subscr.29, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $const272.33 = const(int, 0)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $274binary_subscr.34 = static_getitem(value=sc, index=0, index_var=$const272.33, fn=<built-in function getitem>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $const280.36 = const(int, -1)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $282binary_subscr.37 = static_getitem(value=sc, index=-1, index_var=$const280.36, fn=<built-in function getitem>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $286build_slice.38 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,119 - numba.core.ssa - DEBUG - on stmt: $286build_slice.39 = call $286build_slice.38($274binary_subscr.34, $282binary_subscr.37, func=$286build_slice.38, args=(Var($274binary_subscr.34, dynamics.py:119), Var($282binary_subscr.37, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $288build_tuple.40 = build_tuple(items=[Var($268build_slice.31, dynamics.py:119), Var($286build_slice.39, dynamics.py:119)])
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $290binary_subscr.41 = getitem(value=masks, index=$288build_tuple.40, fn=<built-in function getitem>)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $const296.43 = const(int, 1)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $binop_add298.44 = i + $const296.43
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $302compare_op.45 = $290binary_subscr.41 == $binop_add298.44
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $306call.46 = call $230load_attr.22($302compare_op.45, func=$230load_attr.22, args=[Var($302compare_op.45, dynamics.py:119)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.49 = exhaust_iter(value=$306call.46, count=2)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.47 = static_getitem(value=$314unpack_sequence.49, index=0, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.48 = static_getitem(value=$314unpack_sequence.49, index=1, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: yi = $314unpack_sequence.47
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: xi = $314unpack_sequence.48
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $324load_attr.52 = getattr(value=yi, attr=mean)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: ymed = call $324load_attr.52(func=$324load_attr.52, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - first assign: ymed
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - replaced with: ymed = call $324load_attr.52(func=$324load_attr.52, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $356load_attr.56 = getattr(value=xi, attr=mean)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: xmed = call $356load_attr.56(func=$356load_attr.56, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $binop_sub390.60 = xi - xmed
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $const394.61 = const(int, 2)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $binop_pow396.62 = $binop_sub390.60 ** $const394.61
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $binop_sub404.65 = yi - ymed
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $const408.66 = const(int, 2)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $binop_pow410.67 = $binop_sub404.65 ** $const408.66
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $binop_add414.68 = $binop_pow396.62 + $binop_pow410.67
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $418load_attr.70 = getattr(value=$binop_add414.68, attr=argmin)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: imin = call $418load_attr.70(func=$418load_attr.70, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $452binary_subscr.74 = getitem(value=yi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $const458.76 = const(int, 0)
2025-01-20 15:59:12,120 - numba.core.ssa - DEBUG - on stmt: $460binary_subscr.77 = static_getitem(value=sr, index=0, index_var=$const458.76, fn=<built-in function getitem>)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: ymed = $452binary_subscr.74 + $460binary_subscr.77
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - replaced with: ymed.1 = $452binary_subscr.74 + $460binary_subscr.77
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $474binary_subscr.81 = getitem(value=xi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $const480.83 = const(int, 0)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $482binary_subscr.84 = static_getitem(value=sc, index=0, index_var=$const480.83, fn=<built-in function getitem>)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: xmed = $474binary_subscr.81 + $482binary_subscr.84
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $492load_global.86 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $502load_attr.88 = getattr(value=$492load_global.86, attr=array)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $526build_list.91 = build_list(items=[Var(ymed, dynamics.py:120), Var(xmed, dynamics.py:121)])
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $528call.92 = call $502load_attr.88($526build_list.91, func=$502load_attr.88, args=[Var($526build_list.91, dynamics.py:126)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: centers[p] = $528call.92
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $const546.96 = const(int, -1)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $548binary_subscr.97 = static_getitem(value=sr, index=-1, index_var=$const546.96, fn=<built-in function getitem>)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $const554.99 = const(int, 0)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $556binary_subscr.100 = static_getitem(value=sr, index=0, index_var=$const554.99, fn=<built-in function getitem>)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $binop_sub560.101 = $548binary_subscr.97 - $556binary_subscr.100
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $const566.103 = const(int, -1)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $568binary_subscr.104 = static_getitem(value=sc, index=-1, index_var=$const566.103, fn=<built-in function getitem>)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $const574.106 = const(int, 0)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $576binary_subscr.107 = static_getitem(value=sc, index=0, index_var=$const574.106, fn=<built-in function getitem>)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $binop_sub580.108 = $568binary_subscr.104 - $576binary_subscr.107
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $binop_add584.109 = $binop_sub560.101 + $binop_sub580.108
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $const588.110 = const(int, 2)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $binop_add590.111 = $binop_add584.109 + $const588.110
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: ext[p] = $binop_add590.111
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 604
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299e82f0>
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $610build_tuple.4 = build_tuple(items=[Var(centers, dynamics.py:112), Var(ext, dynamics.py:113)])
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: $612return_value.5 = cast(value=$610build_tuple.4)
2025-01-20 15:59:12,121 - numba.core.ssa - DEBUG - on stmt: return $612return_value.5
2025-01-20 15:59:12,122 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {178: [<numba.core.ir.Assign object at 0x763528f241a0>,
                   <numba.core.ir.Assign object at 0x763528f24dd0>]})
2025-01-20 15:59:12,122 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,122 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299e82f0>
2025-01-20 15:59:12,122 - numba.core.ssa - DEBUG - on stmt: masks = arg(0, name=masks)
2025-01-20 15:59:12,122 - numba.core.ssa - DEBUG - on stmt: slices = arg(1, name=slices)
2025-01-20 15:59:12,226 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,226 - numba.core.ssa - DEBUG - on stmt: $14load_attr.2 = getattr(value=$4load_global.0, attr=zeros)
2025-01-20 15:59:12,226 - numba.core.ssa - DEBUG - on stmt: $34load_global.3 = global(len: <built-in function len>)
2025-01-20 15:59:12,226 - numba.core.ssa - DEBUG - on stmt: $46call.6 = call $34load_global.3(slices, func=$34load_global.3, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $const54.7 = const(int, 2)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $56build_tuple.8 = build_tuple(items=[Var($46call.6, dynamics.py:112), Var($const54.7, dynamics.py:112)])
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $const58.9 = const(str, int32)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: centers = call $14load_attr.2($56build_tuple.8, $const58.9, func=$14load_attr.2, args=[Var($56build_tuple.8, dynamics.py:112), Var($const58.9, dynamics.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $70load_global.11 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $80load_attr.13 = getattr(value=$70load_global.11, attr=zeros)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $100load_global.14 = global(len: <built-in function len>)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $112call.17 = call $100load_global.14(slices, func=$100load_global.14, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $120build_tuple.18 = build_tuple(items=[Var($112call.17, dynamics.py:113)])
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $const122.19 = const(str, int32)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: ext = call $80load_attr.13($120build_tuple.18, $const122.19, func=$80load_attr.13, args=[Var($120build_tuple.18, dynamics.py:113), Var($const122.19, dynamics.py:113)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $134load_global.21 = global(prange: <class 'numba.misc.special.prange'>)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $144load_global.23 = global(len: <built-in function len>)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $156call.26 = call $144load_global.23(slices, func=$144load_global.23, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $164call.27 = call $134load_global.21($156call.26, func=$134load_global.21, args=[Var($156call.26, dynamics.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,227 - numba.core.ssa - DEBUG - on stmt: $172get_iter.28 = getiter(value=$164call.27)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.28
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299e82f0>
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 604
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299e82f0>
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: p = $phi178.1
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: si = getitem(value=slices, index=p, fn=<built-in function getitem>)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $const192.6 = const(int, 0)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: i = static_getitem(value=si, index=0, index_var=$const192.6, fn=<built-in function getitem>)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $const202.9 = const(int, 1)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $const204.10 = const(int, 3)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.13 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.11 = call $206binary_slice.13($const202.9, $const204.10, func=$206binary_slice.13, args=(Var($const202.9, dynamics.py:117), Var($const204.10, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.12 = static_getitem(value=si, index=slice(1, 3, None), index_var=$206binary_slice.11, fn=<built-in function getitem>)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $const210.15 = const(int, 3)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $const212.16 = const(int, 5)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.19 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.17 = call $214binary_slice.19($const210.15, $const212.16, func=$214binary_slice.19, args=(Var($const210.15, dynamics.py:117), Var($const212.16, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: sc = static_getitem(value=si, index=slice(3, 5, None), index_var=$214binary_slice.17, fn=<built-in function getitem>)
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: sr = $206binary_slice.12
2025-01-20 15:59:12,228 - numba.core.ssa - DEBUG - on stmt: $220load_global.20 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $230load_attr.22 = getattr(value=$220load_global.20, attr=nonzero)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $const254.25 = const(int, 0)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $256binary_subscr.26 = static_getitem(value=sr, index=0, index_var=$const254.25, fn=<built-in function getitem>)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $const262.28 = const(int, -1)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $264binary_subscr.29 = static_getitem(value=sr, index=-1, index_var=$const262.28, fn=<built-in function getitem>)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $268build_slice.30 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $268build_slice.31 = call $268build_slice.30($256binary_subscr.26, $264binary_subscr.29, func=$268build_slice.30, args=(Var($256binary_subscr.26, dynamics.py:119), Var($264binary_subscr.29, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $const272.33 = const(int, 0)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $274binary_subscr.34 = static_getitem(value=sc, index=0, index_var=$const272.33, fn=<built-in function getitem>)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $const280.36 = const(int, -1)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $282binary_subscr.37 = static_getitem(value=sc, index=-1, index_var=$const280.36, fn=<built-in function getitem>)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $286build_slice.38 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $286build_slice.39 = call $286build_slice.38($274binary_subscr.34, $282binary_subscr.37, func=$286build_slice.38, args=(Var($274binary_subscr.34, dynamics.py:119), Var($282binary_subscr.37, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $288build_tuple.40 = build_tuple(items=[Var($268build_slice.31, dynamics.py:119), Var($286build_slice.39, dynamics.py:119)])
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $290binary_subscr.41 = getitem(value=masks, index=$288build_tuple.40, fn=<built-in function getitem>)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $const296.43 = const(int, 1)
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $binop_add298.44 = i + $const296.43
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $302compare_op.45 = $290binary_subscr.41 == $binop_add298.44
2025-01-20 15:59:12,229 - numba.core.ssa - DEBUG - on stmt: $306call.46 = call $230load_attr.22($302compare_op.45, func=$230load_attr.22, args=[Var($302compare_op.45, dynamics.py:119)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.49 = exhaust_iter(value=$306call.46, count=2)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.47 = static_getitem(value=$314unpack_sequence.49, index=0, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.48 = static_getitem(value=$314unpack_sequence.49, index=1, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: yi = $314unpack_sequence.47
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: xi = $314unpack_sequence.48
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $324load_attr.52 = getattr(value=yi, attr=mean)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: ymed = call $324load_attr.52(func=$324load_attr.52, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $356load_attr.56 = getattr(value=xi, attr=mean)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: xmed = call $356load_attr.56(func=$356load_attr.56, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $binop_sub390.60 = xi - xmed
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $const394.61 = const(int, 2)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $binop_pow396.62 = $binop_sub390.60 ** $const394.61
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $binop_sub404.65 = yi - ymed
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - find_def var='ymed' stmt=$binop_sub404.65 = yi - ymed
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $const408.66 = const(int, 2)
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $binop_pow410.67 = $binop_sub404.65 ** $const408.66
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $binop_add414.68 = $binop_pow396.62 + $binop_pow410.67
2025-01-20 15:59:12,230 - numba.core.ssa - DEBUG - on stmt: $418load_attr.70 = getattr(value=$binop_add414.68, attr=argmin)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: imin = call $418load_attr.70(func=$418load_attr.70, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $452binary_subscr.74 = getitem(value=yi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $const458.76 = const(int, 0)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $460binary_subscr.77 = static_getitem(value=sr, index=0, index_var=$const458.76, fn=<built-in function getitem>)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: ymed.1 = $452binary_subscr.74 + $460binary_subscr.77
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $474binary_subscr.81 = getitem(value=xi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $const480.83 = const(int, 0)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $482binary_subscr.84 = static_getitem(value=sc, index=0, index_var=$const480.83, fn=<built-in function getitem>)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: xmed = $474binary_subscr.81 + $482binary_subscr.84
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $492load_global.86 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $502load_attr.88 = getattr(value=$492load_global.86, attr=array)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $526build_list.91 = build_list(items=[Var(ymed, dynamics.py:120), Var(xmed, dynamics.py:121)])
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - find_def var='ymed' stmt=$526build_list.91 = build_list(items=[Var(ymed, dynamics.py:120), Var(xmed, dynamics.py:121)])
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - replaced with: $526build_list.91 = build_list(items=[Var(ymed.1, dynamics.py:124), Var(xmed, dynamics.py:121)])
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $528call.92 = call $502load_attr.88($526build_list.91, func=$502load_attr.88, args=[Var($526build_list.91, dynamics.py:126)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: centers[p] = $528call.92
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $const546.96 = const(int, -1)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $548binary_subscr.97 = static_getitem(value=sr, index=-1, index_var=$const546.96, fn=<built-in function getitem>)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $const554.99 = const(int, 0)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $556binary_subscr.100 = static_getitem(value=sr, index=0, index_var=$const554.99, fn=<built-in function getitem>)
2025-01-20 15:59:12,231 - numba.core.ssa - DEBUG - on stmt: $binop_sub560.101 = $548binary_subscr.97 - $556binary_subscr.100
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $const566.103 = const(int, -1)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $568binary_subscr.104 = static_getitem(value=sc, index=-1, index_var=$const566.103, fn=<built-in function getitem>)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $const574.106 = const(int, 0)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $576binary_subscr.107 = static_getitem(value=sc, index=0, index_var=$const574.106, fn=<built-in function getitem>)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $binop_sub580.108 = $568binary_subscr.104 - $576binary_subscr.107
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $binop_add584.109 = $binop_sub560.101 + $binop_sub580.108
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $const588.110 = const(int, 2)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $binop_add590.111 = $binop_add584.109 + $const588.110
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: ext[p] = $binop_add590.111
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 604
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299e82f0>
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $610build_tuple.4 = build_tuple(items=[Var(centers, dynamics.py:112), Var(ext, dynamics.py:113)])
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $612return_value.5 = cast(value=$610build_tuple.4)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: return $612return_value.5
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - Fix SSA violator on var xmed
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528f186e0>
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: masks = arg(0, name=masks)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: slices = arg(1, name=slices)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $14load_attr.2 = getattr(value=$4load_global.0, attr=zeros)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $34load_global.3 = global(len: <built-in function len>)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $46call.6 = call $34load_global.3(slices, func=$34load_global.3, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $const54.7 = const(int, 2)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $56build_tuple.8 = build_tuple(items=[Var($46call.6, dynamics.py:112), Var($const54.7, dynamics.py:112)])
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: $const58.9 = const(str, int32)
2025-01-20 15:59:12,232 - numba.core.ssa - DEBUG - on stmt: centers = call $14load_attr.2($56build_tuple.8, $const58.9, func=$14load_attr.2, args=[Var($56build_tuple.8, dynamics.py:112), Var($const58.9, dynamics.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $70load_global.11 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $80load_attr.13 = getattr(value=$70load_global.11, attr=zeros)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $100load_global.14 = global(len: <built-in function len>)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $112call.17 = call $100load_global.14(slices, func=$100load_global.14, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $120build_tuple.18 = build_tuple(items=[Var($112call.17, dynamics.py:113)])
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $const122.19 = const(str, int32)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: ext = call $80load_attr.13($120build_tuple.18, $const122.19, func=$80load_attr.13, args=[Var($120build_tuple.18, dynamics.py:113), Var($const122.19, dynamics.py:113)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $134load_global.21 = global(prange: <class 'numba.misc.special.prange'>)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $144load_global.23 = global(len: <built-in function len>)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $156call.26 = call $144load_global.23(slices, func=$144load_global.23, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $164call.27 = call $134load_global.21($156call.26, func=$134load_global.21, args=[Var($156call.26, dynamics.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $172get_iter.28 = getiter(value=$164call.27)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.28
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528f186e0>
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 604
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528f186e0>
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: p = $phi178.1
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: si = getitem(value=slices, index=p, fn=<built-in function getitem>)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $const192.6 = const(int, 0)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: i = static_getitem(value=si, index=0, index_var=$const192.6, fn=<built-in function getitem>)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $const202.9 = const(int, 1)
2025-01-20 15:59:12,233 - numba.core.ssa - DEBUG - on stmt: $const204.10 = const(int, 3)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.13 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.11 = call $206binary_slice.13($const202.9, $const204.10, func=$206binary_slice.13, args=(Var($const202.9, dynamics.py:117), Var($const204.10, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.12 = static_getitem(value=si, index=slice(1, 3, None), index_var=$206binary_slice.11, fn=<built-in function getitem>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $const210.15 = const(int, 3)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $const212.16 = const(int, 5)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.19 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.17 = call $214binary_slice.19($const210.15, $const212.16, func=$214binary_slice.19, args=(Var($const210.15, dynamics.py:117), Var($const212.16, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: sc = static_getitem(value=si, index=slice(3, 5, None), index_var=$214binary_slice.17, fn=<built-in function getitem>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: sr = $206binary_slice.12
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $220load_global.20 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $230load_attr.22 = getattr(value=$220load_global.20, attr=nonzero)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $const254.25 = const(int, 0)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $256binary_subscr.26 = static_getitem(value=sr, index=0, index_var=$const254.25, fn=<built-in function getitem>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $const262.28 = const(int, -1)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $264binary_subscr.29 = static_getitem(value=sr, index=-1, index_var=$const262.28, fn=<built-in function getitem>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $268build_slice.30 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $268build_slice.31 = call $268build_slice.30($256binary_subscr.26, $264binary_subscr.29, func=$268build_slice.30, args=(Var($256binary_subscr.26, dynamics.py:119), Var($264binary_subscr.29, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $const272.33 = const(int, 0)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $274binary_subscr.34 = static_getitem(value=sc, index=0, index_var=$const272.33, fn=<built-in function getitem>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $const280.36 = const(int, -1)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $282binary_subscr.37 = static_getitem(value=sc, index=-1, index_var=$const280.36, fn=<built-in function getitem>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $286build_slice.38 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $286build_slice.39 = call $286build_slice.38($274binary_subscr.34, $282binary_subscr.37, func=$286build_slice.38, args=(Var($274binary_subscr.34, dynamics.py:119), Var($282binary_subscr.37, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $288build_tuple.40 = build_tuple(items=[Var($268build_slice.31, dynamics.py:119), Var($286build_slice.39, dynamics.py:119)])
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $290binary_subscr.41 = getitem(value=masks, index=$288build_tuple.40, fn=<built-in function getitem>)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $const296.43 = const(int, 1)
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $binop_add298.44 = i + $const296.43
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $302compare_op.45 = $290binary_subscr.41 == $binop_add298.44
2025-01-20 15:59:12,234 - numba.core.ssa - DEBUG - on stmt: $306call.46 = call $230load_attr.22($302compare_op.45, func=$230load_attr.22, args=[Var($302compare_op.45, dynamics.py:119)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.49 = exhaust_iter(value=$306call.46, count=2)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.47 = static_getitem(value=$314unpack_sequence.49, index=0, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.48 = static_getitem(value=$314unpack_sequence.49, index=1, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: yi = $314unpack_sequence.47
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: xi = $314unpack_sequence.48
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $324load_attr.52 = getattr(value=yi, attr=mean)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: ymed = call $324load_attr.52(func=$324load_attr.52, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $356load_attr.56 = getattr(value=xi, attr=mean)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: xmed = call $356load_attr.56(func=$356load_attr.56, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - first assign: xmed
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - replaced with: xmed = call $356load_attr.56(func=$356load_attr.56, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $binop_sub390.60 = xi - xmed
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $const394.61 = const(int, 2)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $binop_pow396.62 = $binop_sub390.60 ** $const394.61
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $binop_sub404.65 = yi - ymed
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $const408.66 = const(int, 2)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $binop_pow410.67 = $binop_sub404.65 ** $const408.66
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $binop_add414.68 = $binop_pow396.62 + $binop_pow410.67
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $418load_attr.70 = getattr(value=$binop_add414.68, attr=argmin)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: imin = call $418load_attr.70(func=$418load_attr.70, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $452binary_subscr.74 = getitem(value=yi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $const458.76 = const(int, 0)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $460binary_subscr.77 = static_getitem(value=sr, index=0, index_var=$const458.76, fn=<built-in function getitem>)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: ymed.1 = $452binary_subscr.74 + $460binary_subscr.77
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $474binary_subscr.81 = getitem(value=xi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $const480.83 = const(int, 0)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: $482binary_subscr.84 = static_getitem(value=sc, index=0, index_var=$const480.83, fn=<built-in function getitem>)
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - on stmt: xmed = $474binary_subscr.81 + $482binary_subscr.84
2025-01-20 15:59:12,235 - numba.core.ssa - DEBUG - replaced with: xmed.1 = $474binary_subscr.81 + $482binary_subscr.84
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $492load_global.86 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $502load_attr.88 = getattr(value=$492load_global.86, attr=array)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $526build_list.91 = build_list(items=[Var(ymed.1, dynamics.py:124), Var(xmed, dynamics.py:121)])
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $528call.92 = call $502load_attr.88($526build_list.91, func=$502load_attr.88, args=[Var($526build_list.91, dynamics.py:126)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: centers[p] = $528call.92
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $const546.96 = const(int, -1)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $548binary_subscr.97 = static_getitem(value=sr, index=-1, index_var=$const546.96, fn=<built-in function getitem>)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $const554.99 = const(int, 0)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $556binary_subscr.100 = static_getitem(value=sr, index=0, index_var=$const554.99, fn=<built-in function getitem>)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $binop_sub560.101 = $548binary_subscr.97 - $556binary_subscr.100
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $const566.103 = const(int, -1)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $568binary_subscr.104 = static_getitem(value=sc, index=-1, index_var=$const566.103, fn=<built-in function getitem>)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $const574.106 = const(int, 0)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $576binary_subscr.107 = static_getitem(value=sc, index=0, index_var=$const574.106, fn=<built-in function getitem>)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $binop_sub580.108 = $568binary_subscr.104 - $576binary_subscr.107
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $binop_add584.109 = $binop_sub560.101 + $binop_sub580.108
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $const588.110 = const(int, 2)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $binop_add590.111 = $binop_add584.109 + $const588.110
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: ext[p] = $binop_add590.111
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 604
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528f186e0>
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $610build_tuple.4 = build_tuple(items=[Var(centers, dynamics.py:112), Var(ext, dynamics.py:113)])
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: $612return_value.5 = cast(value=$610build_tuple.4)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: return $612return_value.5
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {178: [<numba.core.ir.Assign object at 0x763528f0c980>,
                   <numba.core.ir.Assign object at 0x763528fcf650>]})
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299e31a0>
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: masks = arg(0, name=masks)
2025-01-20 15:59:12,236 - numba.core.ssa - DEBUG - on stmt: slices = arg(1, name=slices)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $14load_attr.2 = getattr(value=$4load_global.0, attr=zeros)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $34load_global.3 = global(len: <built-in function len>)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $46call.6 = call $34load_global.3(slices, func=$34load_global.3, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $const54.7 = const(int, 2)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $56build_tuple.8 = build_tuple(items=[Var($46call.6, dynamics.py:112), Var($const54.7, dynamics.py:112)])
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $const58.9 = const(str, int32)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: centers = call $14load_attr.2($56build_tuple.8, $const58.9, func=$14load_attr.2, args=[Var($56build_tuple.8, dynamics.py:112), Var($const58.9, dynamics.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $70load_global.11 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $80load_attr.13 = getattr(value=$70load_global.11, attr=zeros)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $100load_global.14 = global(len: <built-in function len>)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $112call.17 = call $100load_global.14(slices, func=$100load_global.14, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $120build_tuple.18 = build_tuple(items=[Var($112call.17, dynamics.py:113)])
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $const122.19 = const(str, int32)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: ext = call $80load_attr.13($120build_tuple.18, $const122.19, func=$80load_attr.13, args=[Var($120build_tuple.18, dynamics.py:113), Var($const122.19, dynamics.py:113)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $134load_global.21 = global(prange: <class 'numba.misc.special.prange'>)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $144load_global.23 = global(len: <built-in function len>)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $156call.26 = call $144load_global.23(slices, func=$144load_global.23, args=[Var(slices, dynamics.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $164call.27 = call $134load_global.21($156call.26, func=$134load_global.21, args=[Var($156call.26, dynamics.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $172get_iter.28 = getiter(value=$164call.27)
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.28
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,237 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299e31a0>
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 604
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299e31a0>
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: p = $phi178.1
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: si = getitem(value=slices, index=p, fn=<built-in function getitem>)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $const192.6 = const(int, 0)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: i = static_getitem(value=si, index=0, index_var=$const192.6, fn=<built-in function getitem>)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $const202.9 = const(int, 1)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $const204.10 = const(int, 3)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.13 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.11 = call $206binary_slice.13($const202.9, $const204.10, func=$206binary_slice.13, args=(Var($const202.9, dynamics.py:117), Var($const204.10, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $206binary_slice.12 = static_getitem(value=si, index=slice(1, 3, None), index_var=$206binary_slice.11, fn=<built-in function getitem>)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $const210.15 = const(int, 3)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $const212.16 = const(int, 5)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.19 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $214binary_slice.17 = call $214binary_slice.19($const210.15, $const212.16, func=$214binary_slice.19, args=(Var($const210.15, dynamics.py:117), Var($const212.16, dynamics.py:117)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: sc = static_getitem(value=si, index=slice(3, 5, None), index_var=$214binary_slice.17, fn=<built-in function getitem>)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: sr = $206binary_slice.12
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $220load_global.20 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $230load_attr.22 = getattr(value=$220load_global.20, attr=nonzero)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $const254.25 = const(int, 0)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $256binary_subscr.26 = static_getitem(value=sr, index=0, index_var=$const254.25, fn=<built-in function getitem>)
2025-01-20 15:59:12,238 - numba.core.ssa - DEBUG - on stmt: $const262.28 = const(int, -1)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $264binary_subscr.29 = static_getitem(value=sr, index=-1, index_var=$const262.28, fn=<built-in function getitem>)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $268build_slice.30 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $268build_slice.31 = call $268build_slice.30($256binary_subscr.26, $264binary_subscr.29, func=$268build_slice.30, args=(Var($256binary_subscr.26, dynamics.py:119), Var($264binary_subscr.29, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $const272.33 = const(int, 0)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $274binary_subscr.34 = static_getitem(value=sc, index=0, index_var=$const272.33, fn=<built-in function getitem>)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $const280.36 = const(int, -1)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $282binary_subscr.37 = static_getitem(value=sc, index=-1, index_var=$const280.36, fn=<built-in function getitem>)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $286build_slice.38 = global(slice: <class 'slice'>)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $286build_slice.39 = call $286build_slice.38($274binary_subscr.34, $282binary_subscr.37, func=$286build_slice.38, args=(Var($274binary_subscr.34, dynamics.py:119), Var($282binary_subscr.37, dynamics.py:119)), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $288build_tuple.40 = build_tuple(items=[Var($268build_slice.31, dynamics.py:119), Var($286build_slice.39, dynamics.py:119)])
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $290binary_subscr.41 = getitem(value=masks, index=$288build_tuple.40, fn=<built-in function getitem>)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $const296.43 = const(int, 1)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $binop_add298.44 = i + $const296.43
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $302compare_op.45 = $290binary_subscr.41 == $binop_add298.44
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $306call.46 = call $230load_attr.22($302compare_op.45, func=$230load_attr.22, args=[Var($302compare_op.45, dynamics.py:119)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.49 = exhaust_iter(value=$306call.46, count=2)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.47 = static_getitem(value=$314unpack_sequence.49, index=0, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $314unpack_sequence.48 = static_getitem(value=$314unpack_sequence.49, index=1, index_var=None, fn=<built-in function getitem>)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: yi = $314unpack_sequence.47
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: xi = $314unpack_sequence.48
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $324load_attr.52 = getattr(value=yi, attr=mean)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: ymed = call $324load_attr.52(func=$324load_attr.52, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $356load_attr.56 = getattr(value=xi, attr=mean)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: xmed = call $356load_attr.56(func=$356load_attr.56, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $binop_sub390.60 = xi - xmed
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - find_def var='xmed' stmt=$binop_sub390.60 = xi - xmed
2025-01-20 15:59:12,239 - numba.core.ssa - DEBUG - on stmt: $const394.61 = const(int, 2)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $binop_pow396.62 = $binop_sub390.60 ** $const394.61
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $binop_sub404.65 = yi - ymed
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $const408.66 = const(int, 2)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $binop_pow410.67 = $binop_sub404.65 ** $const408.66
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $binop_add414.68 = $binop_pow396.62 + $binop_pow410.67
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $418load_attr.70 = getattr(value=$binop_add414.68, attr=argmin)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: imin = call $418load_attr.70(func=$418load_attr.70, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $452binary_subscr.74 = getitem(value=yi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $const458.76 = const(int, 0)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $460binary_subscr.77 = static_getitem(value=sr, index=0, index_var=$const458.76, fn=<built-in function getitem>)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: ymed.1 = $452binary_subscr.74 + $460binary_subscr.77
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $474binary_subscr.81 = getitem(value=xi, index=imin, fn=<built-in function getitem>)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $const480.83 = const(int, 0)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $482binary_subscr.84 = static_getitem(value=sc, index=0, index_var=$const480.83, fn=<built-in function getitem>)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: xmed.1 = $474binary_subscr.81 + $482binary_subscr.84
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $492load_global.86 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $502load_attr.88 = getattr(value=$492load_global.86, attr=array)
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - on stmt: $526build_list.91 = build_list(items=[Var(ymed.1, dynamics.py:124), Var(xmed, dynamics.py:121)])
2025-01-20 15:59:12,240 - numba.core.ssa - DEBUG - find_def var='xmed' stmt=$526build_list.91 = build_list(items=[Var(ymed.1, dynamics.py:124), Var(xmed, dynamics.py:121)])
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - replaced with: $526build_list.91 = build_list(items=[Var(ymed.1, dynamics.py:124), Var(xmed.1, dynamics.py:125)])
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $528call.92 = call $502load_attr.88($526build_list.91, func=$502load_attr.88, args=[Var($526build_list.91, dynamics.py:126)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: centers[p] = $528call.92
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $const546.96 = const(int, -1)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $548binary_subscr.97 = static_getitem(value=sr, index=-1, index_var=$const546.96, fn=<built-in function getitem>)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $const554.99 = const(int, 0)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $556binary_subscr.100 = static_getitem(value=sr, index=0, index_var=$const554.99, fn=<built-in function getitem>)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $binop_sub560.101 = $548binary_subscr.97 - $556binary_subscr.100
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $const566.103 = const(int, -1)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $568binary_subscr.104 = static_getitem(value=sc, index=-1, index_var=$const566.103, fn=<built-in function getitem>)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $const574.106 = const(int, 0)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $576binary_subscr.107 = static_getitem(value=sc, index=0, index_var=$const574.106, fn=<built-in function getitem>)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $binop_sub580.108 = $568binary_subscr.104 - $576binary_subscr.107
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $binop_add584.109 = $binop_sub560.101 + $binop_sub580.108
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $const588.110 = const(int, 2)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $binop_add590.111 = $binop_add584.109 + $const588.110
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: ext[p] = $binop_add590.111
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 604
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299e31a0>
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $610build_tuple.4 = build_tuple(items=[Var(centers, dynamics.py:112), Var(ext, dynamics.py:113)])
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: $612return_value.5 = cast(value=$610build_tuple.4)
2025-01-20 15:59:12,241 - numba.core.ssa - DEBUG - on stmt: return $612return_value.5
2025-01-20 15:59:12,245 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4456)
           2	RESUME(arg=0, lineno=4456)
           4	LOAD_GLOBAL(arg=1, lineno=4457)
          14	LOAD_ATTR(arg=2, lineno=4457)
          34	LOAD_FAST(arg=0, lineno=4457)
          36	LOAD_FAST(arg=1, lineno=4457)
          38	KW_NAMES(arg=1, lineno=4457)
          40	CALL(arg=2, lineno=4457)
          48	STORE_FAST(arg=2, lineno=4457)
          50	LOAD_FAST(arg=2, lineno=4458)
          52	LOAD_ATTR(arg=5, lineno=4458)
          72	CALL(arg=0, lineno=4458)
          80	POP_TOP(arg=None, lineno=4458)
          82	LOAD_FAST(arg=2, lineno=4459)
          84	RETURN_VALUE(arg=None, lineno=4459)
2025-01-20 15:59:12,245 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,245 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,245 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,245 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4456)
2025-01-20 15:59:12,245 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4456)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4457)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=4457)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4457)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2']
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=1, lineno=4457)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$shape34.3']
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=KW_NAMES(arg=1, lineno=4457)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$shape34.3', '$dtype36.4']
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL(arg=2, lineno=4457)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$shape34.3', '$dtype36.4']
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=4457)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack ['$40call.5']
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=2, lineno=4458)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_ATTR(arg=5, lineno=4458)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack ['$arr50.6']
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL(arg=0, lineno=4458)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack ['$null$52.7', '$52load_attr.8']
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_TOP(arg=None, lineno=4458)
2025-01-20 15:59:12,246 - numba.core.byteflow - DEBUG - stack ['$72call.9']
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=2, lineno=4459)
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=4459)
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - stack ['$arr82.10']
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,247 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'item': '$4load_global.0', 'res': '$14load_attr.2'}), (34, {'res': '$shape34.3'}), (36, {'res': '$dtype36.4'}), (40, {'func': '$14load_attr.2', 'args': ['$shape34.3', '$dtype36.4'], 'kw_names': 1, 'res': '$40call.5'}), (48, {'value': '$40call.5'}), (50, {'res': '$arr50.6'}), (52, {'item': '$arr50.6', 'res': '$52load_attr.8'}), (72, {'func': '$52load_attr.8', 'args': [], 'kw_names': None, 'res': '$72call.9'}), (82, {'res': '$arr82.10'}), (84, {'retval': '$arr82.10', 'castval': '$84return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,248 - numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>) ['$4load_global.0']
    $14load_attr.2 = getattr(value=$4load_global.0, attr=empty) ['$14load_attr.2', '$4load_global.0']
    arr = call $14load_attr.2(shape, func=$14load_attr.2, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None) ['$14load_attr.2', 'arr', 'dtype', 'shape']
    $52load_attr.8 = getattr(value=arr, attr=_zero_fill) ['$52load_attr.8', 'arr']
    $72call.9 = call $52load_attr.8(func=$52load_attr.8, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_attr.8', '$72call.9']
    $84return_value.11 = cast(value=arr)     ['$84return_value.11', 'arr']
    return $84return_value.11                ['$84return_value.11']

2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528b02270>
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - on stmt: dtype = arg(1, name=dtype)
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - on stmt: $14load_attr.2 = getattr(value=$4load_global.0, attr=empty)
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - on stmt: arr = call $14load_attr.2(shape, func=$14load_attr.2, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - on stmt: $52load_attr.8 = getattr(value=arr, attr=_zero_fill)
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - on stmt: $72call.9 = call $52load_attr.8(func=$52load_attr.8, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - on stmt: $84return_value.11 = cast(value=arr)
2025-01-20 15:59:12,251 - numba.core.ssa - DEBUG - on stmt: return $84return_value.11
2025-01-20 15:59:12,252 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14load_attr.2': [(<numba.core.ir.Assign object at 0x763528b00d40>,
                                 0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x763528b00b00>,
                                  0)],
             '$52load_attr.8': [(<numba.core.ir.Assign object at 0x763528b013a0>,
                                 0)],
             '$72call.9': [(<numba.core.ir.Assign object at 0x763528b01550>,
                            0)],
             '$84return_value.11': [(<numba.core.ir.Assign object at 0x763528b01760>,
                                     0)],
             'arr': [(<numba.core.ir.Assign object at 0x763528b010a0>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x763528b00890>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x763528b00ad0>, 0)]})
2025-01-20 15:59:12,252 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528b02270>
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	COPY_FREE_VARS(arg=1, lineno=4388)
           4	RESUME(arg=0, lineno=4388)
           6	LOAD_GLOBAL(arg=1, lineno=4389)
          16	LOAD_FAST(arg=0, lineno=4389)
          18	LOAD_FAST(arg=1, lineno=4389)
          20	LOAD_DEREF(arg=2, lineno=4389)
          22	CALL(arg=3, lineno=4389)
          30	RETURN_VALUE(arg=None, lineno=4389)
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4388)
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=4388)
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=4388)
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=1, lineno=4389)
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=4389)
2025-01-20 15:59:12,254 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0']
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=4389)
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2']
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_DEREF(arg=2, lineno=4389)
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2', '$dtype18.3']
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=CALL(arg=3, lineno=4389)
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2', '$dtype18.3', '$20load_deref.4']
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=RETURN_VALUE(arg=None, lineno=4389)
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - stack ['$22call.5']
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,255 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'idx': 0, 'res': '$6load_global.0'}), (16, {'res': '$shape16.2'}), (18, {'res': '$dtype18.3'}), (20, {'res': '$20load_deref.4'}), (22, {'func': '$6load_global.0', 'args': ['$shape16.2', '$dtype18.3', '$20load_deref.4'], 'kw_names': None, 'res': '$22call.5'}), (30, {'retval': '$22call.5', 'castval': '$30return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,256 - numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$6load_global.0']
    $20load_deref.4 = freevar(retty: array(int32, 2d, C)) ['$20load_deref.4']
    $22call.5 = call $6load_global.0(shape, dtype, $20load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($20load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_deref.4', '$22call.5', '$6load_global.0', 'dtype', 'shape']
    $30return_value.6 = cast(value=$22call.5) ['$22call.5', '$30return_value.6']
    return $30return_value.6                 ['$30return_value.6']

2025-01-20 15:59:12,258 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,258 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528b03e90>
2025-01-20 15:59:12,258 - numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
2025-01-20 15:59:12,258 - numba.core.ssa - DEBUG - on stmt: dtype = arg(1, name=dtype)
2025-01-20 15:59:12,258 - numba.core.ssa - DEBUG - on stmt: $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-01-20 15:59:12,259 - numba.core.ssa - DEBUG - on stmt: $20load_deref.4 = freevar(retty: array(int32, 2d, C))
2025-01-20 15:59:12,259 - numba.core.ssa - DEBUG - on stmt: $22call.5 = call $6load_global.0(shape, dtype, $20load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($20load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,259 - numba.core.ssa - DEBUG - on stmt: $30return_value.6 = cast(value=$22call.5)
2025-01-20 15:59:12,259 - numba.core.ssa - DEBUG - on stmt: return $30return_value.6
2025-01-20 15:59:12,259 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$20load_deref.4': [(<numba.core.ir.Assign object at 0x763528b035c0>,
                                  0)],
             '$22call.5': [(<numba.core.ir.Assign object at 0x763528b03770>,
                            0)],
             '$30return_value.6': [(<numba.core.ir.Assign object at 0x763528b03890>,
                                    0)],
             '$6load_global.0': [(<numba.core.ir.Assign object at 0x763528b03260>,
                                  0)],
             'dtype': [(<numba.core.ir.Assign object at 0x763528b030e0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x763528b00620>, 0)]})
2025-01-20 15:59:12,259 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528b03e90>
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4447)
           2	RESUME(arg=0, lineno=4447)
           4	LOAD_GLOBAL(arg=1, lineno=4448)
          14	LOAD_FAST(arg=0, lineno=4448)
          16	CALL(arg=1, lineno=4448)
          24	POP_TOP(arg=None, lineno=4448)
          26	RETURN_CONST(arg=0, lineno=4448)
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4447)
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4447)
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4448)
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=4448)
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=4448)
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0', '$self14.2']
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=POP_TOP(arg=None, lineno=4448)
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - stack ['$16call.3']
2025-01-20 15:59:12,286 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=RETURN_CONST(arg=0, lineno=4448)
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,287 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$self14.2'}), (16, {'func': '$4load_global.0', 'args': ['$self14.2'], 'kw_names': None, 'res': '$16call.3'}), (26, {'retval': '$const26.4', 'castval': '$26return_const.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,287 - numba.core.interpreter - DEBUG - label 0:
    self = arg(0, name=self)                 ['self']
    $4load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(self, func=$4load_global.0, args=[Var(self, arrayobj.py:4447)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'self']
    $const26.4 = const(NoneType, None)       ['$const26.4']
    $26return_const.5 = cast(value=$const26.4) ['$26return_const.5', '$const26.4']
    return $26return_const.5                 ['$26return_const.5']

2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528b617f0>
2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - on stmt: self = arg(0, name=self)
2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - on stmt: $16call.3 = call $4load_global.0(self, func=$4load_global.0, args=[Var(self, arrayobj.py:4447)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - on stmt: $const26.4 = const(NoneType, None)
2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - on stmt: $26return_const.5 = cast(value=$const26.4)
2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - on stmt: return $26return_const.5
2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x763528b60e30>,
                            0)],
             '$26return_const.5': [(<numba.core.ir.Assign object at 0x763528b61040>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x763528b60950>,
                                  0)],
             '$const26.4': [(<numba.core.ir.Assign object at 0x763528b60f20>,
                             0)],
             'self': [(<numba.core.ir.Assign object at 0x763528b60b60>, 0)]})
2025-01-20 15:59:12,290 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528b617f0>
2025-01-20 15:59:12,331 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4456)
           2	RESUME(arg=0, lineno=4456)
           4	LOAD_GLOBAL(arg=1, lineno=4457)
          14	LOAD_ATTR(arg=2, lineno=4457)
          34	LOAD_FAST(arg=0, lineno=4457)
          36	LOAD_FAST(arg=1, lineno=4457)
          38	KW_NAMES(arg=1, lineno=4457)
          40	CALL(arg=2, lineno=4457)
          48	STORE_FAST(arg=2, lineno=4457)
          50	LOAD_FAST(arg=2, lineno=4458)
          52	LOAD_ATTR(arg=5, lineno=4458)
          72	CALL(arg=0, lineno=4458)
          80	POP_TOP(arg=None, lineno=4458)
          82	LOAD_FAST(arg=2, lineno=4459)
          84	RETURN_VALUE(arg=None, lineno=4459)
2025-01-20 15:59:12,331 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,331 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,331 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,331 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4456)
2025-01-20 15:59:12,331 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,331 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4456)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4457)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=4457)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4457)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=1, lineno=4457)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$shape34.3']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=KW_NAMES(arg=1, lineno=4457)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$shape34.3', '$dtype36.4']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL(arg=2, lineno=4457)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$14load_attr.2', '$shape34.3', '$dtype36.4']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=4457)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$40call.5']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=2, lineno=4458)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_ATTR(arg=5, lineno=4458)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$arr50.6']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL(arg=0, lineno=4458)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$null$52.7', '$52load_attr.8']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_TOP(arg=None, lineno=4458)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$72call.9']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=2, lineno=4459)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=4459)
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - stack ['$arr82.10']
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,332 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,333 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,333 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,333 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,333 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,333 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,333 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,333 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'item': '$4load_global.0', 'res': '$14load_attr.2'}), (34, {'res': '$shape34.3'}), (36, {'res': '$dtype36.4'}), (40, {'func': '$14load_attr.2', 'args': ['$shape34.3', '$dtype36.4'], 'kw_names': 1, 'res': '$40call.5'}), (48, {'value': '$40call.5'}), (50, {'res': '$arr50.6'}), (52, {'item': '$arr50.6', 'res': '$52load_attr.8'}), (72, {'func': '$52load_attr.8', 'args': [], 'kw_names': None, 'res': '$72call.9'}), (82, {'res': '$arr82.10'}), (84, {'retval': '$arr82.10', 'castval': '$84return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,333 - numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>) ['$4load_global.0']
    $14load_attr.2 = getattr(value=$4load_global.0, attr=empty) ['$14load_attr.2', '$4load_global.0']
    arr = call $14load_attr.2(shape, func=$14load_attr.2, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None) ['$14load_attr.2', 'arr', 'dtype', 'shape']
    $52load_attr.8 = getattr(value=arr, attr=_zero_fill) ['$52load_attr.8', 'arr']
    $72call.9 = call $52load_attr.8(func=$52load_attr.8, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_attr.8', '$72call.9']
    $84return_value.11 = cast(value=arr)     ['$84return_value.11', 'arr']
    return $84return_value.11                ['$84return_value.11']

2025-01-20 15:59:12,336 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,336 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528b57170>
2025-01-20 15:59:12,336 - numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
2025-01-20 15:59:12,336 - numba.core.ssa - DEBUG - on stmt: dtype = arg(1, name=dtype)
2025-01-20 15:59:12,336 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,336 - numba.core.ssa - DEBUG - on stmt: $14load_attr.2 = getattr(value=$4load_global.0, attr=empty)
2025-01-20 15:59:12,336 - numba.core.ssa - DEBUG - on stmt: arr = call $14load_attr.2(shape, func=$14load_attr.2, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,337 - numba.core.ssa - DEBUG - on stmt: $52load_attr.8 = getattr(value=arr, attr=_zero_fill)
2025-01-20 15:59:12,337 - numba.core.ssa - DEBUG - on stmt: $72call.9 = call $52load_attr.8(func=$52load_attr.8, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,337 - numba.core.ssa - DEBUG - on stmt: $84return_value.11 = cast(value=arr)
2025-01-20 15:59:12,337 - numba.core.ssa - DEBUG - on stmt: return $84return_value.11
2025-01-20 15:59:12,337 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14load_attr.2': [(<numba.core.ir.Assign object at 0x763528b549e0>,
                                 0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x763528b55610>,
                                  0)],
             '$52load_attr.8': [(<numba.core.ir.Assign object at 0x763528b543b0>,
                                 0)],
             '$72call.9': [(<numba.core.ir.Assign object at 0x763528b54200>,
                            0)],
             '$84return_value.11': [(<numba.core.ir.Assign object at 0x763528b577d0>,
                                     0)],
             'arr': [(<numba.core.ir.Assign object at 0x763528b54740>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x763528b55be0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x763528b54ef0>, 0)]})
2025-01-20 15:59:12,337 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528b57170>
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	COPY_FREE_VARS(arg=1, lineno=4388)
           4	RESUME(arg=0, lineno=4388)
           6	LOAD_GLOBAL(arg=1, lineno=4389)
          16	LOAD_FAST(arg=0, lineno=4389)
          18	LOAD_FAST(arg=1, lineno=4389)
          20	LOAD_DEREF(arg=2, lineno=4389)
          22	CALL(arg=3, lineno=4389)
          30	RETURN_VALUE(arg=None, lineno=4389)
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4388)
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=4388)
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=4388)
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=1, lineno=4389)
2025-01-20 15:59:12,339 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=4389)
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0']
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=4389)
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2']
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_DEREF(arg=2, lineno=4389)
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2', '$dtype18.3']
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=CALL(arg=3, lineno=4389)
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2', '$dtype18.3', '$20load_deref.4']
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=RETURN_VALUE(arg=None, lineno=4389)
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - stack ['$22call.5']
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,340 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'idx': 0, 'res': '$6load_global.0'}), (16, {'res': '$shape16.2'}), (18, {'res': '$dtype18.3'}), (20, {'res': '$20load_deref.4'}), (22, {'func': '$6load_global.0', 'args': ['$shape16.2', '$dtype18.3', '$20load_deref.4'], 'kw_names': None, 'res': '$22call.5'}), (30, {'retval': '$22call.5', 'castval': '$30return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,341 - numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$6load_global.0']
    $20load_deref.4 = freevar(retty: array(int32, 1d, C)) ['$20load_deref.4']
    $22call.5 = call $6load_global.0(shape, dtype, $20load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($20load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_deref.4', '$22call.5', '$6load_global.0', 'dtype', 'shape']
    $30return_value.6 = cast(value=$22call.5) ['$22call.5', '$30return_value.6']
    return $30return_value.6                 ['$30return_value.6']

2025-01-20 15:59:12,343 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,343 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528b57620>
2025-01-20 15:59:12,343 - numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
2025-01-20 15:59:12,343 - numba.core.ssa - DEBUG - on stmt: dtype = arg(1, name=dtype)
2025-01-20 15:59:12,343 - numba.core.ssa - DEBUG - on stmt: $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-01-20 15:59:12,344 - numba.core.ssa - DEBUG - on stmt: $20load_deref.4 = freevar(retty: array(int32, 1d, C))
2025-01-20 15:59:12,344 - numba.core.ssa - DEBUG - on stmt: $22call.5 = call $6load_global.0(shape, dtype, $20load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($20load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,344 - numba.core.ssa - DEBUG - on stmt: $30return_value.6 = cast(value=$22call.5)
2025-01-20 15:59:12,344 - numba.core.ssa - DEBUG - on stmt: return $30return_value.6
2025-01-20 15:59:12,344 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$20load_deref.4': [(<numba.core.ir.Assign object at 0x763528b478c0>,
                                  0)],
             '$22call.5': [(<numba.core.ir.Assign object at 0x763528b473b0>,
                            0)],
             '$30return_value.6': [(<numba.core.ir.Assign object at 0x763528b47200>,
                                    0)],
             '$6load_global.0': [(<numba.core.ir.Assign object at 0x763528b47cb0>,
                                  0)],
             'dtype': [(<numba.core.ir.Assign object at 0x763528b55490>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x763528b55970>, 0)]})
2025-01-20 15:59:12,344 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528b57620>
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4447)
           2	RESUME(arg=0, lineno=4447)
           4	LOAD_GLOBAL(arg=1, lineno=4448)
          14	LOAD_FAST(arg=0, lineno=4448)
          16	CALL(arg=1, lineno=4448)
          24	POP_TOP(arg=None, lineno=4448)
          26	RETURN_CONST(arg=0, lineno=4448)
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4447)
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4447)
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4448)
2025-01-20 15:59:12,368 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=4448)
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=4448)
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0', '$self14.2']
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=POP_TOP(arg=None, lineno=4448)
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - stack ['$16call.3']
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=RETURN_CONST(arg=0, lineno=4448)
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,369 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,370 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$self14.2'}), (16, {'func': '$4load_global.0', 'args': ['$self14.2'], 'kw_names': None, 'res': '$16call.3'}), (26, {'retval': '$const26.4', 'castval': '$26return_const.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,370 - numba.core.interpreter - DEBUG - label 0:
    self = arg(0, name=self)                 ['self']
    $4load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(self, func=$4load_global.0, args=[Var(self, arrayobj.py:4447)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'self']
    $const26.4 = const(NoneType, None)       ['$const26.4']
    $26return_const.5 = cast(value=$const26.4) ['$26return_const.5', '$const26.4']
    return $26return_const.5                 ['$26return_const.5']

2025-01-20 15:59:12,372 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,372 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528bbbdd0>
2025-01-20 15:59:12,373 - numba.core.ssa - DEBUG - on stmt: self = arg(0, name=self)
2025-01-20 15:59:12,373 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
2025-01-20 15:59:12,373 - numba.core.ssa - DEBUG - on stmt: $16call.3 = call $4load_global.0(self, func=$4load_global.0, args=[Var(self, arrayobj.py:4447)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,373 - numba.core.ssa - DEBUG - on stmt: $const26.4 = const(NoneType, None)
2025-01-20 15:59:12,373 - numba.core.ssa - DEBUG - on stmt: $26return_const.5 = cast(value=$const26.4)
2025-01-20 15:59:12,373 - numba.core.ssa - DEBUG - on stmt: return $26return_const.5
2025-01-20 15:59:12,373 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$16call.3': [(<numba.core.ir.Assign object at 0x763528bbb5c0>,
                            0)],
             '$26return_const.5': [(<numba.core.ir.Assign object at 0x763528bbb800>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x763528bbb440>,
                                  0)],
             '$const26.4': [(<numba.core.ir.Assign object at 0x763528bbb6e0>,
                             0)],
             'self': [(<numba.core.ir.Assign object at 0x763528bbb140>, 0)]})
2025-01-20 15:59:12,373 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528bbbdd0>
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	COPY_FREE_VARS(arg=1, lineno=437)
           4	RESUME(arg=0, lineno=437)
           6	LOAD_DEREF(arg=3, lineno=440)
           8	STORE_FAST(arg=1, lineno=440)
          10	LOAD_GLOBAL(arg=1, lineno=441)
          20	LOAD_ATTR(arg=2, lineno=441)
          40	LOAD_FAST(arg=0, lineno=441)
          42	CALL(arg=1, lineno=441)
          50	GET_ITER(arg=None, lineno=441)
>         52	FOR_ITER(arg=21, lineno=441)
          56	STORE_FAST(arg=2, lineno=441)
          58	LOAD_FAST(arg=1, lineno=442)
          60	LOAD_FAST(arg=2, lineno=442)
          62	LOAD_ATTR(arg=5, lineno=442)
          82	CALL(arg=0, lineno=442)
          90	BINARY_OP(arg=13, lineno=442)
          94	STORE_FAST(arg=1, lineno=442)
          96	JUMP_BACKWARD(arg=23, lineno=442)
>         98	END_FOR(arg=None, lineno=441)
         100	LOAD_FAST(arg=1, lineno=443)
         102	LOAD_FAST(arg=0, lineno=443)
         104	LOAD_ATTR(arg=6, lineno=443)
         124	BINARY_OP(arg=11, lineno=443)
         128	RETURN_VALUE(arg=None, lineno=443)
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=437)
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=437)
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=440)
2025-01-20 15:59:12,416 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=440)
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - stack ['$6load_deref.0']
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=441)
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=2, lineno=441)
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - stack ['$null$10.2', '$10load_global.1']
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=441)
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - stack ['$null$10.2', '$20load_attr.3']
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=CALL(arg=1, lineno=441)
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - stack ['$null$10.2', '$20load_attr.3', '$a40.4']
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=GET_ITER(arg=None, lineno=441)
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - stack ['$42call.5']
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=('$50get_iter.6',), blockstack=(), npush=0)]
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - stack: ['$phi52.0']
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=1)
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=FOR_ITER(arg=21, lineno=441)
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - stack ['$phi52.0']
2025-01-20 15:59:12,417 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0), Edge(pc=56, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0)]
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=2), State(pc_initial=56 nstack_initial=2)])
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - stack: ['$phi98.0', '$phi98.1']
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=2)
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=END_FOR(arg=None, lineno=441)
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - stack ['$phi98.0', '$phi98.1']
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=443)
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=443)
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - stack ['$c100.2']
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_ATTR(arg=6, lineno=443)
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - stack ['$c100.2', '$a102.3']
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - dispatch pc=124, inst=BINARY_OP(arg=11, lineno=443)
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - stack ['$c100.2', '$104load_attr.4']
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=443)
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - stack ['$binop_truediv124.5']
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=2)])
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - stack: ['$phi56.0', '$phi56.1']
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=2)
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=2, lineno=441)
2025-01-20 15:59:12,418 - numba.core.byteflow - DEBUG - stack ['$phi56.0', '$phi56.1']
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=442)
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - stack ['$phi56.0']
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=2, lineno=442)
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - stack ['$phi56.0', '$c58.2']
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_ATTR(arg=5, lineno=442)
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - stack ['$phi56.0', '$c58.2', '$v60.3']
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=CALL(arg=0, lineno=442)
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - stack ['$phi56.0', '$c58.2', '$null$62.4', '$62load_attr.5']
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=13, lineno=442)
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - stack ['$phi56.0', '$c58.2', '$82call.6']
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=1, lineno=442)
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - stack ['$phi56.0', '$binop_iadd90.7']
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=JUMP_BACKWARD(arg=23, lineno=442)
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - stack ['$phi56.0']
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=('$phi56.0',), blockstack=(), npush=0)]
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=1): {'$phi52.0'},
             State(pc_initial=56 nstack_initial=2): {'$phi56.1'},
             State(pc_initial=98 nstack_initial=2): set()})
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - defmap: {'$phi52.0': State(pc_initial=0 nstack_initial=0),
 '$phi56.1': State(pc_initial=52 nstack_initial=1),
 '$phi98.1': State(pc_initial=52 nstack_initial=1)}
2025-01-20 15:59:12,419 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2))},
             '$phi56.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2025-01-20 15:59:12,420 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2025-01-20 15:59:12,420 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2025-01-20 15:59:12,420 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2025-01-20 15:59:12,421 - numba.core.byteflow - DEBUG - keep phismap: {'$phi52.0': {('$50get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi56.1': {('$52for_iter.2', State(pc_initial=52 nstack_initial=1))}}
2025-01-20 15:59:12,421 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi52.0': '$50get_iter.6'},
             State(pc_initial=52 nstack_initial=1): {'$phi56.1': '$52for_iter.2'}})
2025-01-20 15:59:12,421 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,421 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (20, {'item': '$10load_global.1', 'res': '$20load_attr.3'}), (40, {'res': '$a40.4'}), (42, {'func': '$20load_attr.3', 'args': ['$a40.4'], 'kw_names': None, 'res': '$42call.5'}), (50, {'value': '$42call.5', 'res': '$50get_iter.6'})), outgoing_phis={'$phi52.0': '$50get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$50get_iter.6',)})
2025-01-20 15:59:12,421 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=1):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.0', 'pair': '$52for_iter.1', 'indval': '$52for_iter.2', 'pred': '$52for_iter.3'}),), outgoing_phis={'$phi56.1': '$52for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi52.0', '$52for_iter.2'), 56: ('$phi52.0', '$52for_iter.2')})
2025-01-20 15:59:12,421 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=56 nstack_initial=2):
AdaptBlockInfo(insts=((56, {'value': '$phi56.1'}), (58, {'res': '$c58.2'}), (60, {'res': '$v60.3'}), (62, {'item': '$v60.3', 'res': '$62load_attr.5'}), (82, {'func': '$62load_attr.5', 'args': [], 'kw_names': None, 'res': '$82call.6'}), (90, {'op': '+=', 'lhs': '$c58.2', 'rhs': '$82call.6', 'res': '$binop_iadd90.7'}), (94, {'value': '$binop_iadd90.7'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi56.0',)})
2025-01-20 15:59:12,421 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=2):
AdaptBlockInfo(insts=((100, {'res': '$c100.2'}), (102, {'res': '$a102.3'}), (104, {'item': '$a102.3', 'res': '$104load_attr.4'}), (124, {'op': '/', 'lhs': '$c100.2', 'rhs': '$104load_attr.4', 'res': '$binop_truediv124.5'}), (128, {'retval': '$binop_truediv124.5', 'castval': '$128return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,422 - numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>) ['$10load_global.1']
    $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$20load_attr.3']
    $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_attr.3', '$42call.5', 'a']
    $50get_iter.6 = getiter(value=$42call.5) ['$42call.5', '$50get_iter.6']
    $phi52.0 = $50get_iter.6                 ['$50get_iter.6', '$phi52.0']
    jump 52                                  []
label 52:
    $52for_iter.1 = iternext(value=$phi52.0) ['$52for_iter.1', '$phi52.0']
    $52for_iter.2 = pair_first(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.2']
    $52for_iter.3 = pair_second(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.3']
    $phi56.1 = $52for_iter.2                 ['$52for_iter.2', '$phi56.1']
    branch $52for_iter.3, 56, 98             ['$52for_iter.3']
label 56:
    v = $phi56.1                             ['$phi56.1', 'v']
    $62load_attr.5 = getattr(value=v, attr=item) ['$62load_attr.5', 'v']
    $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_attr.5', '$82call.6']
    $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined) ['$82call.6', '$binop_iadd90.7', 'c']
    c = $binop_iadd90.7                      ['$binop_iadd90.7', 'c']
    jump 52                                  []
label 98:
    $104load_attr.4 = getattr(value=a, attr=size) ['$104load_attr.4', 'a']
    $binop_truediv124.5 = c / $104load_attr.4 ['$104load_attr.4', '$binop_truediv124.5', 'c']
    $128return_value.6 = cast(value=$binop_truediv124.5) ['$128return_value.6', '$binop_truediv124.5']
    return $128return_value.6                ['$128return_value.6']

2025-01-20 15:59:12,426 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,426 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df05370>
2025-01-20 15:59:12,426 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,426 - numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2025-01-20 15:59:12,426 - numba.core.ssa - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,426 - numba.core.ssa - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: jump 52
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 52
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df05370>
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 56
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df05370>
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: v = $phi56.1
2025-01-20 15:59:12,427 - numba.core.ssa - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - on stmt: c = $binop_iadd90.7
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - on stmt: jump 52
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df05370>
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2025-01-20 15:59:12,428 - numba.core.ssa - DEBUG - on stmt: return $128return_value.6
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$104load_attr.4': [(<numba.core.ir.Assign object at 0x76351df05580>,
                                  98)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x76351df04ef0>,
                                   0)],
             '$128return_value.6': [(<numba.core.ir.Assign object at 0x763528bf24e0>,
                                     98)],
             '$20load_attr.3': [(<numba.core.ir.Assign object at 0x76351df04680>,
                                 0)],
             '$42call.5': [(<numba.core.ir.Assign object at 0x76351df04350>,
                            0)],
             '$50get_iter.6': [(<numba.core.ir.Assign object at 0x76351df07a10>,
                                0)],
             '$52for_iter.1': [(<numba.core.ir.Assign object at 0x76351df07a70>,
                                52)],
             '$52for_iter.2': [(<numba.core.ir.Assign object at 0x76351df043e0>,
                                52)],
             '$52for_iter.3': [(<numba.core.ir.Assign object at 0x76351df04560>,
                                52)],
             '$62load_attr.5': [(<numba.core.ir.Assign object at 0x76351df077d0>,
                                 56)],
             '$82call.6': [(<numba.core.ir.Assign object at 0x76351df07590>,
                            56)],
             '$binop_iadd90.7': [(<numba.core.ir.Assign object at 0x76351df074a0>,
                                  56)],
             '$binop_truediv124.5': [(<numba.core.ir.Assign object at 0x76351df05460>,
                                      98)],
             '$phi52.0': [(<numba.core.ir.Assign object at 0x76351df04590>, 0)],
             '$phi56.1': [(<numba.core.ir.Assign object at 0x76351df07800>,
                           52)],
             'a': [(<numba.core.ir.Assign object at 0x76351df060c0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x76351df04da0>, 0),
                   (<numba.core.ir.Assign object at 0x76351df07410>, 56)],
             'v': [(<numba.core.ir.Assign object at 0x76351df05970>, 56)]})
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x76351df05370>
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - Fix SSA violator on var c
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x76351df05f40>
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - first assign: c
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,429 - numba.core.ssa - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: jump 52
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x76351df05f40>
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x76351df05f40>
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: v = $phi56.1
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: c = $binop_iadd90.7
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - replaced with: c.1 = $binop_iadd90.7
2025-01-20 15:59:12,430 - numba.core.ssa - DEBUG - on stmt: jump 52
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x76351df05f40>
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: return $128return_value.6
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x76351df057c0>],
             56: [<numba.core.ir.Assign object at 0x76351df04fb0>]})
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x76351df05f40>
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: jump 52
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x76351df05f40>
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2025-01-20 15:59:12,431 - numba.core.ssa - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x76351df05f40>
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - on stmt: v = $phi56.1
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - on stmt: $62load_attr.5 = getattr(value=v, attr=item)
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - on stmt: $82call.6 = call $62load_attr.5(func=$62load_attr.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - find_def var='c' stmt=$binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - find_def_from_top label 56
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - idom 52 from label 56
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - find_def_from_bottom label 52
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - find_def_from_top label 52
2025-01-20 15:59:12,432 - numba.core.ssa - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 52
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - find_def_from_bottom label 56
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - incoming_def c.1 = $binop_iadd90.7
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - replaced with: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - on stmt: c.1 = $binop_iadd90.7
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - on stmt: jump 52
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x76351df05f40>
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2025-01-20 15:59:12,433 - numba.core.ssa - DEBUG - find_def var='c' stmt=$binop_truediv124.5 = c / $104load_attr.4
2025-01-20 15:59:12,434 - numba.core.ssa - DEBUG - find_def_from_top label 98
2025-01-20 15:59:12,434 - numba.core.ssa - DEBUG - idom 52 from label 98
2025-01-20 15:59:12,434 - numba.core.ssa - DEBUG - find_def_from_bottom label 52
2025-01-20 15:59:12,434 - numba.core.ssa - DEBUG - replaced with: $binop_truediv124.5 = c.2 / $104load_attr.4
2025-01-20 15:59:12,434 - numba.core.ssa - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2025-01-20 15:59:12,434 - numba.core.ssa - DEBUG - on stmt: return $128return_value.6
2025-01-20 15:59:12,445 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=3535)
           2	RESUME(arg=0, lineno=3535)
           4	LOAD_GLOBAL(arg=1, lineno=3536)
          14	LOAD_FAST(arg=0, lineno=3536)
          16	CALL(arg=1, lineno=3536)
          24	STORE_FAST(arg=2, lineno=3536)
          26	LOAD_GLOBAL(arg=3, lineno=3537)
          36	LOAD_FAST(arg=2, lineno=3537)
          38	CALL(arg=1, lineno=3537)
          46	GET_ITER(arg=None, lineno=3537)
>         48	FOR_ITER(arg=39, lineno=3537)
          52	STORE_FAST(arg=3, lineno=3537)
          54	LOAD_FAST(arg=0, lineno=3538)
          56	LOAD_FAST(arg=3, lineno=3538)
          58	BINARY_SUBSCR(arg=None, lineno=3538)
          62	LOAD_FAST(arg=1, lineno=3538)
          64	LOAD_GLOBAL(arg=1, lineno=3538)
          74	LOAD_FAST(arg=1, lineno=3538)
          76	CALL(arg=1, lineno=3538)
          84	LOAD_FAST(arg=2, lineno=3538)
          86	BINARY_OP(arg=10, lineno=3538)
          90	LOAD_FAST(arg=3, lineno=3538)
          92	BINARY_OP(arg=0, lineno=3538)
          96	BINARY_SUBSCR(arg=None, lineno=3538)
         100	COMPARE_OP(arg=55, lineno=3538)
         104	POP_JUMP_IF_TRUE(arg=1, lineno=3538)
         106	JUMP_BACKWARD(arg=30, lineno=3538)
>        108	LOAD_GLOBAL(arg=5, lineno=3539)
         118	LOAD_CONST(arg=1, lineno=3539)
         120	CALL(arg=1, lineno=3539)
         128	RAISE_VARARGS(arg=1, lineno=3539)
>        130	END_FOR(arg=None, lineno=3537)
         132	RETURN_CONST(arg=0, lineno=3537)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=3535)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=3535)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=3536)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=3536)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=3536)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0', '$shape14.2']
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=2, lineno=3536)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - stack ['$16call.3']
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=3, lineno=3537)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=3537)
2025-01-20 15:59:12,446 - numba.core.byteflow - DEBUG - stack ['$null$26.5', '$26load_global.4']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=3537)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack ['$null$26.5', '$26load_global.4', '$n36.6']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=GET_ITER(arg=None, lineno=3537)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack ['$38call.7']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=48, stack=('$46get_iter.8',), blockstack=(), npush=0)]
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=1)])
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack: ['$phi48.0']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=1)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=FOR_ITER(arg=39, lineno=3537)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack ['$phi48.0']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=130, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0), Edge(pc=52, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0)]
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=2), State(pc_initial=52 nstack_initial=2)])
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack: ['$phi130.0', '$phi130.1']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=130 nstack_initial=2)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - dispatch pc=130, inst=END_FOR(arg=None, lineno=3537)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack ['$phi130.0', '$phi130.1']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - dispatch pc=132, inst=RETURN_CONST(arg=0, lineno=3537)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack: ['$phi52.0', '$phi52.1']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=3, lineno=3537)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$phi52.1']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=3538)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack ['$phi52.0']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=3, lineno=3538)
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$shape54.2']
2025-01-20 15:59:12,447 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$shape54.2', '$i56.3']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_GLOBAL(arg=1, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$null$64.7', '$64load_global.6']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL(arg=1, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$null$64.7', '$64load_global.6', '$main_shape74.8']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=2, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$76call.9']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=BINARY_OP(arg=10, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$76call.9', '$n84.10']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=3, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$binop_sub86.11']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=BINARY_OP(arg=0, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$binop_sub86.11', '$i90.12']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$binop_add92.13']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=COMPARE_OP(arg=55, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$96binary_subscr.14']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=POP_JUMP_IF_TRUE(arg=1, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi52.0', '$100compare_op.15']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=108, stack=('$phi52.0',), blockstack=(), npush=0)]
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=1), State(pc_initial=108 nstack_initial=1)])
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack: ['$phi106.0']
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=1)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=JUMP_BACKWARD(arg=30, lineno=3538)
2025-01-20 15:59:12,448 - numba.core.byteflow - DEBUG - stack ['$phi106.0']
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=48, stack=('$phi106.0',), blockstack=(), npush=0)]
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=108 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - stack: ['$phi108.0']
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=108 nstack_initial=1)
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_GLOBAL(arg=5, lineno=3539)
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - stack ['$phi108.0']
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=1, lineno=3539)
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - stack ['$phi108.0', '$null$108.2', '$108load_global.1']
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=CALL(arg=1, lineno=3539)
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - stack ['$phi108.0', '$null$108.2', '$108load_global.1', '$const118.3']
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - dispatch pc=128, inst=RAISE_VARARGS(arg=1, lineno=3539)
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - stack ['$phi108.0', '$120call.4']
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=1)])
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=106 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=1): set(),
             State(pc_initial=130 nstack_initial=2): set()})
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - defmap: {'$phi130.1': State(pc_initial=48 nstack_initial=1),
 '$phi48.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=48 nstack_initial=1)}
2025-01-20 15:59:12,449 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi108.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi130.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi106.0',
                           State(pc_initial=106 nstack_initial=1))},
             '$phi52.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2025-01-20 15:59:12,450 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi108.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi130.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi106.0',
                            State(pc_initial=106 nstack_initial=1))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi52.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2025-01-20 15:59:12,450 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2025-01-20 15:59:12,450 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2025-01-20 15:59:12,450 - numba.core.byteflow - DEBUG - keep phismap: {'$phi48.0': {('$46get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$48for_iter.2', State(pc_initial=48 nstack_initial=1))}}
2025-01-20 15:59:12,450 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi48.0': '$46get_iter.8'},
             State(pc_initial=48 nstack_initial=1): {'$phi52.1': '$48for_iter.2'}})
2025-01-20 15:59:12,451 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,451 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$shape14.2'}), (16, {'func': '$4load_global.0', 'args': ['$shape14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'value': '$16call.3'}), (26, {'idx': 1, 'res': '$26load_global.4'}), (36, {'res': '$n36.6'}), (38, {'func': '$26load_global.4', 'args': ['$n36.6'], 'kw_names': None, 'res': '$38call.7'}), (46, {'value': '$38call.7', 'res': '$46get_iter.8'})), outgoing_phis={'$phi48.0': '$46get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$46get_iter.8',)})
2025-01-20 15:59:12,451 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'iterator': '$phi48.0', 'pair': '$48for_iter.1', 'indval': '$48for_iter.2', 'pred': '$48for_iter.3'}),), outgoing_phis={'$phi52.1': '$48for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ('$phi48.0', '$48for_iter.2'), 52: ('$phi48.0', '$48for_iter.2')})
2025-01-20 15:59:12,451 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$shape54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$shape54.2', 'res': '$58binary_subscr.4'}), (62, {'res': '$main_shape62.5'}), (64, {'idx': 0, 'res': '$64load_global.6'}), (74, {'res': '$main_shape74.8'}), (76, {'func': '$64load_global.6', 'args': ['$main_shape74.8'], 'kw_names': None, 'res': '$76call.9'}), (84, {'res': '$n84.10'}), (86, {'op': '-', 'lhs': '$76call.9', 'rhs': '$n84.10', 'res': '$binop_sub86.11'}), (90, {'res': '$i90.12'}), (92, {'op': '+', 'lhs': '$binop_sub86.11', 'rhs': '$i90.12', 'res': '$binop_add92.13'}), (96, {'index': '$binop_add92.13', 'target': '$main_shape62.5', 'res': '$96binary_subscr.14'}), (100, {'lhs': '$58binary_subscr.4', 'rhs': '$96binary_subscr.14', 'res': '$100compare_op.15'}), (104, {'pred': '$100compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ('$phi52.0',), 108: ('$phi52.0',)})
2025-01-20 15:59:12,451 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=106 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$phi106.0',)})
2025-01-20 15:59:12,451 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=108 nstack_initial=1):
AdaptBlockInfo(insts=((108, {'idx': 2, 'res': '$108load_global.1'}), (118, {'res': '$const118.3'}), (120, {'func': '$108load_global.1', 'args': ['$const118.3'], 'kw_names': None, 'res': '$120call.4'}), (128, {'exc': '$120call.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,451 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=130 nstack_initial=2):
AdaptBlockInfo(insts=((132, {'retval': '$const132.2', 'castval': '$132return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,452 - numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    n = call $4load_global.0(shape, func=$4load_global.0, args=[Var(shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'n', 'shape']
    $26load_global.4 = global(range: <class 'range'>) ['$26load_global.4']
    $38call.7 = call $26load_global.4(n, func=$26load_global.4, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.4', '$38call.7', 'n']
    $46get_iter.8 = getiter(value=$38call.7) ['$38call.7', '$46get_iter.8']
    $phi48.0 = $46get_iter.8                 ['$46get_iter.8', '$phi48.0']
    jump 48                                  []
label 48:
    $48for_iter.1 = iternext(value=$phi48.0) ['$48for_iter.1', '$phi48.0']
    $48for_iter.2 = pair_first(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.2']
    $48for_iter.3 = pair_second(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.3']
    $phi52.1 = $48for_iter.2                 ['$48for_iter.2', '$phi52.1']
    branch $48for_iter.3, 52, 130            ['$48for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'i', 'shape']
    $64load_global.6 = global(len: <built-in function len>) ['$64load_global.6']
    $76call.9 = call $64load_global.6(main_shape, func=$64load_global.6, args=[Var(main_shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.6', '$76call.9', 'main_shape']
    $binop_sub86.11 = $76call.9 - n          ['$76call.9', '$binop_sub86.11', 'n']
    $binop_add92.13 = $binop_sub86.11 + i    ['$binop_add92.13', '$binop_sub86.11', 'i']
    $96binary_subscr.14 = getitem(value=main_shape, index=$binop_add92.13, fn=<built-in function getitem>) ['$96binary_subscr.14', '$binop_add92.13', 'main_shape']
    $100compare_op.15 = $58binary_subscr.4 != $96binary_subscr.14 ['$100compare_op.15', '$58binary_subscr.4', '$96binary_subscr.14']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($100compare_op.15, func=bool104, args=(Var($100compare_op.15, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.15', '$104pred', 'bool104']
    branch $104pred, 108, 106                ['$104pred']
label 106:
    jump 48                                  []
label 108:
    $108load_global.1 = global(ValueError: <class 'ValueError'>) ['$108load_global.1']
    $const118.3 = const(str, nditer(): operands could not be broadcast together) ['$const118.3']
    $120call.4 = call $108load_global.1($const118.3, func=$108load_global.1, args=[Var($const118.3, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None) ['$108load_global.1', '$120call.4', '$const118.3']
    raise $120call.4                         ['$120call.4']
label 130:
    $const132.2 = const(NoneType, None)      ['$const132.2']
    $132return_const.3 = cast(value=$const132.2) ['$132return_const.3', '$const132.2']
    return $132return_const.3                ['$132return_const.3']

2025-01-20 15:59:12,456 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,456 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528bf3e00>
2025-01-20 15:59:12,456 - numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
2025-01-20 15:59:12,456 - numba.core.ssa - DEBUG - on stmt: main_shape = arg(1, name=main_shape)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $26load_global.4 = global(range: <class 'range'>)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $38call.7 = call $26load_global.4(n, func=$26load_global.4, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $46get_iter.8 = getiter(value=$38call.7)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $phi48.0 = $46get_iter.8
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: jump 48
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 48
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528bf3e00>
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $48for_iter.1 = iternext(value=$phi48.0)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $phi52.1 = $48for_iter.2
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: branch $48for_iter.3, 52, 130
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 52
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528bf3e00>
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: i = $phi52.1
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $58binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $64load_global.6 = global(len: <built-in function len>)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $76call.9 = const(int, 1)
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $binop_sub86.11 = $76call.9 - n
2025-01-20 15:59:12,457 - numba.core.ssa - DEBUG - on stmt: $binop_add92.13 = $binop_sub86.11 + i
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: $96binary_subscr.14 = getitem(value=main_shape, index=$binop_add92.13, fn=<built-in function getitem>)
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: $100compare_op.15 = $58binary_subscr.4 != $96binary_subscr.14
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($100compare_op.15, func=bool104, args=(Var($100compare_op.15, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: branch $104pred, 108, 106
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 106
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528bf3e00>
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: jump 48
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 108
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528bf3e00>
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: $108load_global.1 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: $const118.3 = const(str, nditer(): operands could not be broadcast together)
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: $120call.4 = call $108load_global.1($const118.3, func=$108load_global.1, args=[Var($const118.3, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 130
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528bf3e00>
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: $const132.2 = const(NoneType, None)
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: $132return_const.3 = cast(value=$const132.2)
2025-01-20 15:59:12,458 - numba.core.ssa - DEBUG - on stmt: return $132return_const.3
2025-01-20 15:59:12,459 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$100compare_op.15': [(<numba.core.ir.Assign object at 0x763528be3ce0>,
                                    52)],
             '$104pred': [(<numba.core.ir.Assign object at 0x763528be1e80>,
                           52)],
             '$108load_global.1': [(<numba.core.ir.Assign object at 0x763528bccf20>,
                                    108)],
             '$120call.4': [(<numba.core.ir.Assign object at 0x763528bcc7a0>,
                             108)],
             '$132return_const.3': [(<numba.core.ir.Assign object at 0x763528bcf7d0>,
                                     130)],
             '$26load_global.4': [(<numba.core.ir.Assign object at 0x763528be14c0>,
                                   0)],
             '$38call.7': [(<numba.core.ir.Assign object at 0x763528be3020>,
                            0)],
             '$46get_iter.8': [(<numba.core.ir.Assign object at 0x763528be2cc0>,
                                0)],
             '$48for_iter.1': [(<numba.core.ir.Assign object at 0x763528be17f0>,
                                48)],
             '$48for_iter.2': [(<numba.core.ir.Assign object at 0x763528be1280>,
                                48)],
             '$48for_iter.3': [(<numba.core.ir.Assign object at 0x763528be0f50>,
                                48)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x763528be2030>,
                                  0)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x763528be0c50>,
                                     52)],
             '$64load_global.6': [(<numba.core.ir.Assign object at 0x763528be0920>,
                                   52)],
             '$76call.9': [(<numba.core.ir.Assign object at 0x763528be0380>,
                            52)],
             '$96binary_subscr.14': [(<numba.core.ir.Assign object at 0x763528be3ec0>,
                                      52)],
             '$binop_add92.13': [(<numba.core.ir.Assign object at 0x763528be0230>,
                                  52)],
             '$binop_sub86.11': [(<numba.core.ir.Assign object at 0x763528be0d70>,
                                  52)],
             '$const118.3': [(<numba.core.ir.Assign object at 0x763528bcf230>,
                              108)],
             '$const132.2': [(<numba.core.ir.Assign object at 0x763528bcebd0>,
                              130)],
             '$phi48.0': [(<numba.core.ir.Assign object at 0x763528be15e0>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x763528be0ef0>,
                           48)],
             'bool104': [(<numba.core.ir.Assign object at 0x763528be1e20>, 52)],
             'i': [(<numba.core.ir.Assign object at 0x763528be11c0>, 52)],
             'main_shape': [(<numba.core.ir.Assign object at 0x763528be2330>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x763528be15b0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x763528be1c40>, 0)]})
2025-01-20 15:59:12,459 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528bf3e00>
2025-01-20 15:59:12,516 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=666)
           2	COPY_FREE_VARS(arg=1, lineno=666)
           4	RESUME(arg=0, lineno=666)
           6	PUSH_NULL(arg=None, lineno=667)
           8	LOAD_DEREF(arg=2, lineno=667)
          10	LOAD_FAST(arg=0, lineno=667)
          12	CALL(arg=1, lineno=667)
          20	RETURN_VALUE(arg=None, lineno=667)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=666)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=666)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=666)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=667)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=2, lineno=667)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - stack ['$null$6.0']
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=667)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - stack ['$null$6.0', '$8load_deref.1']
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=CALL(arg=1, lineno=667)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$a10.2']
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=667)
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - stack ['$12call.3']
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,517 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,518 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,518 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,518 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,518 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,518 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$a10.2'}), (12, {'func': '$8load_deref.1', 'args': ['$a10.2'], 'kw_names': None, 'res': '$12call.3'}), (20, {'retval': '$12call.3', 'castval': '$20return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,518 - numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    axis = arg(1, name=axis)                 ['axis']
    $8load_deref.1 = freevar(flatten_impl: <function array_argmin_impl_float at 0x76353ff50ae0>) ['$8load_deref.1']
    $12call.3 = call $8load_deref.1(a, func=$8load_deref.1, args=[Var(a, arraymath.py:666)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call.3', '$8load_deref.1', 'a']
    $20return_value.4 = cast(value=$12call.3) ['$12call.3', '$20return_value.4']
    return $20return_value.4                 ['$20return_value.4']

2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df93200>
2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - on stmt: axis = arg(1, name=axis)
2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(flatten_impl: <function array_argmin_impl_float at 0x76353ff50ae0>)
2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - on stmt: $12call.3 = call $8load_deref.1(a, func=$8load_deref.1, args=[Var(a, arraymath.py:666)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - on stmt: $20return_value.4 = cast(value=$12call.3)
2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - on stmt: return $20return_value.4
2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12call.3': [(<numba.core.ir.Assign object at 0x76351df93da0>,
                            0)],
             '$20return_value.4': [(<numba.core.ir.Assign object at 0x76351df93ec0>,
                                    0)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x76351df932f0>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x76351df931d0>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x76351df93b00>, 0)]})
2025-01-20 15:59:12,521 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x76351df93200>
2025-01-20 15:59:12,524 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=613)
           2	RESUME(arg=0, lineno=613)
           4	LOAD_FAST(arg=0, lineno=615)
           6	LOAD_ATTR(arg=0, lineno=615)
          26	LOAD_CONST(arg=1, lineno=615)
          28	COMPARE_OP(arg=40, lineno=615)
          32	POP_JUMP_IF_FALSE(arg=11, lineno=615)
          34	LOAD_GLOBAL(arg=3, lineno=616)
          44	LOAD_CONST(arg=2, lineno=616)
          46	CALL(arg=1, lineno=616)
          54	RAISE_VARARGS(arg=1, lineno=616)
>         56	LOAD_FAST(arg=0, lineno=617)
          58	LOAD_ATTR(arg=4, lineno=617)
          78	GET_ITER(arg=None, lineno=617)
          80	FOR_ITER(arg=7, lineno=617)
          84	STORE_FAST(arg=1, lineno=617)
          86	LOAD_FAST(arg=1, lineno=618)
          88	STORE_FAST(arg=2, lineno=618)
          90	LOAD_CONST(arg=1, lineno=619)
          92	STORE_FAST(arg=3, lineno=619)
          94	POP_TOP(arg=None, lineno=620)
          96	JUMP_FORWARD(arg=1, lineno=620)
>         98	END_FOR(arg=None, lineno=617)
>        100	LOAD_GLOBAL(arg=7, lineno=621)
         110	LOAD_ATTR(arg=8, lineno=621)
         130	LOAD_FAST_CHECK(arg=2, lineno=621)
         132	CALL(arg=1, lineno=621)
         140	POP_JUMP_IF_FALSE(arg=2, lineno=621)
         142	LOAD_FAST_CHECK(arg=3, lineno=622)
         144	RETURN_VALUE(arg=None, lineno=622)
>        146	LOAD_CONST(arg=1, lineno=624)
         148	STORE_FAST(arg=4, lineno=624)
         150	LOAD_FAST(arg=0, lineno=625)
         152	LOAD_ATTR(arg=4, lineno=625)
         172	GET_ITER(arg=None, lineno=625)
>        174	FOR_ITER(arg=41, lineno=625)
         178	STORE_FAST(arg=1, lineno=625)
         180	LOAD_GLOBAL(arg=7, lineno=626)
         190	LOAD_ATTR(arg=8, lineno=626)
         210	LOAD_FAST(arg=1, lineno=626)
         212	CALL(arg=1, lineno=626)
         220	POP_JUMP_IF_FALSE(arg=4, lineno=626)
         222	LOAD_FAST(arg=4, lineno=627)
         224	SWAP(arg=2, lineno=627)
         226	POP_TOP(arg=None, lineno=627)
         228	RETURN_VALUE(arg=None, lineno=627)
>        230	LOAD_FAST(arg=1, lineno=628)
         232	LOAD_FAST(arg=2, lineno=628)
         234	COMPARE_OP(arg=2, lineno=628)
         238	POP_JUMP_IF_FALSE(arg=4, lineno=628)
         240	LOAD_FAST(arg=1, lineno=629)
         242	STORE_FAST(arg=2, lineno=629)
         244	LOAD_FAST(arg=4, lineno=630)
         246	STORE_FAST(arg=3, lineno=630)
>        248	LOAD_FAST(arg=4, lineno=631)
         250	LOAD_CONST(arg=3, lineno=631)
         252	BINARY_OP(arg=13, lineno=631)
         256	STORE_FAST(arg=4, lineno=631)
         258	JUMP_BACKWARD(arg=43, lineno=631)
>        260	END_FOR(arg=None, lineno=625)
         262	LOAD_FAST_CHECK(arg=3, lineno=632)
         264	RETURN_VALUE(arg=None, lineno=632)
2025-01-20 15:59:12,524 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,524 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,524 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,524 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=613)
2025-01-20 15:59:12,524 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,524 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=613)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=615)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=615)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack ['$arry4.0']
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=615)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack ['$6load_attr.1']
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=40, lineno=615)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack ['$6load_attr.1', '$const26.2']
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=11, lineno=615)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack ['$28compare_op.3']
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=34 nstack_initial=0)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=616)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=616)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack ['$null$34.1', '$34load_global.0']
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=CALL(arg=1, lineno=616)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack ['$null$34.1', '$34load_global.0', '$const44.2']
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=RAISE_VARARGS(arg=1, lineno=616)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack ['$46call.3']
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0)])
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=0, lineno=617)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_ATTR(arg=4, lineno=617)
2025-01-20 15:59:12,525 - numba.core.byteflow - DEBUG - stack ['$arry56.0']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=617)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack ['$58load_attr.1']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.2',), blockstack=(), npush=0)]
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=7, lineno=617)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0), Edge(pc=84, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=2), State(pc_initial=84 nstack_initial=2)])
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack: ['$phi98.0', '$phi98.1']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=2)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=END_FOR(arg=None, lineno=617)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack ['$phi98.0', '$phi98.1']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=2), State(pc_initial=100 nstack_initial=0)])
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack: ['$phi84.0', '$phi84.1']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=2)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=STORE_FAST(arg=1, lineno=617)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack ['$phi84.0', '$phi84.1']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=1, lineno=618)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack ['$phi84.0']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=STORE_FAST(arg=2, lineno=618)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack ['$phi84.0', '$v86.2']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_CONST(arg=1, lineno=619)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack ['$phi84.0']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=3, lineno=619)
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - stack ['$phi84.0', '$const90.3']
2025-01-20 15:59:12,526 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=POP_TOP(arg=None, lineno=620)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack ['$phi84.0']
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=JUMP_FORWARD(arg=1, lineno=620)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=100 nstack_initial=0)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_GLOBAL(arg=7, lineno=621)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_ATTR(arg=8, lineno=621)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack ['$null$100.1', '$100load_global.0']
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - dispatch pc=130, inst=LOAD_FAST_CHECK(arg=2, lineno=621)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack ['$null$100.1', '$110load_attr.2']
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - dispatch pc=132, inst=CALL(arg=1, lineno=621)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack ['$null$100.1', '$110load_attr.2', '$min_value130.3']
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - dispatch pc=140, inst=POP_JUMP_IF_FALSE(arg=2, lineno=621)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack ['$132call.4']
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=142, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=142 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=142 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=142 nstack_initial=0)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - dispatch pc=142, inst=LOAD_FAST_CHECK(arg=3, lineno=622)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - dispatch pc=144, inst=RETURN_VALUE(arg=None, lineno=622)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack ['$min_idx142.0']
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0)])
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=1, lineno=624)
2025-01-20 15:59:12,527 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - dispatch pc=148, inst=STORE_FAST(arg=4, lineno=624)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack ['$const146.0']
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=0, lineno=625)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=4, lineno=625)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack ['$arry150.1']
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - dispatch pc=172, inst=GET_ITER(arg=None, lineno=625)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack ['$152load_attr.2']
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=174, stack=('$172get_iter.3',), blockstack=(), npush=0)]
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=174 nstack_initial=1)])
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack: ['$phi174.0']
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=174 nstack_initial=1)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - dispatch pc=174, inst=FOR_ITER(arg=41, lineno=625)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack ['$phi174.0']
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=260, stack=('$phi174.0', '$174for_iter.2'), blockstack=(), npush=0), Edge(pc=178, stack=('$phi174.0', '$174for_iter.2'), blockstack=(), npush=0)]
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=260 nstack_initial=2), State(pc_initial=178 nstack_initial=2)])
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack: ['$phi260.0', '$phi260.1']
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=260 nstack_initial=2)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - dispatch pc=260, inst=END_FOR(arg=None, lineno=625)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack ['$phi260.0', '$phi260.1']
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - dispatch pc=262, inst=LOAD_FAST_CHECK(arg=3, lineno=632)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - dispatch pc=264, inst=RETURN_VALUE(arg=None, lineno=632)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack ['$min_idx262.2']
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=2)])
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - stack: ['$phi178.0', '$phi178.1']
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=2)
2025-01-20 15:59:12,528 - numba.core.byteflow - DEBUG - dispatch pc=178, inst=STORE_FAST(arg=1, lineno=625)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$phi178.1']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - dispatch pc=180, inst=LOAD_GLOBAL(arg=7, lineno=626)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$phi178.0']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_ATTR(arg=8, lineno=626)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$180.3', '$180load_global.2']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=1, lineno=626)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$180.3', '$190load_attr.4']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - dispatch pc=212, inst=CALL(arg=1, lineno=626)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$null$180.3', '$190load_attr.4', '$v210.5']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - dispatch pc=220, inst=POP_JUMP_IF_FALSE(arg=4, lineno=626)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$phi178.0', '$212call.6']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=222, stack=('$phi178.0',), blockstack=(), npush=0), Edge(pc=230, stack=('$phi178.0',), blockstack=(), npush=0)]
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=222 nstack_initial=1), State(pc_initial=230 nstack_initial=1)])
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack: ['$phi222.0']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=222 nstack_initial=1)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=4, lineno=627)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$phi222.0']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - dispatch pc=224, inst=SWAP(arg=2, lineno=627)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$phi222.0', '$idx222.1']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - dispatch pc=226, inst=POP_TOP(arg=None, lineno=627)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$idx222.1', '$phi222.0']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - dispatch pc=228, inst=RETURN_VALUE(arg=None, lineno=627)
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack ['$idx222.1']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=230 nstack_initial=1)])
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - stack: ['$phi230.0']
2025-01-20 15:59:12,529 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=230 nstack_initial=1)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=1, lineno=628)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - stack ['$phi230.0']
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=2, lineno=628)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - stack ['$phi230.0', '$v230.1']
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - dispatch pc=234, inst=COMPARE_OP(arg=2, lineno=628)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - stack ['$phi230.0', '$v230.1', '$min_value232.2']
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - dispatch pc=238, inst=POP_JUMP_IF_FALSE(arg=4, lineno=628)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - stack ['$phi230.0', '$234compare_op.3']
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=240, stack=('$phi230.0',), blockstack=(), npush=0), Edge(pc=248, stack=('$phi230.0',), blockstack=(), npush=0)]
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=240 nstack_initial=1), State(pc_initial=248 nstack_initial=1)])
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - stack: ['$phi240.0']
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=240 nstack_initial=1)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=1, lineno=629)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - stack ['$phi240.0']
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=2, lineno=629)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - stack ['$phi240.0', '$v240.1']
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=630)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - stack ['$phi240.0']
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - dispatch pc=246, inst=STORE_FAST(arg=3, lineno=630)
2025-01-20 15:59:12,530 - numba.core.byteflow - DEBUG - stack ['$phi240.0', '$idx244.2']
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=248, stack=('$phi240.0',), blockstack=(), npush=0)]
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=248 nstack_initial=1), State(pc_initial=248 nstack_initial=1)])
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - stack: ['$phi248.0']
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=248 nstack_initial=1)
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - dispatch pc=248, inst=LOAD_FAST(arg=4, lineno=631)
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - stack ['$phi248.0']
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - dispatch pc=250, inst=LOAD_CONST(arg=3, lineno=631)
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - stack ['$phi248.0', '$idx248.1']
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - dispatch pc=252, inst=BINARY_OP(arg=13, lineno=631)
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - stack ['$phi248.0', '$idx248.1', '$const250.2']
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - dispatch pc=256, inst=STORE_FAST(arg=4, lineno=631)
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - stack ['$phi248.0', '$binop_iadd252.3']
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - dispatch pc=258, inst=JUMP_BACKWARD(arg=43, lineno=631)
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - stack ['$phi248.0']
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=174, stack=('$phi248.0',), blockstack=(), npush=0)]
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=248 nstack_initial=1), State(pc_initial=174 nstack_initial=1)])
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=174 nstack_initial=1)])
2025-01-20 15:59:12,531 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,532 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=84 nstack_initial=2): {'$phi84.1'},
             State(pc_initial=98 nstack_initial=2): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=142 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=174 nstack_initial=1): {'$phi174.0'},
             State(pc_initial=178 nstack_initial=2): {'$phi178.1'},
             State(pc_initial=222 nstack_initial=1): set(),
             State(pc_initial=230 nstack_initial=1): set(),
             State(pc_initial=240 nstack_initial=1): set(),
             State(pc_initial=248 nstack_initial=1): set(),
             State(pc_initial=260 nstack_initial=2): set()})
2025-01-20 15:59:12,532 - numba.core.byteflow - DEBUG - defmap: {'$phi174.0': State(pc_initial=146 nstack_initial=0),
 '$phi178.1': State(pc_initial=174 nstack_initial=1),
 '$phi260.1': State(pc_initial=174 nstack_initial=1),
 '$phi80.0': State(pc_initial=56 nstack_initial=0),
 '$phi84.1': State(pc_initial=80 nstack_initial=1),
 '$phi98.1': State(pc_initial=80 nstack_initial=1)}
2025-01-20 15:59:12,532 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi174.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0)),
                           ('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi178.0': {('$phi174.0',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi178.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi222.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=2))},
             '$phi230.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=2))},
             '$phi240.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi248.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1)),
                           ('$phi240.0',
                            State(pc_initial=240 nstack_initial=1))},
             '$phi260.0': {('$phi174.0',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi260.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi80.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi84.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi84.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))},
             '$phi98.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi98.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-01-20 15:59:12,532 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi174.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1)),
                           ('$phi240.0',
                            State(pc_initial=240 nstack_initial=1))},
             '$phi178.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1)),
                           ('$phi240.0',
                            State(pc_initial=240 nstack_initial=1))},
             '$phi178.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi222.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1)),
                           ('$phi240.0',
                            State(pc_initial=240 nstack_initial=1))},
             '$phi230.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1)),
                           ('$phi240.0',
                            State(pc_initial=240 nstack_initial=1))},
             '$phi240.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0)),
                           ('$phi240.0',
                            State(pc_initial=240 nstack_initial=1))},
             '$phi248.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi260.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1)),
                           ('$phi240.0',
                            State(pc_initial=240 nstack_initial=1))},
             '$phi260.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi80.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi84.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi84.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))},
             '$phi98.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-01-20 15:59:12,533 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi174.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi178.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi178.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi222.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi230.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi240.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi248.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi260.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi260.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi80.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi84.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi84.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))},
             '$phi98.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-01-20 15:59:12,533 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi174.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi178.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi178.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi222.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi230.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi240.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi248.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi260.0': {('$172get_iter.3',
                            State(pc_initial=146 nstack_initial=0))},
             '$phi260.1': {('$174for_iter.2',
                            State(pc_initial=174 nstack_initial=1))},
             '$phi80.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi84.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi84.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))},
             '$phi98.0': {('$78get_iter.2',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-01-20 15:59:12,534 - numba.core.byteflow - DEBUG - keep phismap: {'$phi174.0': {('$172get_iter.3', State(pc_initial=146 nstack_initial=0))},
 '$phi178.1': {('$174for_iter.2', State(pc_initial=174 nstack_initial=1))},
 '$phi80.0': {('$78get_iter.2', State(pc_initial=56 nstack_initial=0))},
 '$phi84.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-01-20 15:59:12,534 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi80.0': '$78get_iter.2'},
             State(pc_initial=80 nstack_initial=1): {'$phi84.1': '$80for_iter.2'},
             State(pc_initial=146 nstack_initial=0): {'$phi174.0': '$172get_iter.3'},
             State(pc_initial=174 nstack_initial=1): {'$phi178.1': '$174for_iter.2'}})
2025-01-20 15:59:12,534 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,534 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$arry4.0'}), (6, {'item': '$arry4.0', 'res': '$6load_attr.1'}), (26, {'res': '$const26.2'}), (28, {'lhs': '$6load_attr.1', 'rhs': '$const26.2', 'res': '$28compare_op.3'}), (32, {'pred': '$28compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 56: ()})
2025-01-20 15:59:12,534 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'idx': 1, 'res': '$34load_global.0'}), (44, {'res': '$const44.2'}), (46, {'func': '$34load_global.0', 'args': ['$const44.2'], 'kw_names': None, 'res': '$46call.3'}), (54, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,534 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$arry56.0'}), (58, {'item': '$arry56.0', 'res': '$58load_attr.1'}), (78, {'value': '$58load_attr.1', 'res': '$78get_iter.2'})), outgoing_phis={'$phi80.0': '$78get_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.2',)})
2025-01-20 15:59:12,534 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi84.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi80.0', '$80for_iter.2'), 84: ('$phi80.0', '$80for_iter.2')})
2025-01-20 15:59:12,534 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=84 nstack_initial=2):
AdaptBlockInfo(insts=((84, {'value': '$phi84.1'}), (86, {'res': '$v86.2'}), (88, {'value': '$v86.2'}), (90, {'res': '$const90.3'}), (92, {'value': '$const90.3'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-01-20 15:59:12,534 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'idx': 3, 'res': '$100load_global.0'}), (110, {'item': '$100load_global.0', 'res': '$110load_attr.2'}), (130, {'res': '$min_value130.3'}), (132, {'func': '$110load_attr.2', 'args': ['$min_value130.3'], 'kw_names': None, 'res': '$132call.4'}), (140, {'pred': '$132call.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={142: (), 146: ()})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=142 nstack_initial=0):
AdaptBlockInfo(insts=((142, {'res': '$min_idx142.0'}), (144, {'retval': '$min_idx142.0', 'castval': '$144return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$const146.0'}), (148, {'value': '$const146.0'}), (150, {'res': '$arry150.1'}), (152, {'item': '$arry150.1', 'res': '$152load_attr.2'}), (172, {'value': '$152load_attr.2', 'res': '$172get_iter.3'})), outgoing_phis={'$phi174.0': '$172get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: ('$172get_iter.3',)})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=174 nstack_initial=1):
AdaptBlockInfo(insts=((174, {'iterator': '$phi174.0', 'pair': '$174for_iter.1', 'indval': '$174for_iter.2', 'pred': '$174for_iter.3'}),), outgoing_phis={'$phi178.1': '$174for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={260: ('$phi174.0', '$174for_iter.2'), 178: ('$phi174.0', '$174for_iter.2')})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=178 nstack_initial=2):
AdaptBlockInfo(insts=((178, {'value': '$phi178.1'}), (180, {'idx': 3, 'res': '$180load_global.2'}), (190, {'item': '$180load_global.2', 'res': '$190load_attr.4'}), (210, {'res': '$v210.5'}), (212, {'func': '$190load_attr.4', 'args': ['$v210.5'], 'kw_names': None, 'res': '$212call.6'}), (220, {'pred': '$212call.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={222: ('$phi178.0',), 230: ('$phi178.0',)})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=222 nstack_initial=1):
AdaptBlockInfo(insts=((222, {'res': '$idx222.1'}), (228, {'retval': '$idx222.1', 'castval': '$228return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'res': '$v230.1'}), (232, {'res': '$min_value232.2'}), (234, {'lhs': '$v230.1', 'rhs': '$min_value232.2', 'res': '$234compare_op.3'}), (238, {'pred': '$234compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: ('$phi230.0',), 248: ('$phi230.0',)})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=240 nstack_initial=1):
AdaptBlockInfo(insts=((240, {'res': '$v240.1'}), (242, {'value': '$v240.1'}), (244, {'res': '$idx244.2'}), (246, {'value': '$idx244.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={248: ('$phi240.0',)})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=248 nstack_initial=1):
AdaptBlockInfo(insts=((248, {'res': '$idx248.1'}), (250, {'res': '$const250.2'}), (252, {'op': '+=', 'lhs': '$idx248.1', 'rhs': '$const250.2', 'res': '$binop_iadd252.3'}), (256, {'value': '$binop_iadd252.3'}), (258, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: ('$phi248.0',)})
2025-01-20 15:59:12,535 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=260 nstack_initial=2):
AdaptBlockInfo(insts=((262, {'res': '$min_idx262.2'}), (264, {'retval': '$min_idx262.2', 'castval': '$264return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,536 - numba.core.interpreter - DEBUG - label 0:
    arry = arg(0, name=arry)                 ['arry']
    $6load_attr.1 = getattr(value=arry, attr=size) ['$6load_attr.1', 'arry']
    $const26.2 = const(int, 0)               ['$const26.2']
    $28compare_op.3 = $6load_attr.1 == $const26.2 ['$28compare_op.3', '$6load_attr.1', '$const26.2']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.3', '$32pred', 'bool32']
    branch $32pred, 34, 56                   ['$32pred']
label 34:
    $34load_global.0 = global(ValueError: <class 'ValueError'>) ['$34load_global.0']
    $const44.2 = const(str, attempt to get argmin of an empty sequence) ['$const44.2']
    $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.0', '$46call.3', '$const44.2']
    raise $46call.3                          ['$46call.3']
label 56:
    $58load_attr.1 = getattr(value=arry, attr=flat) ['$58load_attr.1', 'arry']
    $78get_iter.2 = getiter(value=$58load_attr.1) ['$58load_attr.1', '$78get_iter.2']
    $phi80.0 = $78get_iter.2                 ['$78get_iter.2', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi84.1 = $80for_iter.2                 ['$80for_iter.2', '$phi84.1']
    branch $80for_iter.3, 84, 98             ['$80for_iter.3']
label 84:
    v = $phi84.1                             ['$phi84.1', 'v']
    min_value = v                            ['min_value', 'v']
    min_idx = const(int, 0)                  ['min_idx']
    jump 100                                 []
label 98:
    jump 100                                 []
label 100:
    $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>) ['$100load_global.0']
    $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan) ['$100load_global.0', '$110load_attr.2']
    $132call.4 = call $110load_attr.2(min_value, func=$110load_attr.2, args=[Var(min_value, arraymath.py:618)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_attr.2', '$132call.4', 'min_value']
    bool140 = global(bool: <class 'bool'>)   ['bool140']
    $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None) ['$132call.4', '$140pred', 'bool140']
    branch $140pred, 142, 146                ['$140pred']
label 142:
    $144return_value.1 = cast(value=min_idx) ['$144return_value.1', 'min_idx']
    return $144return_value.1                ['$144return_value.1']
label 146:
    idx = const(int, 0)                      ['idx']
    $152load_attr.2 = getattr(value=arry, attr=flat) ['$152load_attr.2', 'arry']
    $172get_iter.3 = getiter(value=$152load_attr.2) ['$152load_attr.2', '$172get_iter.3']
    $phi174.0 = $172get_iter.3               ['$172get_iter.3', '$phi174.0']
    jump 174                                 []
label 174:
    $174for_iter.1 = iternext(value=$phi174.0) ['$174for_iter.1', '$phi174.0']
    $174for_iter.2 = pair_first(value=$174for_iter.1) ['$174for_iter.1', '$174for_iter.2']
    $174for_iter.3 = pair_second(value=$174for_iter.1) ['$174for_iter.1', '$174for_iter.3']
    $phi178.1 = $174for_iter.2               ['$174for_iter.2', '$phi178.1']
    branch $174for_iter.3, 178, 260          ['$174for_iter.3']
label 178:
    v = $phi178.1                            ['$phi178.1', 'v']
    $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>) ['$180load_global.2']
    $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan) ['$180load_global.2', '$190load_attr.4']
    $212call.6 = call $190load_attr.4(v, func=$190load_attr.4, args=[Var(v, arraymath.py:617)], kws=(), vararg=None, varkwarg=None, target=None) ['$190load_attr.4', '$212call.6', 'v']
    bool220 = global(bool: <class 'bool'>)   ['bool220']
    $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None) ['$212call.6', '$220pred', 'bool220']
    branch $220pred, 222, 230                ['$220pred']
label 222:
    $228return_value.2 = cast(value=idx)     ['$228return_value.2', 'idx']
    return $228return_value.2                ['$228return_value.2']
label 230:
    $234compare_op.3 = v < min_value         ['$234compare_op.3', 'min_value', 'v']
    bool238 = global(bool: <class 'bool'>)   ['bool238']
    $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None) ['$234compare_op.3', '$238pred', 'bool238']
    branch $238pred, 240, 248                ['$238pred']
label 240:
    min_value = v                            ['min_value', 'v']
    min_idx = idx                            ['idx', 'min_idx']
    jump 248                                 []
label 248:
    $const250.2 = const(int, 1)              ['$const250.2']
    $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd252.3', '$const250.2', 'idx']
    idx = $binop_iadd252.3                   ['$binop_iadd252.3', 'idx']
    jump 174                                 []
label 260:
    $264return_value.3 = cast(value=min_idx) ['$264return_value.3', 'min_idx']
    return $264return_value.3                ['$264return_value.3']

2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: arry = arg(0, name=arry)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $6load_attr.1 = getattr(value=arry, attr=size)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $const26.2 = const(int, 0)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $28compare_op.3 = $6load_attr.1 == $const26.2
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 56
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 34
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $34load_global.0 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $const44.2 = const(str, attempt to get argmin of an empty sequence)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('attempt to get argmin of an empty sequence')
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 56
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $58load_attr.1 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $78get_iter.2 = getiter(value=$58load_attr.1)
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.2
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-01-20 15:59:12,543 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: $phi84.1 = $80for_iter.2
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 84, 98
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 84
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: v = $phi84.1
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: min_idx = const(int, 0)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 100
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: $132call.4 = call $110load_attr.2(min_value, func=$110load_attr.2, args=[Var(min_value, arraymath.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: branch $140pred, 142, 146
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 142
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: $144return_value.1 = cast(value=min_idx)
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: return $144return_value.1
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 146
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,544 - numba.core.ssa - DEBUG - on stmt: idx = const(int, 0)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $152load_attr.2 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $172get_iter.3 = getiter(value=$152load_attr.2)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.3
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 174
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 260
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 178
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: v = $phi178.1
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $212call.6 = call $190load_attr.4(v, func=$190load_attr.4, args=[Var(v, arraymath.py:617)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: bool220 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: branch $220pred, 222, 230
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 222
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: return $228return_value.2
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 230
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $234compare_op.3 = v < min_value
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: bool238 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,545 - numba.core.ssa - DEBUG - on stmt: $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: branch $238pred, 240, 248
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 240
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: min_idx = idx
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: jump 248
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 248
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: $const250.2 = const(int, 1)
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: idx = $binop_iadd252.3
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 260
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73560>
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: $264return_value.3 = cast(value=min_idx)
2025-01-20 15:59:12,546 - numba.core.ssa - DEBUG - on stmt: return $264return_value.3
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_global.0': [(<numba.core.ir.Assign object at 0x76351df71af0>,
                                    100)],
             '$110load_attr.2': [(<numba.core.ir.Assign object at 0x76351df701d0>,
                                  100)],
             '$132call.4': [(<numba.core.ir.Assign object at 0x76351df73200>,
                             100)],
             '$140pred': [(<numba.core.ir.Assign object at 0x763528f0d040>,
                           100)],
             '$144return_value.1': [(<numba.core.ir.Assign object at 0x763528b568d0>,
                                     142)],
             '$152load_attr.2': [(<numba.core.ir.Assign object at 0x763528b573b0>,
                                  146)],
             '$172get_iter.3': [(<numba.core.ir.Assign object at 0x763528b57710>,
                                 146)],
             '$174for_iter.1': [(<numba.core.ir.Assign object at 0x763528b567e0>,
                                 174)],
             '$174for_iter.2': [(<numba.core.ir.Assign object at 0x763528b551f0>,
                                 174)],
             '$174for_iter.3': [(<numba.core.ir.Assign object at 0x763528b561b0>,
                                 174)],
             '$180load_global.2': [(<numba.core.ir.Assign object at 0x76351df73290>,
                                    178)],
             '$190load_attr.4': [(<numba.core.ir.Assign object at 0x76351df733e0>,
                                  178)],
             '$212call.6': [(<numba.core.ir.Assign object at 0x76351df73500>,
                             178)],
             '$220pred': [(<numba.core.ir.Assign object at 0x76351df727e0>,
                           178)],
             '$228return_value.2': [(<numba.core.ir.Assign object at 0x763528b57b60>,
                                     222)],
             '$234compare_op.3': [(<numba.core.ir.Assign object at 0x763528b56a20>,
                                   230)],
             '$238pred': [(<numba.core.ir.Assign object at 0x763528f1a7e0>,
                           230)],
             '$264return_value.3': [(<numba.core.ir.Assign object at 0x763528b01a00>,
                                     260)],
             '$28compare_op.3': [(<numba.core.ir.Assign object at 0x76351df71e50>,
                                  0)],
             '$32pred': [(<numba.core.ir.Assign object at 0x76351df72090>, 0)],
             '$34load_global.0': [(<numba.core.ir.Assign object at 0x76351df71b80>,
                                   34)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x76351df716d0>,
                            34)],
             '$58load_attr.1': [(<numba.core.ir.Assign object at 0x76351df71370>,
                                 56)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x76351df72d20>,
                                0)],
             '$78get_iter.2': [(<numba.core.ir.Assign object at 0x76351df70740>,
                                56)],
             '$80for_iter.1': [(<numba.core.ir.Assign object at 0x76351df706b0>,
                                80)],
             '$80for_iter.2': [(<numba.core.ir.Assign object at 0x76351df70d70>,
                                80)],
             '$80for_iter.3': [(<numba.core.ir.Assign object at 0x76351df70aa0>,
                                80)],
             '$binop_iadd252.3': [(<numba.core.ir.Assign object at 0x763528b018e0>,
                                   248)],
             '$const250.2': [(<numba.core.ir.Assign object at 0x763528b01ac0>,
                              248)],
             '$const26.2': [(<numba.core.ir.Assign object at 0x76351df72b70>,
                             0)],
             '$const44.2': [(<numba.core.ir.Assign object at 0x76351df717f0>,
                             34)],
             '$phi174.0': [(<numba.core.ir.Assign object at 0x763528b55f10>,
                            146)],
             '$phi178.1': [(<numba.core.ir.Assign object at 0x763528b55d30>,
                            174)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x76351df722d0>,
                           56)],
             '$phi84.1': [(<numba.core.ir.Assign object at 0x76351df70b90>,
                           80)],
             'arry': [(<numba.core.ir.Assign object at 0x76351df72d50>, 0)],
             'bool140': [(<numba.core.ir.Assign object at 0x763528f0f830>,
                          100)],
             'bool220': [(<numba.core.ir.Assign object at 0x76351df73a40>,
                          178)],
             'bool238': [(<numba.core.ir.Assign object at 0x763528f19cd0>,
                          230)],
             'bool32': [(<numba.core.ir.Assign object at 0x76351df720f0>, 0)],
             'idx': [(<numba.core.ir.Assign object at 0x763528b56660>, 146),
                     (<numba.core.ir.Assign object at 0x763528b00e00>, 248)],
             'min_idx': [(<numba.core.ir.Assign object at 0x76351df705c0>, 84),
                         (<numba.core.ir.Assign object at 0x76352999e480>,
                          240)],
             'min_value': [(<numba.core.ir.Assign object at 0x76351df70d10>,
                            84),
                           (<numba.core.ir.Assign object at 0x763528f189e0>,
                            240)],
             'v': [(<numba.core.ir.Assign object at 0x76351df70800>, 84),
                   (<numba.core.ir.Assign object at 0x763528b57c50>, 178)]})
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x76351df73560>
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - Fix SSA violator on var v
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: arry = arg(0, name=arry)
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: $6load_attr.1 = getattr(value=arry, attr=size)
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: $const26.2 = const(int, 0)
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: $28compare_op.3 = $6load_attr.1 == $const26.2
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 56
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: $34load_global.0 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: $const44.2 = const(str, attempt to get argmin of an empty sequence)
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('attempt to get argmin of an empty sequence')
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,547 - numba.core.ssa - DEBUG - on stmt: $58load_attr.1 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $78get_iter.2 = getiter(value=$58load_attr.1)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.2
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $phi84.1 = $80for_iter.2
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 84, 98
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 84
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: v = $phi84.1
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - first assign: v
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - replaced with: v = $phi84.1
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: min_idx = const(int, 0)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 100
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $132call.4 = call $110load_attr.2(min_value, func=$110load_attr.2, args=[Var(min_value, arraymath.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - on stmt: branch $140pred, 142, 146
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 142
2025-01-20 15:59:12,548 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $144return_value.1 = cast(value=min_idx)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: return $144return_value.1
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: idx = const(int, 0)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $152load_attr.2 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $172get_iter.3 = getiter(value=$152load_attr.2)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.3
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 260
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: v = $phi178.1
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - replaced with: v.1 = $phi178.1
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $212call.6 = call $190load_attr.4(v, func=$190load_attr.4, args=[Var(v, arraymath.py:617)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: bool220 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: branch $220pred, 222, 230
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 222
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,549 - numba.core.ssa - DEBUG - on stmt: $228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: return $228return_value.2
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 230
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: $234compare_op.3 = v < min_value
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: bool238 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: branch $238pred, 240, 248
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 240
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: min_idx = idx
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: jump 248
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 248
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: $const250.2 = const(int, 1)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: idx = $binop_iadd252.3
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 260
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528fcf350>
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: $264return_value.3 = cast(value=min_idx)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: return $264return_value.3
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {84: [<numba.core.ir.Assign object at 0x763528fcf1d0>],
             178: [<numba.core.ir.Assign object at 0x763528fce9c0>]})
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: arry = arg(0, name=arry)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: $6load_attr.1 = getattr(value=arry, attr=size)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: $const26.2 = const(int, 0)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: $28compare_op.3 = $6load_attr.1 == $const26.2
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,550 - numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 56
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $34load_global.0 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $const44.2 = const(str, attempt to get argmin of an empty sequence)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('attempt to get argmin of an empty sequence')
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $58load_attr.1 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $78get_iter.2 = getiter(value=$58load_attr.1)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.2
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: $phi84.1 = $80for_iter.2
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 84, 98
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 84
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: v = $phi84.1
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - find_def var='v' stmt=min_value = v
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: min_idx = const(int, 0)
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 100
2025-01-20 15:59:12,551 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $132call.4 = call $110load_attr.2(min_value, func=$110load_attr.2, args=[Var(min_value, arraymath.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: branch $140pred, 142, 146
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 142
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $144return_value.1 = cast(value=min_idx)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: return $144return_value.1
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: idx = const(int, 0)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $152load_attr.2 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $172get_iter.3 = getiter(value=$152load_attr.2)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.3
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 260
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: v.1 = $phi178.1
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan)
2025-01-20 15:59:12,552 - numba.core.ssa - DEBUG - on stmt: $212call.6 = call $190load_attr.4(v, func=$190load_attr.4, args=[Var(v, arraymath.py:617)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - find_def var='v' stmt=$212call.6 = call $190load_attr.4(v, func=$190load_attr.4, args=[Var(v, arraymath.py:617)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - replaced with: $212call.6 = call $190load_attr.4(v.1, func=$190load_attr.4, args=[Var(v.1, arraymath.py:625)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: bool220 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: branch $220pred, 222, 230
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 222
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: $228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: return $228return_value.2
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 230
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: $234compare_op.3 = v < min_value
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - find_def var='v' stmt=$234compare_op.3 = v < min_value
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - find_def_from_top label 230
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - idom 178 from label 230
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - replaced with: $234compare_op.3 = v.1 < min_value
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: bool238 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: branch $238pred, 240, 248
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 240
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - find_def var='v' stmt=min_value = v
2025-01-20 15:59:12,553 - numba.core.ssa - DEBUG - find_def_from_top label 240
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - idom 230 from label 240
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - find_def_from_bottom label 230
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - find_def_from_top label 230
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - idom 178 from label 230
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - replaced with: min_value = v.1
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: min_idx = idx
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: jump 248
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 248
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: $const250.2 = const(int, 1)
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: idx = $binop_iadd252.3
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 260
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528fcf350>
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: $264return_value.3 = cast(value=min_idx)
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: return $264return_value.3
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - Fix SSA violator on var min_value
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: arry = arg(0, name=arry)
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: $6load_attr.1 = getattr(value=arry, attr=size)
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: $const26.2 = const(int, 0)
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: $28compare_op.3 = $6load_attr.1 == $const26.2
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,554 - numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 56
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $34load_global.0 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $const44.2 = const(str, attempt to get argmin of an empty sequence)
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('attempt to get argmin of an empty sequence')
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $58load_attr.1 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $78get_iter.2 = getiter(value=$58load_attr.1)
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.2
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: $phi84.1 = $80for_iter.2
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 84, 98
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 84
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: v = $phi84.1
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - first assign: min_value
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - replaced with: min_value = v
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: min_idx = const(int, 0)
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,555 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 100
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $132call.4 = call $110load_attr.2(min_value, func=$110load_attr.2, args=[Var(min_value, arraymath.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: branch $140pred, 142, 146
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 142
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $144return_value.1 = cast(value=min_idx)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: return $144return_value.1
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: idx = const(int, 0)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $152load_attr.2 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $172get_iter.3 = getiter(value=$152load_attr.2)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.3
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 260
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: v.1 = $phi178.1
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan)
2025-01-20 15:59:12,556 - numba.core.ssa - DEBUG - on stmt: $212call.6 = call $190load_attr.4(v.1, func=$190load_attr.4, args=[Var(v.1, arraymath.py:625)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: bool220 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: branch $220pred, 222, 230
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 222
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: $228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: return $228return_value.2
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 230
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: $234compare_op.3 = v.1 < min_value
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: bool238 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: branch $238pred, 240, 248
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 240
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: min_value = v.1
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - replaced with: min_value.1 = v.1
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: min_idx = idx
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: jump 248
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 248
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: $const250.2 = const(int, 1)
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: idx = $binop_iadd252.3
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 260
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b01d60>
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: $264return_value.3 = cast(value=min_idx)
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - on stmt: return $264return_value.3
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {84: [<numba.core.ir.Assign object at 0x763528fcec90>],
             240: [<numba.core.ir.Assign object at 0x7635299ff530>]})
2025-01-20 15:59:12,557 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: arry = arg(0, name=arry)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $6load_attr.1 = getattr(value=arry, attr=size)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $const26.2 = const(int, 0)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $28compare_op.3 = $6load_attr.1 == $const26.2
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 56
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $34load_global.0 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $const44.2 = const(str, attempt to get argmin of an empty sequence)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('attempt to get argmin of an empty sequence')
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $58load_attr.1 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $78get_iter.2 = getiter(value=$58load_attr.1)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.2
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: $phi84.1 = $80for_iter.2
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 84, 98
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 84
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: v = $phi84.1
2025-01-20 15:59:12,558 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - on stmt: min_idx = const(int, 0)
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 100
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - on stmt: $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - on stmt: $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan)
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - on stmt: $132call.4 = call $110load_attr.2(min_value, func=$110load_attr.2, args=[Var(min_value, arraymath.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def var='min_value' stmt=$132call.4 = call $110load_attr.2(min_value, func=$110load_attr.2, args=[Var(min_value, arraymath.py:618)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_top label 100
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - insert phi node min_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 100
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_bottom label 98
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_top label 98
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - idom 80 from label 98
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_bottom label 80
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_top label 80
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - idom 56 from label 80
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_bottom label 56
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_top label 56
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - idom 0 from label 56
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_top label 0
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - incoming_def <class 'numba.core.ssa.UndefinedVariable'>
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - find_def_from_bottom label 84
2025-01-20 15:59:12,559 - numba.core.ssa - DEBUG - incoming_def min_value = v
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - replaced with: $132call.4 = call $110load_attr.2(min_value.2, func=$110load_attr.2, args=[Var(min_value.2, arraymath.py:621)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: branch $140pred, 142, 146
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 142
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $144return_value.1 = cast(value=min_idx)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: return $144return_value.1
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: idx = const(int, 0)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $152load_attr.2 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $172get_iter.3 = getiter(value=$152load_attr.2)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.3
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 260
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: v.1 = $phi178.1
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $212call.6 = call $190load_attr.4(v.1, func=$190load_attr.4, args=[Var(v.1, arraymath.py:625)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: bool220 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,560 - numba.core.ssa - DEBUG - on stmt: branch $220pred, 222, 230
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 222
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - on stmt: $228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - on stmt: return $228return_value.2
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 230
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - on stmt: $234compare_op.3 = v.1 < min_value
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def var='min_value' stmt=$234compare_op.3 = v.1 < min_value
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_top label 230
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - idom 178 from label 230
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - idom 174 from label 178
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_bottom label 174
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_top label 174
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - insert phi node min_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 174
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_bottom label 248
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_top label 248
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - insert phi node min_value.4 = phi(incoming_values=[], incoming_blocks=[]) at 248
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_bottom label 240
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - incoming_def min_value.1 = v.1
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_bottom label 230
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_top label 230
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - idom 178 from label 230
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - idom 174 from label 178
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_bottom label 174
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - incoming_def min_value.3 = phi(incoming_values=[], incoming_blocks=[])
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - incoming_def min_value.4 = phi(incoming_values=[Var(min_value.1, arraymath.py:629), Var(min_value.3, arraymath.py:628)], incoming_blocks=[240, 230])
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_bottom label 146
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_top label 146
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - idom 100 from label 146
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - find_def_from_bottom label 100
2025-01-20 15:59:12,561 - numba.core.ssa - DEBUG - incoming_def min_value.2 = phi(incoming_values=[Undefined, Var(min_value, arraymath.py:618)], incoming_blocks=[98, 84])
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - replaced with: $234compare_op.3 = v.1 < min_value.3
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: bool238 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: branch $238pred, 240, 248
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 240
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: min_value.1 = v.1
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: min_idx = idx
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: jump 248
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 248
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: $const250.2 = const(int, 1)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: idx = $binop_iadd252.3
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 260
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b02180>
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: $264return_value.3 = cast(value=min_idx)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: return $264return_value.3
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - Fix SSA violator on var min_idx
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: arry = arg(0, name=arry)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: $6load_attr.1 = getattr(value=arry, attr=size)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: $const26.2 = const(int, 0)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: $28compare_op.3 = $6load_attr.1 == $const26.2
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 56
2025-01-20 15:59:12,562 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $34load_global.0 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $const44.2 = const(str, attempt to get argmin of an empty sequence)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('attempt to get argmin of an empty sequence')
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $58load_attr.1 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $78get_iter.2 = getiter(value=$58load_attr.1)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.2
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $phi84.1 = $80for_iter.2
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 84, 98
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 84
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: v = $phi84.1
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: min_idx = const(int, 0)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - first assign: min_idx
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - replaced with: min_idx = const(int, 0)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 100
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: min_value.2 = phi(incoming_values=[Undefined, Var(min_value, arraymath.py:618)], incoming_blocks=[98, 84])
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,563 - numba.core.ssa - DEBUG - on stmt: $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $132call.4 = call $110load_attr.2(min_value.2, func=$110load_attr.2, args=[Var(min_value.2, arraymath.py:621)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: branch $140pred, 142, 146
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 142
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $144return_value.1 = cast(value=min_idx)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: return $144return_value.1
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: idx = const(int, 0)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $152load_attr.2 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $172get_iter.3 = getiter(value=$152load_attr.2)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.3
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: min_value.3 = phi(incoming_values=[Var(min_value.4, arraymath.py:628), Var(min_value.2, arraymath.py:621)], incoming_blocks=[248, 146])
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 260
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: v.1 = $phi178.1
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan)
2025-01-20 15:59:12,564 - numba.core.ssa - DEBUG - on stmt: $212call.6 = call $190load_attr.4(v.1, func=$190load_attr.4, args=[Var(v.1, arraymath.py:625)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: bool220 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: branch $220pred, 222, 230
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 222
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: $228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: return $228return_value.2
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 230
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: $234compare_op.3 = v.1 < min_value.3
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: bool238 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: branch $238pred, 240, 248
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 240
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: min_value.1 = v.1
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: min_idx = idx
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - replaced with: min_idx.1 = idx
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: jump 248
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 248
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: min_value.4 = phi(incoming_values=[Var(min_value.1, arraymath.py:629), Var(min_value.3, arraymath.py:628)], incoming_blocks=[240, 230])
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: $const250.2 = const(int, 1)
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: idx = $binop_iadd252.3
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 260
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7635299fd130>
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: $264return_value.3 = cast(value=min_idx)
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - on stmt: return $264return_value.3
2025-01-20 15:59:12,565 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {84: [<numba.core.ir.Assign object at 0x763528fcef60>],
             240: [<numba.core.ir.Assign object at 0x76351df05c40>]})
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: arry = arg(0, name=arry)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $6load_attr.1 = getattr(value=arry, attr=size)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $const26.2 = const(int, 0)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $28compare_op.3 = $6load_attr.1 == $const26.2
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 56
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $34load_global.0 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $const44.2 = const(str, attempt to get argmin of an empty sequence)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('attempt to get argmin of an empty sequence')
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $58load_attr.1 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $78get_iter.2 = getiter(value=$58load_attr.1)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.2
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: $phi84.1 = $80for_iter.2
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 84, 98
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 84
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,566 - numba.core.ssa - DEBUG - on stmt: v = $phi84.1
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: min_idx = const(int, 0)
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 100
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: min_value.2 = phi(incoming_values=[Undefined, Var(min_value, arraymath.py:618)], incoming_blocks=[98, 84])
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan)
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: $132call.4 = call $110load_attr.2(min_value.2, func=$110load_attr.2, args=[Var(min_value.2, arraymath.py:621)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: branch $140pred, 142, 146
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 142
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - on stmt: $144return_value.1 = cast(value=min_idx)
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def var='min_idx' stmt=$144return_value.1 = cast(value=min_idx)
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def_from_top label 142
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - idom 100 from label 142
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def_from_bottom label 100
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def_from_top label 100
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - insert phi node min_idx.2 = phi(incoming_values=[], incoming_blocks=[]) at 100
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def_from_bottom label 98
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def_from_top label 98
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - idom 80 from label 98
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def_from_bottom label 80
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def_from_top label 80
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - idom 56 from label 80
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def_from_bottom label 56
2025-01-20 15:59:12,567 - numba.core.ssa - DEBUG - find_def_from_top label 56
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - idom 0 from label 56
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - find_def_from_top label 0
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - incoming_def <class 'numba.core.ssa.UndefinedVariable'>
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - find_def_from_bottom label 84
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - incoming_def min_idx = const(int, 0)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - replaced with: $144return_value.1 = cast(value=min_idx.2)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: return $144return_value.1
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: idx = const(int, 0)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $152load_attr.2 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $172get_iter.3 = getiter(value=$152load_attr.2)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.3
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: min_value.3 = phi(incoming_values=[Var(min_value.4, arraymath.py:628), Var(min_value.2, arraymath.py:621)], incoming_blocks=[248, 146])
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 260
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: v.1 = $phi178.1
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $212call.6 = call $190load_attr.4(v.1, func=$190load_attr.4, args=[Var(v.1, arraymath.py:625)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: bool220 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,568 - numba.core.ssa - DEBUG - on stmt: $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: branch $220pred, 222, 230
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 222
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: $228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: return $228return_value.2
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 230
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: $234compare_op.3 = v.1 < min_value.3
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: bool238 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: branch $238pred, 240, 248
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 240
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: min_value.1 = v.1
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: min_idx.1 = idx
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: jump 248
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 248
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: min_value.4 = phi(incoming_values=[Var(min_value.1, arraymath.py:629), Var(min_value.3, arraymath.py:628)], incoming_blocks=[240, 230])
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: $const250.2 = const(int, 1)
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: idx = $binop_iadd252.3
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 260
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763528b01d60>
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - on stmt: $264return_value.3 = cast(value=min_idx)
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - find_def var='min_idx' stmt=$264return_value.3 = cast(value=min_idx)
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - find_def_from_top label 260
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - idom 174 from label 260
2025-01-20 15:59:12,569 - numba.core.ssa - DEBUG - find_def_from_bottom label 174
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_top label 174
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - insert phi node min_idx.3 = phi(incoming_values=[], incoming_blocks=[]) at 174
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_bottom label 248
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_top label 248
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - insert phi node min_idx.4 = phi(incoming_values=[], incoming_blocks=[]) at 248
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_bottom label 240
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - incoming_def min_idx.1 = idx
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_bottom label 230
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_top label 230
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - idom 178 from label 230
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - idom 174 from label 178
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_bottom label 174
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - incoming_def min_idx.3 = phi(incoming_values=[], incoming_blocks=[])
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - incoming_def min_idx.4 = phi(incoming_values=[Var(min_idx.1, arraymath.py:630), Var(min_idx.3, arraymath.py:632)], incoming_blocks=[240, 230])
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_bottom label 146
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_top label 146
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - idom 100 from label 146
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - find_def_from_bottom label 100
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - incoming_def min_idx.2 = phi(incoming_values=[Undefined, Var(min_idx, arraymath.py:619)], incoming_blocks=[98, 84])
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - replaced with: $264return_value.3 = cast(value=min_idx.3)
2025-01-20 15:59:12,570 - numba.core.ssa - DEBUG - on stmt: return $264return_value.3
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - Fix SSA violator on var idx
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: arry = arg(0, name=arry)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $6load_attr.1 = getattr(value=arry, attr=size)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $const26.2 = const(int, 0)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $28compare_op.3 = $6load_attr.1 == $const26.2
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 56
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $34load_global.0 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $const44.2 = const(str, attempt to get argmin of an empty sequence)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('attempt to get argmin of an empty sequence')
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $58load_attr.1 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $78get_iter.2 = getiter(value=$58load_attr.1)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.2
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: $phi84.1 = $80for_iter.2
2025-01-20 15:59:12,571 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 84, 98
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 84
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: v = $phi84.1
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: min_idx = const(int, 0)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 100
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: min_idx.2 = phi(incoming_values=[Undefined, Var(min_idx, arraymath.py:619)], incoming_blocks=[98, 84])
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: min_value.2 = phi(incoming_values=[Undefined, Var(min_value, arraymath.py:618)], incoming_blocks=[98, 84])
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: $132call.4 = call $110load_attr.2(min_value.2, func=$110load_attr.2, args=[Var(min_value.2, arraymath.py:621)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: branch $140pred, 142, 146
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 142
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: $144return_value.1 = cast(value=min_idx.2)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: return $144return_value.1
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: idx = const(int, 0)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - first assign: idx
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - replaced with: idx = const(int, 0)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: $152load_attr.2 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: $172get_iter.3 = getiter(value=$152load_attr.2)
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.3
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,572 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: min_idx.3 = phi(incoming_values=[Var(min_idx.4, arraymath.py:632), Var(min_idx.2, arraymath.py:622)], incoming_blocks=[248, 146])
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: min_value.3 = phi(incoming_values=[Var(min_value.4, arraymath.py:628), Var(min_value.2, arraymath.py:621)], incoming_blocks=[248, 146])
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 260
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: v.1 = $phi178.1
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $212call.6 = call $190load_attr.4(v.1, func=$190load_attr.4, args=[Var(v.1, arraymath.py:625)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: bool220 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: branch $220pred, 222, 230
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 222
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: return $228return_value.2
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 230
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $234compare_op.3 = v.1 < min_value.3
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: bool238 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - on stmt: branch $238pred, 240, 248
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 240
2025-01-20 15:59:12,573 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: min_value.1 = v.1
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: min_idx.1 = idx
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: jump 248
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 248
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: min_idx.4 = phi(incoming_values=[Var(min_idx.1, arraymath.py:630), Var(min_idx.3, arraymath.py:632)], incoming_blocks=[240, 230])
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: min_value.4 = phi(incoming_values=[Var(min_value.1, arraymath.py:629), Var(min_value.3, arraymath.py:628)], incoming_blocks=[240, 230])
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: $const250.2 = const(int, 1)
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: idx = $binop_iadd252.3
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - replaced with: idx.1 = $binop_iadd252.3
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 260
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763528b030b0>
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: $264return_value.3 = cast(value=min_idx.3)
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: return $264return_value.3
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {146: [<numba.core.ir.Assign object at 0x763528fcfad0>],
             248: [<numba.core.ir.Assign object at 0x76351df724e0>]})
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: arry = arg(0, name=arry)
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: $6load_attr.1 = getattr(value=arry, attr=size)
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: $const26.2 = const(int, 0)
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: $28compare_op.3 = $6load_attr.1 == $const26.2
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($28compare_op.3, func=bool32, args=(Var($28compare_op.3, arraymath.py:615),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 56
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
2025-01-20 15:59:12,574 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $34load_global.0 = global(ValueError: <class 'ValueError'>)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $const44.2 = const(str, attempt to get argmin of an empty sequence)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $46call.3 = call $34load_global.0($const44.2, func=$34load_global.0, args=[Var($const44.2, arraymath.py:616)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('attempt to get argmin of an empty sequence')
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $58load_attr.1 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $78get_iter.2 = getiter(value=$58load_attr.1)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.2
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $phi84.1 = $80for_iter.2
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 84, 98
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 84
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: v = $phi84.1
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: min_value = v
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: min_idx = const(int, 0)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: jump 100
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 100
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: min_idx.2 = phi(incoming_values=[Undefined, Var(min_idx, arraymath.py:619)], incoming_blocks=[98, 84])
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: min_value.2 = phi(incoming_values=[Undefined, Var(min_value, arraymath.py:618)], incoming_blocks=[98, 84])
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $100load_global.0 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $110load_attr.2 = getattr(value=$100load_global.0, attr=isnan)
2025-01-20 15:59:12,575 - numba.core.ssa - DEBUG - on stmt: $132call.4 = call $110load_attr.2(min_value.2, func=$110load_attr.2, args=[Var(min_value.2, arraymath.py:621)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: bool140 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $140pred = call bool140($132call.4, func=bool140, args=(Var($132call.4, arraymath.py:621),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: branch $140pred, 142, 146
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 142
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $144return_value.1 = cast(value=min_idx.2)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: return $144return_value.1
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: idx = const(int, 0)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $152load_attr.2 = getattr(value=arry, attr=flat)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $172get_iter.3 = getiter(value=$152load_attr.2)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $phi174.0 = $172get_iter.3
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 174
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: min_idx.3 = phi(incoming_values=[Var(min_idx.4, arraymath.py:632), Var(min_idx.2, arraymath.py:622)], incoming_blocks=[248, 146])
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: min_value.3 = phi(incoming_values=[Var(min_value.4, arraymath.py:628), Var(min_value.2, arraymath.py:621)], incoming_blocks=[248, 146])
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $174for_iter.1 = iternext(value=$phi174.0)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $174for_iter.2 = pair_first(value=$174for_iter.1)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $174for_iter.3 = pair_second(value=$174for_iter.1)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $phi178.1 = $174for_iter.2
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: branch $174for_iter.3, 178, 260
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: v.1 = $phi178.1
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $180load_global.2 = global(np: <module 'numpy' from '/media/ben/Analysis/Python/cp_server/.venv/lib/python3.12/site-packages/numpy/__init__.py'>)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $190load_attr.4 = getattr(value=$180load_global.2, attr=isnan)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $212call.6 = call $190load_attr.4(v.1, func=$190load_attr.4, args=[Var(v.1, arraymath.py:625)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: bool220 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,576 - numba.core.ssa - DEBUG - on stmt: $220pred = call bool220($212call.6, func=bool220, args=(Var($212call.6, arraymath.py:626),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - on stmt: branch $220pred, 222, 230
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 222
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - on stmt: $228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def var='idx' stmt=$228return_value.2 = cast(value=idx)
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def_from_top label 222
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - idom 178 from label 222
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - idom 174 from label 178
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def_from_bottom label 174
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def_from_top label 174
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - insert phi node idx.2 = phi(incoming_values=[], incoming_blocks=[]) at 174
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def_from_bottom label 248
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - incoming_def idx.1 = $binop_iadd252.3
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def_from_bottom label 146
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - incoming_def idx = const(int, 0)
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - replaced with: $228return_value.2 = cast(value=idx.2)
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - on stmt: return $228return_value.2
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 230
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - on stmt: $234compare_op.3 = v.1 < min_value.3
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - on stmt: bool238 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - on stmt: $238pred = call bool238($234compare_op.3, func=bool238, args=(Var($234compare_op.3, arraymath.py:628),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - on stmt: branch $238pred, 240, 248
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 240
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - on stmt: min_value.1 = v.1
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - on stmt: min_idx.1 = idx
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def var='idx' stmt=min_idx.1 = idx
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - find_def_from_top label 240
2025-01-20 15:59:12,577 - numba.core.ssa - DEBUG - idom 230 from label 240
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_bottom label 230
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_top label 230
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - idom 178 from label 230
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - idom 174 from label 178
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_bottom label 174
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - replaced with: min_idx.1 = idx.2
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - on stmt: jump 248
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 248
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - on stmt: min_idx.4 = phi(incoming_values=[Var(min_idx.1, arraymath.py:630), Var(min_idx.3, arraymath.py:632)], incoming_blocks=[240, 230])
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - on stmt: min_value.4 = phi(incoming_values=[Var(min_value.1, arraymath.py:629), Var(min_value.3, arraymath.py:628)], incoming_blocks=[240, 230])
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - on stmt: $const250.2 = const(int, 1)
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - on stmt: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def var='idx' stmt=$binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_top label 248
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - idom 230 from label 248
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_bottom label 230
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_top label 230
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - idom 178 from label 230
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - idom 174 from label 178
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - find_def_from_bottom label 174
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - replaced with: $binop_iadd252.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=idx.2, rhs=$const250.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - on stmt: idx.1 = $binop_iadd252.3
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - on stmt: jump 174
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 260
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7635299fdb50>
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - on stmt: $264return_value.3 = cast(value=min_idx.3)
2025-01-20 15:59:12,578 - numba.core.ssa - DEBUG - on stmt: return $264return_value.3
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=5442)
           2	RESUME(arg=0, lineno=5442)
           4	LOAD_GLOBAL(arg=1, lineno=5443)
          14	LOAD_FAST(arg=0, lineno=5443)
          16	LOAD_FAST(arg=1, lineno=5443)
          18	CALL(arg=2, lineno=5443)
          26	RETURN_VALUE(arg=None, lineno=5443)
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=5442)
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=5442)
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=5443)
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=5443)
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=5443)
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0', '$object14.2']
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=5443)
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - stack ['$null$4.1', '$4load_global.0', '$object14.2', '$dtype16.3']
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=5443)
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - stack ['$18call.4']
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,640 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,641 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,641 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,641 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,641 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,641 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,641 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,641 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,641 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$object14.2'}), (16, {'res': '$dtype16.3'}), (18, {'func': '$4load_global.0', 'args': ['$object14.2', '$dtype16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,641 - numba.core.interpreter - DEBUG - label 0:
    object = arg(0, name=object)             ['object']
    dtype = arg(1, name=dtype)               ['dtype']
    $4load_global.0 = global(np_array: <intrinsic np_array>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(object, dtype, func=$4load_global.0, args=[Var(object, arrayobj.py:5442), Var(dtype, arrayobj.py:5442)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'dtype', 'object']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x76351df73170>
2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - on stmt: object = arg(0, name=object)
2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - on stmt: dtype = arg(1, name=dtype)
2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - on stmt: $4load_global.0 = global(np_array: <intrinsic np_array>)
2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - on stmt: $18call.4 = call $4load_global.0(object, dtype, func=$4load_global.0, args=[Var(object, arrayobj.py:5442), Var(dtype, arrayobj.py:5442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - on stmt: return $26return_value.5
2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x7635299fee70>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x763528b1c140>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x763528bf03b0>,
                                  0)],
             'dtype': [(<numba.core.ir.Assign object at 0x76351df73500>, 0)],
             'object': [(<numba.core.ir.Assign object at 0x76351df73da0>, 0)]})
2025-01-20 15:59:12,644 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x76351df73170>
2025-01-20 15:59:12,681 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	COPY_FREE_VARS(arg=1, lineno=4388)
           4	RESUME(arg=0, lineno=4388)
           6	LOAD_GLOBAL(arg=1, lineno=4389)
          16	LOAD_FAST(arg=0, lineno=4389)
          18	LOAD_FAST(arg=1, lineno=4389)
          20	LOAD_DEREF(arg=2, lineno=4389)
          22	CALL(arg=3, lineno=4389)
          30	RETURN_VALUE(arg=None, lineno=4389)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4388)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=4388)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=4388)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=1, lineno=4389)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=4389)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0']
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=4389)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2']
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_DEREF(arg=2, lineno=4389)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2', '$dtype18.3']
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=CALL(arg=3, lineno=4389)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack ['$null$6.1', '$6load_global.0', '$shape16.2', '$dtype18.3', '$20load_deref.4']
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=RETURN_VALUE(arg=None, lineno=4389)
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - stack ['$22call.5']
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,682 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,683 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,683 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,683 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,683 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,683 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,683 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'idx': 0, 'res': '$6load_global.0'}), (16, {'res': '$shape16.2'}), (18, {'res': '$dtype18.3'}), (20, {'res': '$20load_deref.4'}), (22, {'func': '$6load_global.0', 'args': ['$shape16.2', '$dtype18.3', '$20load_deref.4'], 'kw_names': None, 'res': '$22call.5'}), (30, {'retval': '$22call.5', 'castval': '$30return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,683 - numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$6load_global.0']
    $20load_deref.4 = freevar(retty: array(int64, 1d, C)) ['$20load_deref.4']
    $22call.5 = call $6load_global.0(shape, dtype, $20load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($20load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_deref.4', '$22call.5', '$6load_global.0', 'dtype', 'shape']
    $30return_value.6 = cast(value=$22call.5) ['$22call.5', '$30return_value.6']
    return $30return_value.6                 ['$30return_value.6']

2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528b837d0>
2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - on stmt: dtype = arg(1, name=dtype)
2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - on stmt: $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - on stmt: $20load_deref.4 = freevar(retty: array(int64, 1d, C))
2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - on stmt: $22call.5 = call $6load_global.0(shape, dtype, $20load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($20load_deref.4, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - on stmt: $30return_value.6 = cast(value=$22call.5)
2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - on stmt: return $30return_value.6
2025-01-20 15:59:12,686 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$20load_deref.4': [(<numba.core.ir.Assign object at 0x763528b82fc0>,
                                  0)],
             '$22call.5': [(<numba.core.ir.Assign object at 0x763528b82cc0>,
                            0)],
             '$30return_value.6': [(<numba.core.ir.Assign object at 0x763528b81c70>,
                                    0)],
             '$6load_global.0': [(<numba.core.ir.Assign object at 0x763528b82ff0>,
                                  0)],
             'dtype': [(<numba.core.ir.Assign object at 0x763528b803b0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x763528b82030>, 0)]})
2025-01-20 15:59:12,687 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528b837d0>
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	LOAD_FAST(arg=1, lineno=1)
           8	COMPARE_OP(arg=40, lineno=1)
          12	RETURN_VALUE(arg=None, lineno=1)
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=1)
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - stack ['$_290binary_subscr_41_14.0']
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=40, lineno=1)
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - stack ['$_290binary_subscr_41_14.0', '$_binop_add298_44_16.1']
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=1)
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - stack ['$8compare_op.2']
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,825 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,826 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,826 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$_290binary_subscr_41_14.0'}), (6, {'res': '$_binop_add298_44_16.1'}), (8, {'lhs': '$_290binary_subscr_41_14.0', 'rhs': '$_binop_add298_44_16.1', 'res': '$8compare_op.2'}), (12, {'retval': '$8compare_op.2', 'castval': '$12return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,826 - numba.core.interpreter - DEBUG - label 0:
    _290binary_subscr_41_1 = arg(0, name=_290binary_subscr_41_1) ['_290binary_subscr_41_1']
    _binop_add298_44_1 = arg(1, name=_binop_add298_44_1) ['_binop_add298_44_1']
    $8compare_op.2 = _290binary_subscr_41_1 == _binop_add298_44_1 ['$8compare_op.2', '_290binary_subscr_41_1', '_binop_add298_44_1']
    $12return_value.3 = cast(value=$8compare_op.2) ['$12return_value.3', '$8compare_op.2']
    return $12return_value.3                 ['$12return_value.3']

2025-01-20 15:59:12,828 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,828 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763528b98050>
2025-01-20 15:59:12,828 - numba.core.ssa - DEBUG - on stmt: _290binary_subscr_41_1 = arg(0, name=_290binary_subscr_41_1)
2025-01-20 15:59:12,828 - numba.core.ssa - DEBUG - on stmt: _binop_add298_44_1 = arg(1, name=_binop_add298_44_1)
2025-01-20 15:59:12,828 - numba.core.ssa - DEBUG - on stmt: $8compare_op.2 = _290binary_subscr_41_1 == _binop_add298_44_1
2025-01-20 15:59:12,828 - numba.core.ssa - DEBUG - on stmt: $12return_value.3 = cast(value=$8compare_op.2)
2025-01-20 15:59:12,828 - numba.core.ssa - DEBUG - on stmt: return $12return_value.3
2025-01-20 15:59:12,829 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12return_value.3': [(<numba.core.ir.Assign object at 0x763528b9b1a0>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x763528b9b230>,
                                 0)],
             '_290binary_subscr_41_1': [(<numba.core.ir.Assign object at 0x763528b98260>,
                                         0)],
             '_binop_add298_44_1': [(<numba.core.ir.Assign object at 0x763528b9b560>,
                                     0)]})
2025-01-20 15:59:12,829 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763528b98050>
2025-01-20 15:59:12,845 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	LOAD_FAST(arg=1, lineno=1)
           8	BINARY_OP(arg=10, lineno=1)
          12	LOAD_CONST(arg=1, lineno=1)
          14	BINARY_OP(arg=8, lineno=1)
          18	LOAD_FAST(arg=2, lineno=1)
          20	LOAD_FAST(arg=3, lineno=1)
          22	BINARY_OP(arg=10, lineno=1)
          26	LOAD_CONST(arg=1, lineno=1)
          28	BINARY_OP(arg=8, lineno=1)
          32	BINARY_OP(arg=0, lineno=1)
          36	RETURN_VALUE(arg=None, lineno=1)
2025-01-20 15:59:12,845 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,845 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,845 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,845 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-01-20 15:59:12,845 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,845 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-01-20 15:59:12,845 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,845 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$xi_14.0']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=BINARY_OP(arg=10, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$xi_14.0', '$xmed_26.1']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$binop_sub8.2']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_OP(arg=8, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$binop_sub8.2', '$const12.3']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$binop_pow14.4']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=3, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$binop_pow14.4', '$yi_118.5']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_OP(arg=10, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$binop_pow14.4', '$yi_118.5', '$ymed_220.6']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$binop_pow14.4', '$binop_sub22.7']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=BINARY_OP(arg=8, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$binop_pow14.4', '$binop_sub22.7', '$const26.8']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$binop_pow14.4', '$binop_pow28.9']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=RETURN_VALUE(arg=None, lineno=1)
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - stack ['$binop_add32.10']
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,846 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,847 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,847 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,847 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$xi_14.0'}), (6, {'res': '$xmed_26.1'}), (8, {'op': '-', 'lhs': '$xi_14.0', 'rhs': '$xmed_26.1', 'res': '$binop_sub8.2'}), (12, {'res': '$const12.3'}), (14, {'op': '**', 'lhs': '$binop_sub8.2', 'rhs': '$const12.3', 'res': '$binop_pow14.4'}), (18, {'res': '$yi_118.5'}), (20, {'res': '$ymed_220.6'}), (22, {'op': '-', 'lhs': '$yi_118.5', 'rhs': '$ymed_220.6', 'res': '$binop_sub22.7'}), (26, {'res': '$const26.8'}), (28, {'op': '**', 'lhs': '$binop_sub22.7', 'rhs': '$const26.8', 'res': '$binop_pow28.9'}), (32, {'op': '+', 'lhs': '$binop_pow14.4', 'rhs': '$binop_pow28.9', 'res': '$binop_add32.10'}), (36, {'retval': '$binop_add32.10', 'castval': '$36return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,847 - numba.core.interpreter - DEBUG - label 0:
    xi_1 = arg(0, name=xi_1)                 ['xi_1']
    xmed_2 = arg(1, name=xmed_2)             ['xmed_2']
    yi_1 = arg(2, name=yi_1)                 ['yi_1']
    ymed_2 = arg(3, name=ymed_2)             ['ymed_2']
    $binop_sub8.2 = xi_1 - xmed_2            ['$binop_sub8.2', 'xi_1', 'xmed_2']
    $const12.3 = const(int, 2)               ['$const12.3']
    $binop_pow14.4 = $binop_sub8.2 ** $const12.3 ['$binop_pow14.4', '$binop_sub8.2', '$const12.3']
    $binop_sub22.7 = yi_1 - ymed_2           ['$binop_sub22.7', 'yi_1', 'ymed_2']
    $const26.8 = const(int, 2)               ['$const26.8']
    $binop_pow28.9 = $binop_sub22.7 ** $const26.8 ['$binop_pow28.9', '$binop_sub22.7', '$const26.8']
    $binop_add32.10 = $binop_pow14.4 + $binop_pow28.9 ['$binop_add32.10', '$binop_pow14.4', '$binop_pow28.9']
    $36return_value.11 = cast(value=$binop_add32.10) ['$36return_value.11', '$binop_add32.10']
    return $36return_value.11                ['$36return_value.11']

2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d9d0d0>
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: xi_1 = arg(0, name=xi_1)
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: xmed_2 = arg(1, name=xmed_2)
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: yi_1 = arg(2, name=yi_1)
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: ymed_2 = arg(3, name=ymed_2)
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: $binop_sub8.2 = xi_1 - xmed_2
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: $const12.3 = const(int, 2)
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: $binop_pow14.4 = $binop_sub8.2 ** $const12.3
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: $binop_sub22.7 = yi_1 - ymed_2
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: $const26.8 = const(int, 2)
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: $binop_pow28.9 = $binop_sub22.7 ** $const26.8
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: $binop_add32.10 = $binop_pow14.4 + $binop_pow28.9
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: $36return_value.11 = cast(value=$binop_add32.10)
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - on stmt: return $36return_value.11
2025-01-20 15:59:12,850 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$36return_value.11': [(<numba.core.ir.Assign object at 0x763535d3df40>,
                                     0)],
             '$binop_add32.10': [(<numba.core.ir.Assign object at 0x763535d3ddf0>,
                                  0)],
             '$binop_pow14.4': [(<numba.core.ir.Assign object at 0x763535d3d3a0>,
                                 0)],
             '$binop_pow28.9': [(<numba.core.ir.Assign object at 0x763535d3daf0>,
                                 0)],
             '$binop_sub22.7': [(<numba.core.ir.Assign object at 0x763535d3d820>,
                                 0)],
             '$binop_sub8.2': [(<numba.core.ir.Assign object at 0x763535d3ce60>,
                                0)],
             '$const12.3': [(<numba.core.ir.Assign object at 0x763535d3cfe0>,
                             0)],
             '$const26.8': [(<numba.core.ir.Assign object at 0x763535d3d970>,
                             0)],
             'xi_1': [(<numba.core.ir.Assign object at 0x763535d3c4a0>, 0)],
             'xmed_2': [(<numba.core.ir.Assign object at 0x763535d3d070>, 0)],
             'yi_1': [(<numba.core.ir.Assign object at 0x763535d3c7a0>, 0)],
             'ymed_2': [(<numba.core.ir.Assign object at 0x763535d3c440>, 0)]})
2025-01-20 15:59:12,851 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763535d9d0d0>
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	CALL(arg=1, lineno=216)
          20	STORE_FAST(arg=2, lineno=216)
          22	PUSH_NULL(arg=None, lineno=217)
          24	LOAD_DEREF(arg=6, lineno=217)
          26	LOAD_FAST(arg=0, lineno=217)
          28	CALL(arg=1, lineno=217)
          36	STORE_FAST(arg=0, lineno=217)
          38	LOAD_FAST(arg=1, lineno=218)
          40	LOAD_CONST(arg=2, lineno=218)
          42	COMPARE_OP(arg=2, lineno=218)
          46	POP_JUMP_IF_FALSE(arg=49, lineno=218)
          48	LOAD_CONST(arg=3, lineno=219)
          50	STORE_FAST(arg=3, lineno=219)
          52	LOAD_FAST(arg=1, lineno=220)
          54	UNARY_NEGATIVE(arg=None, lineno=220)
          56	STORE_FAST(arg=4, lineno=220)
          58	LOAD_FAST(arg=4, lineno=221)
          60	LOAD_CONST(arg=2, lineno=221)
          62	COMPARE_OP(arg=2, lineno=221)
          66	POP_JUMP_IF_FALSE(arg=6, lineno=221)
          68	LOAD_GLOBAL(arg=0, lineno=222)
          78	RAISE_VARARGS(arg=1, lineno=222)
>         80	LOAD_DEREF(arg=5, lineno=223)
          82	POP_JUMP_IF_FALSE(arg=35, lineno=223)
          84	LOAD_FAST(arg=0, lineno=224)
          86	LOAD_CONST(arg=2, lineno=224)
          88	COMPARE_OP(arg=40, lineno=224)
          92	POP_JUMP_IF_FALSE(arg=15, lineno=224)
          94	LOAD_DEREF(arg=7, lineno=225)
          96	POP_JUMP_IF_FALSE(arg=2, lineno=225)
          98	LOAD_DEREF(arg=7, lineno=226)
         100	RETURN_VALUE(arg=None, lineno=226)
>        102	LOAD_GLOBAL(arg=3, lineno=228)
         112	LOAD_CONST(arg=4, lineno=228)
         114	CALL(arg=1, lineno=228)
         122	RAISE_VARARGS(arg=1, lineno=228)
>        124	LOAD_FAST(arg=0, lineno=229)
         126	LOAD_CONST(arg=1, lineno=229)
         128	COMPARE_OP(arg=55, lineno=229)
         132	POP_JUMP_IF_FALSE(arg=10, lineno=229)
         134	LOAD_FAST(arg=0, lineno=229)
         136	LOAD_CONST(arg=5, lineno=229)
         138	COMPARE_OP(arg=55, lineno=229)
         142	POP_JUMP_IF_FALSE(arg=5, lineno=229)
         144	RETURN_CONST(arg=2, lineno=230)
>        146	LOAD_CONST(arg=6, lineno=232)
         148	STORE_FAST(arg=3, lineno=232)
         150	LOAD_FAST(arg=1, lineno=233)
         152	STORE_FAST(arg=4, lineno=233)
>        154	LOAD_FAST(arg=4, lineno=234)
         156	LOAD_CONST(arg=7, lineno=234)
         158	COMPARE_OP(arg=68, lineno=234)
         162	POP_JUMP_IF_FALSE(arg=31, lineno=234)
         164	LOAD_GLOBAL(arg=5, lineno=236)
         174	LOAD_ATTR(arg=6, lineno=236)
         194	LOAD_FAST(arg=0, lineno=236)
         196	LOAD_GLOBAL(arg=9, lineno=236)
         206	LOAD_FAST(arg=1, lineno=236)
         208	CALL(arg=1, lineno=236)
         216	CALL(arg=2, lineno=236)
         224	RETURN_VALUE(arg=None, lineno=236)
>        226	LOAD_FAST(arg=4, lineno=237)
         228	LOAD_CONST(arg=2, lineno=237)
         230	COMPARE_OP(arg=55, lineno=237)
         234	POP_JUMP_IF_FALSE(arg=26, lineno=237)
>        236	LOAD_FAST(arg=4, lineno=238)
         238	LOAD_CONST(arg=1, lineno=238)
         240	BINARY_OP(arg=1, lineno=238)
         244	POP_JUMP_IF_FALSE(arg=5, lineno=238)
         246	LOAD_FAST(arg=2, lineno=239)
         248	LOAD_FAST(arg=0, lineno=239)
         250	BINARY_OP(arg=18, lineno=239)
         254	STORE_FAST(arg=2, lineno=239)
>        256	LOAD_FAST(arg=4, lineno=240)
         258	LOAD_CONST(arg=1, lineno=240)
         260	BINARY_OP(arg=22, lineno=240)
         264	STORE_FAST(arg=4, lineno=240)
         266	LOAD_FAST(arg=0, lineno=241)
         268	LOAD_FAST(arg=0, lineno=241)
         270	BINARY_OP(arg=18, lineno=241)
         274	STORE_FAST(arg=0, lineno=241)
         276	LOAD_FAST(arg=4, lineno=237)
         278	LOAD_CONST(arg=2, lineno=237)
         280	COMPARE_OP(arg=55, lineno=237)
         284	POP_JUMP_IF_FALSE(arg=1, lineno=237)
         286	JUMP_BACKWARD(arg=26, lineno=237)
>        288	LOAD_FAST(arg=3, lineno=243)
         290	POP_JUMP_IF_FALSE(arg=5, lineno=243)
         292	LOAD_CONST(arg=8, lineno=243)
         294	LOAD_FAST(arg=2, lineno=243)
         296	BINARY_OP(arg=11, lineno=243)
         300	RETURN_VALUE(arg=None, lineno=243)
>        302	LOAD_FAST(arg=2, lineno=243)
         304	RETURN_VALUE(arg=None, lineno=243)
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=214)
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - stack ['$null$6.0']
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - stack ['$null$6.0', '$8load_deref.1']
2025-01-20 15:59:12,858 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=CALL(arg=1, lineno=216)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$const10.2']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=STORE_FAST(arg=2, lineno=216)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$12call.3']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=PUSH_NULL(arg=None, lineno=217)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_DEREF(arg=6, lineno=217)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$null$22.4']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=217)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$null$22.4', '$24load_deref.5']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=217)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$null$22.4', '$24load_deref.5', '$a26.6']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=STORE_FAST(arg=0, lineno=217)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$28call.7']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=218)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=218)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$b38.8']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=COMPARE_OP(arg=2, lineno=218)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$b38.8', '$const40.9']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=POP_JUMP_IF_FALSE(arg=49, lineno=218)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$42compare_op.10']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=219)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=3, lineno=219)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack ['$const48.0']
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=220)
2025-01-20 15:59:12,859 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack ['$b52.1']
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=4, lineno=220)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack ['$54unary_negative.2']
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=4, lineno=221)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=221)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack ['$exp58.3']
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=221)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack ['$exp58.3', '$const60.4']
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=6, lineno=221)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack ['$62compare_op.5']
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=80, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=80 nstack_initial=0)])
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_CONST(arg=6, lineno=232)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=148, inst=STORE_FAST(arg=3, lineno=232)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack ['$const146.0']
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=233)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=4, lineno=233)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack ['$b150.1']
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=80 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=0, lineno=222)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=RAISE_VARARGS(arg=1, lineno=222)
2025-01-20 15:59:12,860 - numba.core.byteflow - DEBUG - stack ['$68load_global.0']
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=0)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=LOAD_DEREF(arg=5, lineno=223)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=35, lineno=223)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack ['$80load_deref.0']
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=154 nstack_initial=0)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=234)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=7, lineno=234)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack ['$exp154.0']
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=158, inst=COMPARE_OP(arg=68, lineno=234)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack ['$exp154.0', '$const156.1']
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=162, inst=POP_JUMP_IF_FALSE(arg=31, lineno=234)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack ['$158compare_op.2']
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=226, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=226 nstack_initial=0)])
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=224)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=2, lineno=224)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack ['$a84.0']
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=40, lineno=224)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack ['$a84.0', '$const86.1']
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=15, lineno=224)
2025-01-20 15:59:12,861 - numba.core.byteflow - DEBUG - stack ['$88compare_op.2']
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=124, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=226 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=226 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=164 nstack_initial=0)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=5, lineno=236)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=174, inst=LOAD_ATTR(arg=6, lineno=236)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack ['$null$164.1', '$164load_global.0']
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=0, lineno=236)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack ['$null$164.1', '$174load_attr.2']
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=196, inst=LOAD_GLOBAL(arg=9, lineno=236)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3']
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=1, lineno=236)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3', '$null$196.5', '$196load_global.4']
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=208, inst=CALL(arg=1, lineno=236)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3', '$null$196.5', '$196load_global.4', '$b206.6']
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=216, inst=CALL(arg=2, lineno=236)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack ['$null$164.1', '$174load_attr.2', '$a194.3', '$208call.7']
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=224, inst=RETURN_VALUE(arg=None, lineno=236)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack ['$216call.8']
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=226 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=226 nstack_initial=0)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=226, inst=LOAD_FAST(arg=4, lineno=237)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=228, inst=LOAD_CONST(arg=2, lineno=237)
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - stack ['$exp226.0']
2025-01-20 15:59:12,862 - numba.core.byteflow - DEBUG - dispatch pc=230, inst=COMPARE_OP(arg=55, lineno=237)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack ['$exp226.0', '$const228.1']
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - dispatch pc=234, inst=POP_JUMP_IF_FALSE(arg=26, lineno=237)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack ['$230compare_op.2']
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=236, stack=(), blockstack=(), npush=0), Edge(pc=288, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=236 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=94 nstack_initial=0)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_DEREF(arg=7, lineno=225)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=2, lineno=225)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack ['$94load_deref.0']
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=236 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=124 nstack_initial=0)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=229)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=229)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack ['$a124.0']
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - dispatch pc=128, inst=COMPARE_OP(arg=55, lineno=229)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack ['$a124.0', '$const126.1']
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=10, lineno=229)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack ['$128compare_op.2']
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=236 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=236 nstack_initial=0)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=4, lineno=238)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - dispatch pc=238, inst=LOAD_CONST(arg=1, lineno=238)
2025-01-20 15:59:12,863 - numba.core.byteflow - DEBUG - stack ['$exp236.0']
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - dispatch pc=240, inst=BINARY_OP(arg=1, lineno=238)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack ['$exp236.0', '$const238.1']
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - dispatch pc=244, inst=POP_JUMP_IF_FALSE(arg=5, lineno=238)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack ['$binop_and_240.2']
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0), Edge(pc=256, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=288 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=288 nstack_initial=0)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - dispatch pc=288, inst=LOAD_FAST(arg=3, lineno=243)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - dispatch pc=290, inst=POP_JUMP_IF_FALSE(arg=5, lineno=243)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack ['$invert288.0']
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_DEREF(arg=7, lineno=226)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=226)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack ['$98load_deref.0']
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=3, lineno=228)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=228)
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - stack ['$null$102.1', '$102load_global.0']
2025-01-20 15:59:12,864 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=CALL(arg=1, lineno=228)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack ['$null$102.1', '$102load_global.0', '$const112.2']
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - dispatch pc=122, inst=RAISE_VARARGS(arg=1, lineno=228)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack ['$114call.3']
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=134 nstack_initial=0)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - dispatch pc=134, inst=LOAD_FAST(arg=0, lineno=229)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - dispatch pc=136, inst=LOAD_CONST(arg=5, lineno=229)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack ['$a134.0']
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - dispatch pc=138, inst=COMPARE_OP(arg=55, lineno=229)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack ['$a134.0', '$const136.1']
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - dispatch pc=142, inst=POP_JUMP_IF_FALSE(arg=5, lineno=229)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack ['$138compare_op.2']
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=144, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=246 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=246 nstack_initial=0)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=2, lineno=239)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - dispatch pc=248, inst=LOAD_FAST(arg=0, lineno=239)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack ['$r246.0']
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - dispatch pc=250, inst=BINARY_OP(arg=18, lineno=239)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack ['$r246.0', '$a248.1']
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - dispatch pc=254, inst=STORE_FAST(arg=2, lineno=239)
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - stack ['$binop_imul250.2']
2025-01-20 15:59:12,865 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=256, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=0)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=4, lineno=240)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=258, inst=LOAD_CONST(arg=1, lineno=240)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack ['$exp256.0']
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=260, inst=BINARY_OP(arg=22, lineno=240)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack ['$exp256.0', '$const258.1']
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=264, inst=STORE_FAST(arg=4, lineno=240)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack ['$binop_irshift260.2']
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=0, lineno=241)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=268, inst=LOAD_FAST(arg=0, lineno=241)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack ['$a266.3']
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=270, inst=BINARY_OP(arg=18, lineno=241)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack ['$a266.3', '$a268.4']
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=274, inst=STORE_FAST(arg=0, lineno=241)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack ['$binop_imul270.5']
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=276, inst=LOAD_FAST(arg=4, lineno=237)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=278, inst=LOAD_CONST(arg=2, lineno=237)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack ['$exp276.6']
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=280, inst=COMPARE_OP(arg=55, lineno=237)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack ['$exp276.6', '$const278.7']
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=284, inst=POP_JUMP_IF_FALSE(arg=1, lineno=237)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack ['$280compare_op.8']
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=286, stack=(), blockstack=(), npush=0), Edge(pc=288, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
2025-01-20 15:59:12,866 - numba.core.byteflow - DEBUG - dispatch pc=292, inst=LOAD_CONST(arg=8, lineno=243)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - dispatch pc=294, inst=LOAD_FAST(arg=2, lineno=243)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack ['$const292.0']
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - dispatch pc=296, inst=BINARY_OP(arg=11, lineno=243)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack ['$const292.0', '$r294.1']
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - dispatch pc=300, inst=RETURN_VALUE(arg=None, lineno=243)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack ['$binop_truediv296.2']
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=2, lineno=243)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - dispatch pc=304, inst=RETURN_VALUE(arg=None, lineno=243)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack ['$r302.0']
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=144 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=144 nstack_initial=0)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - dispatch pc=144, inst=RETURN_CONST(arg=2, lineno=230)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=0), State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=286 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=286 nstack_initial=0)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - dispatch pc=286, inst=JUMP_BACKWARD(arg=26, lineno=237)
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=236, stack=(), blockstack=(), npush=0)]
2025-01-20 15:59:12,867 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=288 nstack_initial=0), State(pc_initial=236 nstack_initial=0)])
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=236 nstack_initial=0)])
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=144 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=226 nstack_initial=0): set(),
             State(pc_initial=236 nstack_initial=0): set(),
             State(pc_initial=246 nstack_initial=0): set(),
             State(pc_initial=256 nstack_initial=0): set(),
             State(pc_initial=286 nstack_initial=0): set(),
             State(pc_initial=288 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set()})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2'}), (12, {'func': '$8load_deref.1', 'args': ['$const10.2'], 'kw_names': None, 'res': '$12call.3'}), (20, {'value': '$12call.3'}), (22, {}), (24, {'res': '$24load_deref.5'}), (26, {'res': '$a26.6'}), (28, {'func': '$24load_deref.5', 'args': ['$a26.6'], 'kw_names': None, 'res': '$28call.7'}), (36, {'value': '$28call.7'}), (38, {'res': '$b38.8'}), (40, {'res': '$const40.9'}), (42, {'lhs': '$b38.8', 'rhs': '$const40.9', 'res': '$42compare_op.10'}), (46, {'pred': '$42compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 146: ()})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$const48.0'}), (50, {'value': '$const48.0'}), (52, {'res': '$b52.1'}), (54, {'value': '$b52.1', 'res': '$54unary_negative.2'}), (56, {'value': '$54unary_negative.2'}), (58, {'res': '$exp58.3'}), (60, {'res': '$const60.4'}), (62, {'lhs': '$exp58.3', 'rhs': '$const60.4', 'res': '$62compare_op.5'}), (66, {'pred': '$62compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 80: ()})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'idx': 0, 'res': '$68load_global.0'}), (78, {'exc': '$68load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$80load_deref.0'}), (82, {'pred': '$80load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 154: ()})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (92, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 124: ()})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$94load_deref.0'}), (96, {'pred': '$94load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 102: ()})
2025-01-20 15:59:12,868 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'retval': '$98load_deref.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'idx': 1, 'res': '$102load_global.0'}), (112, {'res': '$const112.2'}), (114, {'func': '$102load_global.0', 'args': ['$const112.2'], 'kw_names': None, 'res': '$114call.3'}), (122, {'exc': '$114call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$a124.0'}), (126, {'res': '$const126.1'}), (128, {'lhs': '$a124.0', 'rhs': '$const126.1', 'res': '$128compare_op.2'}), (132, {'pred': '$128compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 154: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$a134.0'}), (136, {'res': '$const136.1'}), (138, {'lhs': '$a134.0', 'rhs': '$const136.1', 'res': '$138compare_op.2'}), (142, {'pred': '$138compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={144: (), 154: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=144 nstack_initial=0):
AdaptBlockInfo(insts=((144, {'retval': '$const144.0', 'castval': '$144return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$const146.0'}), (148, {'value': '$const146.0'}), (150, {'res': '$b150.1'}), (152, {'value': '$b150.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158compare_op.2'}), (162, {'pred': '$158compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 226: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'idx': 2, 'res': '$164load_global.0'}), (174, {'item': '$164load_global.0', 'res': '$174load_attr.2'}), (194, {'res': '$a194.3'}), (196, {'idx': 4, 'res': '$196load_global.4'}), (206, {'res': '$b206.6'}), (208, {'func': '$196load_global.4', 'args': ['$b206.6'], 'kw_names': None, 'res': '$208call.7'}), (216, {'func': '$174load_attr.2', 'args': ['$a194.3', '$208call.7'], 'kw_names': None, 'res': '$216call.8'}), (224, {'retval': '$216call.8', 'castval': '$224return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=226 nstack_initial=0):
AdaptBlockInfo(insts=((226, {'res': '$exp226.0'}), (228, {'res': '$const228.1'}), (230, {'lhs': '$exp226.0', 'rhs': '$const228.1', 'res': '$230compare_op.2'}), (234, {'pred': '$230compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: (), 288: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=236 nstack_initial=0):
AdaptBlockInfo(insts=((236, {'res': '$exp236.0'}), (238, {'res': '$const238.1'}), (240, {'op': '&', 'lhs': '$exp236.0', 'rhs': '$const238.1', 'res': '$binop_and_240.2'}), (244, {'pred': '$binop_and_240.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: (), 256: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=246 nstack_initial=0):
AdaptBlockInfo(insts=((246, {'res': '$r246.0'}), (248, {'res': '$a248.1'}), (250, {'op': '*=', 'lhs': '$r246.0', 'rhs': '$a248.1', 'res': '$binop_imul250.2'}), (254, {'value': '$binop_imul250.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={256: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=256 nstack_initial=0):
AdaptBlockInfo(insts=((256, {'res': '$exp256.0'}), (258, {'res': '$const258.1'}), (260, {'op': '>>=', 'lhs': '$exp256.0', 'rhs': '$const258.1', 'res': '$binop_irshift260.2'}), (264, {'value': '$binop_irshift260.2'}), (266, {'res': '$a266.3'}), (268, {'res': '$a268.4'}), (270, {'op': '*=', 'lhs': '$a266.3', 'rhs': '$a268.4', 'res': '$binop_imul270.5'}), (274, {'value': '$binop_imul270.5'}), (276, {'res': '$exp276.6'}), (278, {'res': '$const278.7'}), (280, {'lhs': '$exp276.6', 'rhs': '$const278.7', 'res': '$280compare_op.8'}), (284, {'pred': '$280compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={286: (), 288: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=286 nstack_initial=0):
AdaptBlockInfo(insts=((286, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=288 nstack_initial=0):
AdaptBlockInfo(insts=((288, {'res': '$invert288.0'}), (290, {'pred': '$invert288.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$const292.0'}), (294, {'res': '$r294.1'}), (296, {'op': '/', 'lhs': '$const292.0', 'rhs': '$r294.1', 'res': '$binop_truediv296.2'}), (300, {'retval': '$binop_truediv296.2', 'castval': '$300return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,869 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$r302.0'}), (304, {'retval': '$r302.0', 'castval': '$304return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,871 - numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float64)    ['$8load_deref.1']
    $const10.2 = const(int, 1)               ['$const10.2']
    r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2', 'r']
    $24load_deref.5 = freevar(tp: float64)   ['$24load_deref.5']
    a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_deref.5', 'a', 'a.1']
    $const40.9 = const(int, 0)               ['$const40.9']
    $42compare_op.10 = b < $const40.9        ['$42compare_op.10', '$const40.9', 'b']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.10', '$46pred', 'bool46']
    branch $46pred, 48, 146                  ['$46pred']
label 48:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const60.4 = const(int, 0)               ['$const60.4']
    $62compare_op.5 = exp < $const60.4       ['$62compare_op.5', '$const60.4', 'exp']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.5', '$66pred', 'bool66']
    branch $66pred, 68, 80                   ['$66pred']
label 68:
    $68load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$68load_global.0']
    raise $68load_global.0                   ['$68load_global.0']
label 80:
    $80load_deref.0 = freevar(is_integer: False) ['$80load_deref.0']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$80load_deref.0', '$82pred', 'bool82']
    branch $82pred, 84, 154                  ['$82pred']
label 84:
    $const86.1 = const(int, 0)               ['$const86.1']
    $88compare_op.2 = a.1 == $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($88compare_op.2, func=bool92, args=(Var($88compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 124                  ['$92pred']
label 94:
    $94load_deref.0 = freevar(zerodiv_return: False) ['$94load_deref.0']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94load_deref.0, func=bool96, args=(Var($94load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$94load_deref.0', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    $98load_deref.0 = freevar(zerodiv_return: False) ['$98load_deref.0']
    $100return_value.1 = cast(value=$98load_deref.0) ['$100return_value.1', '$98load_deref.0']
    return $100return_value.1                ['$100return_value.1']
label 102:
    $102load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$102load_global.0']
    $const112.2 = const(str, 0 cannot be raised to a negative power) ['$const112.2']
    $114call.3 = call $102load_global.0($const112.2, func=$102load_global.0, args=[Var($const112.2, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$102load_global.0', '$114call.3', '$const112.2']
    raise $114call.3                         ['$114call.3']
label 124:
    $const126.1 = const(int, 1)              ['$const126.1']
    $128compare_op.2 = a.1 != $const126.1    ['$128compare_op.2', '$const126.1', 'a.1']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($128compare_op.2, func=bool132, args=(Var($128compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$128compare_op.2', '$132pred', 'bool132']
    branch $132pred, 134, 154                ['$132pred']
label 134:
    $const136.1 = const(int, -1)             ['$const136.1']
    $138compare_op.2 = a.1 != $const136.1    ['$138compare_op.2', '$const136.1', 'a.1']
    bool142 = global(bool: <class 'bool'>)   ['bool142']
    $142pred = call bool142($138compare_op.2, func=bool142, args=(Var($138compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$138compare_op.2', '$142pred', 'bool142']
    branch $142pred, 144, 154                ['$142pred']
label 144:
    $const144.0 = const(int, 0)              ['$const144.0']
    $144return_const.1 = cast(value=$const144.0) ['$144return_const.1', '$const144.0']
    return $144return_const.1                ['$144return_const.1']
label 146:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 65536)          ['$const156.1']
    $158compare_op.2 = exp > $const156.1     ['$158compare_op.2', '$const156.1', 'exp']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$158compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 226                ['$162pred']
label 164:
    $164load_global.0 = global(math: <module 'math' (built-in)>) ['$164load_global.0']
    $174load_attr.2 = getattr(value=$164load_global.0, attr=pow) ['$164load_global.0', '$174load_attr.2']
    $196load_global.4 = global(float: <class 'float'>) ['$196load_global.4']
    $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$196load_global.4', '$208call.7', 'b']
    $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$174load_attr.2', '$208call.7', '$216call.8', 'a.1']
    $224return_value.9 = cast(value=$216call.8) ['$216call.8', '$224return_value.9']
    return $224return_value.9                ['$224return_value.9']
label 226:
    $const228.1 = const(int, 0)              ['$const228.1']
    $230compare_op.2 = exp != $const228.1    ['$230compare_op.2', '$const228.1', 'exp']
    bool234 = global(bool: <class 'bool'>)   ['bool234']
    $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$230compare_op.2', '$234pred', 'bool234']
    branch $234pred, 236, 288                ['$234pred']
label 236:
    $const238.1 = const(int, 1)              ['$const238.1']
    $binop_and_240.2 = exp & $const238.1     ['$binop_and_240.2', '$const238.1', 'exp']
    bool244 = global(bool: <class 'bool'>)   ['bool244']
    $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$244pred', '$binop_and_240.2', 'bool244']
    branch $244pred, 246, 256                ['$244pred']
label 246:
    $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul250.2', 'a.1', 'r']
    r = $binop_imul250.2                     ['$binop_imul250.2', 'r']
    jump 256                                 []
label 256:
    $const258.1 = const(int, 1)              ['$const258.1']
    $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift260.2', '$const258.1', 'exp']
    exp = $binop_irshift260.2                ['$binop_irshift260.2', 'exp']
    $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul270.5', 'a.1', 'a.1']
    a.1 = $binop_imul270.5                   ['$binop_imul270.5', 'a.1']
    $const278.7 = const(int, 0)              ['$const278.7']
    $280compare_op.8 = exp != $const278.7    ['$280compare_op.8', '$const278.7', 'exp']
    bool284 = global(bool: <class 'bool'>)   ['bool284']
    $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$280compare_op.8', '$284pred', 'bool284']
    branch $284pred, 286, 288                ['$284pred']
label 286:
    jump 236                                 []
label 288:
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', 'bool290', 'invert']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $const292.0 = const(float, 1.0)          ['$const292.0']
    $binop_truediv296.2 = $const292.0 / r    ['$binop_truediv296.2', '$const292.0', 'r']
    $300return_value.3 = cast(value=$binop_truediv296.2) ['$300return_value.3', '$binop_truediv296.2']
    return $300return_value.3                ['$300return_value.3']
label 302:
    $304return_value.1 = cast(value=r)       ['$304return_value.1', 'r']
    return $304return_value.1                ['$304return_value.1']

2025-01-20 15:59:12,900 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,900 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,900 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,900 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-01-20 15:59:12,900 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2025-01-20 15:59:12,900 - numba.core.ssa - DEBUG - on stmt: $const10.2 = const(int, 1)
2025-01-20 15:59:12,900 - numba.core.ssa - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $const40.9 = const(int, 0)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: branch $46pred, 48, 146
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 48
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $const60.4 = const(int, 0)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 68, 80
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 68
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,901 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 146
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 154
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 65536)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: branch $162pred, 164, 226
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 164
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' (built-in)>)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: return $224return_value.9
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 226
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $const228.1 = const(int, 0)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - on stmt: branch $234pred, 236, 288
2025-01-20 15:59:12,902 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 236
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: $const238.1 = const(int, 1)
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: branch $244pred, 246, 256
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 246
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: r = $binop_imul250.2
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: jump 256
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 256
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: $const258.1 = const(int, 1)
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: exp = $binop_irshift260.2
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: a.1 = $binop_imul270.5
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: $const278.7 = const(int, 0)
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,903 - numba.core.ssa - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: branch $284pred, 286, 288
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 286
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: jump 236
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 288
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: branch $290pred, 292, 302
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 292
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: return $300return_value.3
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 302
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x763535d3f4a0>
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: $304return_value.1 = cast(value=r)
2025-01-20 15:59:12,904 - numba.core.ssa - DEBUG - on stmt: return $304return_value.1
2025-01-20 15:59:12,905 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$158compare_op.2': [(<numba.core.ir.Assign object at 0x763535d18920>,
                                   154)],
             '$162pred': [(<numba.core.ir.Assign object at 0x763535d18890>,
                           154)],
             '$164load_global.0': [(<numba.core.ir.Assign object at 0x763535d18cb0>,
                                    164)],
             '$174load_attr.2': [(<numba.core.ir.Assign object at 0x763535d18f20>,
                                  164)],
             '$196load_global.4': [(<numba.core.ir.Assign object at 0x763535d19010>,
                                    164)],
             '$208call.7': [(<numba.core.ir.Assign object at 0x763535d194c0>,
                             164)],
             '$216call.8': [(<numba.core.ir.Assign object at 0x763535d192e0>,
                             164)],
             '$224return_value.9': [(<numba.core.ir.Assign object at 0x763535d19a30>,
                                     164)],
             '$230compare_op.2': [(<numba.core.ir.Assign object at 0x763535d19b80>,
                                   226)],
             '$234pred': [(<numba.core.ir.Assign object at 0x763535d19c70>,
                           226)],
             '$244pred': [(<numba.core.ir.Assign object at 0x763535d03980>,
                           236)],
             '$24load_deref.5': [(<numba.core.ir.Assign object at 0x763535d987d0>,
                                  0)],
             '$280compare_op.8': [(<numba.core.ir.Assign object at 0x763535d02cf0>,
                                   256)],
             '$284pred': [(<numba.core.ir.Assign object at 0x763535d023c0>,
                           256)],
             '$290pred': [(<numba.core.ir.Assign object at 0x763535d02750>,
                           288)],
             '$300return_value.3': [(<numba.core.ir.Assign object at 0x763535d02180>,
                                     292)],
             '$304return_value.1': [(<numba.core.ir.Assign object at 0x763535d01f10>,
                                     302)],
             '$42compare_op.10': [(<numba.core.ir.Assign object at 0x763535d9bda0>,
                                   0)],
             '$46pred': [(<numba.core.ir.Assign object at 0x763535d9b920>, 0)],
             '$62compare_op.5': [(<numba.core.ir.Assign object at 0x763535d99520>,
                                  48)],
             '$66pred': [(<numba.core.ir.Assign object at 0x763535d9b890>, 48)],
             '$68load_global.0': [(<numba.core.ir.Assign object at 0x763535d980b0>,
                                   68)],
             '$80load_deref.0': [(<numba.core.ir.Assign object at 0x763535d98410>,
                                  80)],
             '$82pred': [(<numba.core.ir.Assign object at 0x763535d98890>, 80)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x763535d63740>,
                                 0)],
             '$binop_and_240.2': [(<numba.core.ir.Assign object at 0x763535d19be0>,
                                   236)],
             '$binop_imul250.2': [(<numba.core.ir.Assign object at 0x763535d03d70>,
                                   246)],
             '$binop_imul270.5': [(<numba.core.ir.Assign object at 0x763535d03260>,
                                   256)],
             '$binop_irshift260.2': [(<numba.core.ir.Assign object at 0x763535d035f0>,
                                      256)],
             '$binop_truediv296.2': [(<numba.core.ir.Assign object at 0x763535d01c10>,
                                      292)],
             '$const10.2': [(<numba.core.ir.Assign object at 0x763535daca40>,
                             0)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x763535d18500>,
                              154)],
             '$const228.1': [(<numba.core.ir.Assign object at 0x763535d19af0>,
                              226)],
             '$const238.1': [(<numba.core.ir.Assign object at 0x763535d197f0>,
                              236)],
             '$const258.1': [(<numba.core.ir.Assign object at 0x763535d01b20>,
                              256)],
             '$const278.7': [(<numba.core.ir.Assign object at 0x763535d030b0>,
                              256)],
             '$const292.0': [(<numba.core.ir.Assign object at 0x763535d028d0>,
                              292)],
             '$const40.9': [(<numba.core.ir.Assign object at 0x763535d9b950>,
                             0)],
             '$const60.4': [(<numba.core.ir.Assign object at 0x763535d9a270>,
                             48)],
             'a': [(<numba.core.ir.Assign object at 0x763535d9f110>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x763535d99250>, 0),
                     (<numba.core.ir.Assign object at 0x763535d03290>, 256)],
             'b': [(<numba.core.ir.Assign object at 0x763535d9f8f0>, 0)],
             'bool162': [(<numba.core.ir.Assign object at 0x763535d187a0>,
                          154)],
             'bool234': [(<numba.core.ir.Assign object at 0x763535d180e0>,
                          226)],
             'bool244': [(<numba.core.ir.Assign object at 0x763535d020f0>,
                          236)],
             'bool284': [(<numba.core.ir.Assign object at 0x763535d02360>,
                          256)],
             'bool290': [(<numba.core.ir.Assign object at 0x763535d00d70>,
                          288)],
             'bool46': [(<numba.core.ir.Assign object at 0x763535d9bad0>, 0)],
             'bool66': [(<numba.core.ir.Assign object at 0x763535d98590>, 48)],
             'bool82': [(<numba.core.ir.Assign object at 0x763535d987a0>, 80)],
             'exp': [(<numba.core.ir.Assign object at 0x763535d9a780>, 48),
                     (<numba.core.ir.Assign object at 0x763535d185c0>, 146),
                     (<numba.core.ir.Assign object at 0x763535d032f0>, 256)],
             'invert': [(<numba.core.ir.Assign object at 0x763535d9b7d0>, 48),
                        (<numba.core.ir.Assign object at 0x763535d9aba0>, 146)],
             'r': [(<numba.core.ir.Assign object at 0x763528f0f560>, 0),
                   (<numba.core.ir.Assign object at 0x763535d03da0>, 246)]})
2025-01-20 15:59:12,905 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x763535d3f4a0>
2025-01-20 15:59:12,905 - numba.core.ssa - DEBUG - Fix SSA violator on var r
2025-01-20 15:59:12,905 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,905 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,905 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,905 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $const10.2 = const(int, 1)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - first assign: r
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - replaced with: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $const40.9 = const(int, 0)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: branch $46pred, 48, 146
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $const60.4 = const(int, 0)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 68, 80
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 68
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,906 - numba.core.ssa - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 65536)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: branch $162pred, 164, 226
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 164
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' (built-in)>)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,907 - numba.core.ssa - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: return $224return_value.9
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 226
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $const228.1 = const(int, 0)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: branch $234pred, 236, 288
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $const238.1 = const(int, 1)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: branch $244pred, 246, 256
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 246
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: r = $binop_imul250.2
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - replaced with: r.1 = $binop_imul250.2
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: jump 256
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 256
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $const258.1 = const(int, 1)
2025-01-20 15:59:12,908 - numba.core.ssa - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: exp = $binop_irshift260.2
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: a.1 = $binop_imul270.5
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: $const278.7 = const(int, 0)
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: branch $284pred, 286, 288
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 286
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: jump 236
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 288
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: branch $290pred, 292, 302
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - on stmt: return $300return_value.3
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-01-20 15:59:12,909 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $304return_value.1 = cast(value=r)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: return $304return_value.1
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x763535d3c320>],
             246: [<numba.core.ir.Assign object at 0x763535d015b0>]})
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $const10.2 = const(int, 1)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $const40.9 = const(int, 0)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: branch $46pred, 48, 146
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $const60.4 = const(int, 0)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,910 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 68, 80
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 68
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 65536)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: branch $162pred, 164, 226
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 164
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' (built-in)>)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,911 - numba.core.ssa - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: return $224return_value.9
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 226
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: $const228.1 = const(int, 0)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: branch $234pred, 236, 288
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: $const238.1 = const(int, 1)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: branch $244pred, 246, 256
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 246
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - find_def var='r' stmt=$binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - find_def_from_top label 246
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - idom 236 from label 246
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 236
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - find_def_from_bottom label 226
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - find_def_from_top label 226
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - idom 154 from label 226
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-01-20 15:59:12,912 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - idom 0 from label 154
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - find_def_from_bottom label 286
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - find_def_from_top label 286
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - idom 256 from label 286
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - find_def_from_bottom label 256
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - find_def_from_top label 256
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 256
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[226])
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - find_def_from_bottom label 246
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - incoming_def r.1 = $binop_imul250.2
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - replaced with: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: r.1 = $binop_imul250.2
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: jump 256
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 256
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: $const258.1 = const(int, 1)
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: exp = $binop_irshift260.2
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: a.1 = $binop_imul270.5
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: $const278.7 = const(int, 0)
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - on stmt: branch $284pred, 286, 288
2025-01-20 15:59:12,913 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 286
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - on stmt: jump 236
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 288
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - on stmt: branch $290pred, 292, 302
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def var='r' stmt=$binop_truediv296.2 = $const292.0 / r
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def_from_top label 292
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - idom 288 from label 292
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def_from_bottom label 288
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def_from_top label 288
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 288
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def_from_bottom label 256
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def_from_bottom label 226
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def_from_top label 226
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - idom 154 from label 226
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - idom 0 from label 154
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - incoming_def r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - replaced with: $binop_truediv296.2 = $const292.0 / r.4
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - on stmt: return $300return_value.3
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-01-20 15:59:12,914 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: $304return_value.1 = cast(value=r)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - find_def var='r' stmt=$304return_value.1 = cast(value=r)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - idom 288 from label 302
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - find_def_from_bottom label 288
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - replaced with: $304return_value.1 = cast(value=r.4)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: return $304return_value.1
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - Fix SSA violator on var a.1
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: $const10.2 = const(int, 1)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - first assign: a.1
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - replaced with: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: $const40.9 = const(int, 0)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: branch $46pred, 48, 146
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: $const60.4 = const(int, 0)
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,915 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 68, 80
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 68
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 65536)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: branch $162pred, 164, 226
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 164
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' (built-in)>)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,916 - numba.core.ssa - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: return $224return_value.9
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 226
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $const228.1 = const(int, 0)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: branch $234pred, 236, 288
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $const238.1 = const(int, 1)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: branch $244pred, 246, 256
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 246
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: r.1 = $binop_imul250.2
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: jump 256
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 256
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $const258.1 = const(int, 1)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: exp = $binop_irshift260.2
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: a.1 = $binop_imul270.5
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - replaced with: a.1.1 = $binop_imul270.5
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $const278.7 = const(int, 0)
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,917 - numba.core.ssa - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: branch $284pred, 286, 288
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 286
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: jump 236
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 288
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: branch $290pred, 292, 302
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: return $300return_value.3
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3f560>
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: return $304return_value.1
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x763535d3faa0>],
             256: [<numba.core.ir.Assign object at 0x763535d01550>]})
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-01-20 15:59:12,918 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: $const10.2 = const(int, 1)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: $const40.9 = const(int, 0)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: branch $46pred, 48, 146
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: $const60.4 = const(int, 0)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 68, 80
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 68
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,919 - numba.core.ssa - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 65536)
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: branch $162pred, 164, 226
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 164
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' (built-in)>)
2025-01-20 15:59:12,920 - numba.core.ssa - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - find_def var='a.1' stmt=$216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - find_def_from_top label 164
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - idom 154 from label 164
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - idom 0 from label 154
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - on stmt: return $224return_value.9
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 226
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - on stmt: $const228.1 = const(int, 0)
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,921 - numba.core.ssa - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - on stmt: branch $234pred, 236, 288
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - on stmt: $const238.1 = const(int, 1)
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - on stmt: branch $244pred, 246, 256
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 246
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - find_def var='a.1' stmt=$binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - find_def_from_top label 246
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - idom 236 from label 246
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 236
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - find_def_from_bottom label 226
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - find_def_from_top label 226
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - idom 154 from label 226
2025-01-20 15:59:12,922 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - idom 0 from label 154
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - incoming_def a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - find_def_from_bottom label 286
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - find_def_from_top label 286
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - idom 256 from label 286
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - find_def_from_bottom label 256
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - incoming_def a.1.1 = $binop_imul270.5
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - replaced with: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: r.1 = $binop_imul250.2
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: jump 256
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 256
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: $const258.1 = const(int, 1)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: exp = $binop_irshift260.2
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - find_def var='a.1' stmt=$binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - find_def_from_top label 256
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - idom 236 from label 256
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - replaced with: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: $const278.7 = const(int, 0)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,923 - numba.core.ssa - DEBUG - on stmt: branch $284pred, 286, 288
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 286
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: jump 236
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 288
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: branch $290pred, 292, 302
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: return $300return_value.3
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3fce0>
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: return $304return_value.1
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - Fix SSA violator on var invert
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $const10.2 = const(int, 1)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $const40.9 = const(int, 0)
2025-01-20 15:59:12,924 - numba.core.ssa - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: branch $46pred, 48, 146
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - first assign: invert
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - replaced with: invert = const(bool, True)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: $const60.4 = const(int, 0)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 68, 80
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 68
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - replaced with: invert.1 = const(bool, False)
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-01-20 15:59:12,925 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 65536)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: branch $162pred, 164, 226
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 164
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' (built-in)>)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: return $224return_value.9
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 226
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $const228.1 = const(int, 0)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,926 - numba.core.ssa - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: branch $234pred, 236, 288
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $const238.1 = const(int, 1)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: branch $244pred, 246, 256
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 246
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: r.1 = $binop_imul250.2
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: jump 256
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 256
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $const258.1 = const(int, 1)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: exp = $binop_irshift260.2
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $const278.7 = const(int, 0)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,927 - numba.core.ssa - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: branch $284pred, 286, 288
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 286
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: jump 236
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 288
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: branch $290pred, 292, 302
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: return $300return_value.3
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3cb30>
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: return $304return_value.1
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {48: [<numba.core.ir.Assign object at 0x763535d3fc80>],
             146: [<numba.core.ir.Assign object at 0x763535d00560>]})
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: $const10.2 = const(int, 1)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,928 - numba.core.ssa - DEBUG - on stmt: $const40.9 = const(int, 0)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: branch $46pred, 48, 146
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $const60.4 = const(int, 0)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 68, 80
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 68
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 65536)
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,929 - numba.core.ssa - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: branch $162pred, 164, 226
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 164
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' (built-in)>)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: return $224return_value.9
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 226
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $const228.1 = const(int, 0)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: branch $234pred, 236, 288
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $const238.1 = const(int, 1)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: branch $244pred, 246, 256
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 246
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,930 - numba.core.ssa - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: r.1 = $binop_imul250.2
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: jump 256
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 256
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: $const258.1 = const(int, 1)
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: exp = $binop_irshift260.2
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: $const278.7 = const(int, 0)
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: branch $284pred, 286, 288
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 286
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,931 - numba.core.ssa - DEBUG - on stmt: jump 236
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 288
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - on stmt: $290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def var='invert' stmt=$290pred = call bool290(invert, func=bool290, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def_from_top label 288
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - idom 226 from label 288
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def_from_bottom label 226
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def_from_top label 226
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - idom 154 from label 226
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 154
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def_from_bottom label 80
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def_from_top label 80
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - idom 48 from label 80
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def_from_bottom label 48
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - incoming_def invert = const(bool, True)
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - find_def_from_bottom label 146
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - incoming_def invert.1 = const(bool, False)
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - replaced with: $290pred = call bool290(invert.2, func=bool290, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - on stmt: branch $290pred, 292, 302
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
2025-01-20 15:59:12,932 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: return $300return_value.3
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: return $304return_value.1
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - Fix SSA violator on var exp
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $const10.2 = const(int, 1)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $const40.9 = const(int, 0)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: branch $46pred, 48, 146
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - first assign: exp
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $const60.4 = const(int, 0)
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,933 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 68, 80
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 68
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - replaced with: exp.1 = b
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[80, 146])
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 65536)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: branch $162pred, 164, 226
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 164
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' (built-in)>)
2025-01-20 15:59:12,934 - numba.core.ssa - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: return $224return_value.9
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 226
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $const228.1 = const(int, 0)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: branch $234pred, 236, 288
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $const238.1 = const(int, 1)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: branch $244pred, 246, 256
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 246
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,935 - numba.core.ssa - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: r.1 = $binop_imul250.2
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: jump 256
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 256
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: $const258.1 = const(int, 1)
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: exp = $binop_irshift260.2
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - replaced with: exp.2 = $binop_irshift260.2
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: $const278.7 = const(int, 0)
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: branch $284pred, 286, 288
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 286
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - on stmt: jump 236
2025-01-20 15:59:12,936 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 288
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: $290pred = call bool290(invert.2, func=bool290, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: branch $290pred, 292, 302
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: return $300return_value.3
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x763535d3fce0>
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: return $304return_value.1
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {48: [<numba.core.ir.Assign object at 0x763535d3c380>],
             146: [<numba.core.ir.Assign object at 0x763535d01dc0>],
             256: [<numba.core.ir.Assign object at 0x763535d00140>]})
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,937 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(tp: float64)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: $const10.2 = const(int, 1)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: r = call $8load_deref.1($const10.2, func=$8load_deref.1, args=[Var($const10.2, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: $24load_deref.5 = freevar(tp: float64)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: a.1 = call $24load_deref.5(a, func=$24load_deref.5, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: $const40.9 = const(int, 0)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: $42compare_op.10 = b < $const40.9
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: bool46 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: $46pred = call bool46($42compare_op.10, func=bool46, args=(Var($42compare_op.10, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: branch $46pred, 48, 146
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: $const60.4 = const(int, 0)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: $62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$62compare_op.5 = exp < $const60.4
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($62compare_op.5, func=bool66, args=(Var($62compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,938 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 68, 80
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 68
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: $68load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: $80load_deref.0 = freevar(is_integer: False)
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: bool82 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: $82pred = call bool82($80load_deref.0, func=bool82, args=(Var($80load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: exp.1 = b
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[80, 146])
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 65536)
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - on stmt: $158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$158compare_op.2 = exp > $const156.1
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - find_def_from_bottom label 80
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - find_def_from_top label 80
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - idom 48 from label 80
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - find_def_from_bottom label 48
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2025-01-20 15:59:12,939 - numba.core.ssa - DEBUG - find_def_from_bottom label 146
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - incoming_def exp.1 = b
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - replaced with: $158compare_op.2 = exp.3 > $const156.1
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: bool162 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $162pred = call bool162($158compare_op.2, func=bool162, args=(Var($158compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: branch $162pred, 164, 226
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 164
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $164load_global.0 = global(math: <module 'math' (built-in)>)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $174load_attr.2 = getattr(value=$164load_global.0, attr=pow)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $196load_global.4 = global(float: <class 'float'>)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $208call.7 = call $196load_global.4(b, func=$196load_global.4, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $216call.8 = call $174load_attr.2(a.1, $208call.7, func=$174load_attr.2, args=[Var(a.1, numbers.py:217), Var($208call.7, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $224return_value.9 = cast(value=$216call.8)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: return $224return_value.9
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 226
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $const228.1 = const(int, 0)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$230compare_op.2 = exp != $const228.1
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - find_def_from_top label 226
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - idom 154 from label 226
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - replaced with: $230compare_op.2 = exp.3 != $const228.1
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: bool234 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: $234pred = call bool234($230compare_op.2, func=bool234, args=(Var($230compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - on stmt: branch $234pred, 236, 288
2025-01-20 15:59:12,940 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[226, 286])
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - on stmt: $const238.1 = const(int, 1)
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - on stmt: $binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$binop_and_240.2 = exp & $const238.1
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 236
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - find_def_from_bottom label 226
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - find_def_from_top label 226
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - idom 154 from label 226
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[80, 146])
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - find_def_from_bottom label 286
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - find_def_from_top label 286
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - idom 256 from label 286
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - find_def_from_bottom label 256
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - incoming_def exp.2 = $binop_irshift260.2
2025-01-20 15:59:12,941 - numba.core.ssa - DEBUG - replaced with: $binop_and_240.2 = exp.4 & $const238.1
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: bool244 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: $244pred = call bool244($binop_and_240.2, func=bool244, args=(Var($binop_and_240.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: branch $244pred, 246, 256
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 246
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: $binop_imul250.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: r.1 = $binop_imul250.2
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: jump 256
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 256
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[236, 246])
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: $const258.1 = const(int, 1)
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - find_def_from_top label 256
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - idom 236 from label 256
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - replaced with: $binop_irshift260.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const258.1, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: exp.2 = $binop_irshift260.2
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: $binop_imul270.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $binop_imul270.5
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: $const278.7 = const(int, 0)
2025-01-20 15:59:12,942 - numba.core.ssa - DEBUG - on stmt: $280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$280compare_op.8 = exp != $const278.7
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - replaced with: $280compare_op.8 = exp.2 != $const278.7
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: bool284 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: $284pred = call bool284($280compare_op.8, func=bool284, args=(Var($280compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: branch $284pred, 286, 288
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 286
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: jump 236
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 288
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r.3, numbers.py:239), Var(r, numbers.py:216)], incoming_blocks=[256, 226])
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: $290pred = call bool290(invert.2, func=bool290, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: branch $290pred, 292, 302
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: $const292.0 = const(float, 1.0)
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: $binop_truediv296.2 = $const292.0 / r.4
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: $300return_value.3 = cast(value=$binop_truediv296.2)
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: return $300return_value.3
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x763535d3f560>
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: $304return_value.1 = cast(value=r.4)
2025-01-20 15:59:12,943 - numba.core.ssa - DEBUG - on stmt: return $304return_value.1
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=666)
           2	COPY_FREE_VARS(arg=1, lineno=666)
           4	RESUME(arg=0, lineno=666)
           6	PUSH_NULL(arg=None, lineno=667)
           8	LOAD_DEREF(arg=2, lineno=667)
          10	LOAD_FAST(arg=0, lineno=667)
          12	CALL(arg=1, lineno=667)
          20	RETURN_VALUE(arg=None, lineno=667)
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - stack: []
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=666)
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=666)
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=666)
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=667)
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - stack []
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=2, lineno=667)
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - stack ['$null$6.0']
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=667)
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - stack ['$null$6.0', '$8load_deref.1']
2025-01-20 15:59:12,995 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=CALL(arg=1, lineno=667)
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - stack ['$null$6.0', '$8load_deref.1', '$a10.2']
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=667)
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - stack ['$12call.3']
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - defmap: {}
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-01-20 15:59:12,996 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$a10.2'}), (12, {'func': '$8load_deref.1', 'args': ['$a10.2'], 'kw_names': None, 'res': '$12call.3'}), (20, {'retval': '$12call.3', 'castval': '$20return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-01-20 15:59:12,996 - numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    axis = arg(1, name=axis)                 ['axis']
    $8load_deref.1 = freevar(flatten_impl: <function array_argmin_impl_float at 0x76353ff50ae0>) ['$8load_deref.1']
    $12call.3 = call $8load_deref.1(a, func=$8load_deref.1, args=[Var(a, arraymath.py:666)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call.3', '$8load_deref.1', 'a']
    $20return_value.4 = cast(value=$12call.3) ['$12call.3', '$20return_value.4']
    return $20return_value.4                 ['$20return_value.4']

2025-01-20 15:59:12,999 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-01-20 15:59:12,999 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7635361715e0>
2025-01-20 15:59:12,999 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-01-20 15:59:12,999 - numba.core.ssa - DEBUG - on stmt: axis = arg(1, name=axis)
2025-01-20 15:59:12,999 - numba.core.ssa - DEBUG - on stmt: $8load_deref.1 = freevar(flatten_impl: <function array_argmin_impl_float at 0x76353ff50ae0>)
2025-01-20 15:59:12,999 - numba.core.ssa - DEBUG - on stmt: $12call.3 = call $8load_deref.1(a, func=$8load_deref.1, args=[Var(a, arraymath.py:666)], kws=(), vararg=None, varkwarg=None, target=None)
2025-01-20 15:59:13,000 - numba.core.ssa - DEBUG - on stmt: $20return_value.4 = cast(value=$12call.3)
2025-01-20 15:59:13,000 - numba.core.ssa - DEBUG - on stmt: return $20return_value.4
2025-01-20 15:59:13,000 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12call.3': [(<numba.core.ir.Assign object at 0x763536172e70>,
                            0)],
             '$20return_value.4': [(<numba.core.ir.Assign object at 0x763536172f60>,
                                    0)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x763536172bd0>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x763536172840>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x763536171820>, 0)]})
2025-01-20 15:59:13,000 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7635361715e0>
2025-01-20 15:59:13,418 - root - INFO - Image segmented successfully: 256 masks created
2025-01-20 15:59:13,418 - root - INFO - Image segmented successfully
2025-01-20 16:00:09,684 - cellpose.denoise - INFO - >> denoise_cyto2 << model set to be used
2025-01-20 16:00:09,769 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 16:00:09,769 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 16:00:09,859 - cellpose.denoise - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 16:00:09,860 - cellpose.models - INFO - >> cyto2 << model set to be used
2025-01-20 16:00:09,860 - cellpose.core - INFO - ** TORCH CUDA version installed and working. **
2025-01-20 16:00:09,860 - cellpose.core - INFO - >>>> using GPU (CUDA)
2025-01-20 16:00:09,898 - cellpose.models - INFO - >>>> loading model /home/ben/.cellpose/models/cyto2torch_0
2025-01-20 16:00:09,938 - cellpose.models - INFO - >>>> model diam_mean =  30.000 (ROIs rescaled to this size during training)
2025-01-20 16:00:09,938 - root - INFO - Default model created successfully
2025-01-20 16:00:10,374 - root - INFO - Model updated successfully with settings: {'gpu': True, 'model_type': 'cyto3', 'pretrained_model': False, 'restore_type': 'denoise_cyto3'}
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_header_field with data[36:55]
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_header_value with data[57:110]
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_header_field with data[112:124]
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_header_value with data[126:135]
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:65675]
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-01-20 16:00:10,398 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-01-20 16:00:10,644 - cellpose.dynamics - INFO - No cell pixels found.
2025-01-20 16:00:10,648 - root - INFO - Image segmented successfully: 256 masks created
2025-01-20 16:00:10,648 - root - INFO - Image segmented successfully
