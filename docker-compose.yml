services:
  #######################################
  ############## Redis ##################
  #######################################
  redis:
    image: redis:7.2-alpine
    ports:
      - "6380:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 30

  ######################################
  ############# FastAPI ################
  ######################################
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile_app
      args:
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
    volumes:
      - "${HOST_DIR}:/data"
      - ./cp_server:/app/cp_server
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_BACKEND_URL: "${CELERY_BACKEND_URL}"
      REDIS_HOST: "${REDIS_HOST:-redis}"
      REDIS_PORT: "${REDIS_PORT:-6379}"
      REDIS_DB: "${REDIS_DB:-2}"
      LOG_LEVEL: "${LOG_LEVEL:-INFO}"
      LOGFILE_NAME: "${LOGFILE_NAME:-task_servers.log}"
      SERVICE_NAME: fastapi
      RUNNING_AS_CELERY: "false"
      TZ: "${TZ:-Europe/London}"
    depends_on:
      redis:
        condition: service_healthy
      celery-default:
        condition: service_healthy
      celery-gpu:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 3s
      retries: 30
    ports:
      - "8000:8000"
    command: ["uvicorn", "cp_server.fastapi_app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  #######################################
  ########### Celery Workers ############
  #######################################

  celery-default:
    build:
      context: .
      dockerfile: Dockerfile_celery_default
      args:
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
    volumes:
      - "${HOST_DIR}:/data"
      - ./cp_server:/app/cp_server
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_BACKEND_URL: "${CELERY_BACKEND_URL}"
      REDIS_HOST: "${REDIS_HOST:-redis}"
      REDIS_PORT: "${REDIS_PORT:-6379}"
      REDIS_DB: "${REDIS_DB:-2}"
      LOG_LEVEL: "${LOG_LEVEL:-INFO}"
      LOGFILE_NAME: "${LOGFILE_NAME:-task_servers.log}"
      SERVICE_NAME: celery
      RUNNING_AS_CELERY: "true"
      TZ: "${TZ:-Europe/Berlin}"
    depends_on:
      - redis
    restart: unless-stopped
    command: >
      celery -A cp_server.tasks_server.celery_app:celery_app worker 
      -Q celery 
      --concurrency=6 
      --prefetch-multiplier=2 
      --max-tasks-per-child=50 
      --without-gossip 
      --without-mingle 
      --heartbeat-interval=30 
      --loglevel=info
    healthcheck:
      test: ["CMD", "celery", "-A", "cp_server.tasks_server.celery_app:celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  celery-gpu:
    build:
      context: .
      dockerfile: Dockerfile_celery
      args:
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
    volumes:
      - "${HOST_DIR}:/data"
      - ./cp_server:/app/cp_server
      - cellpose_models:/home/celeryuser/.cellpose
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_BACKEND_URL: "${CELERY_BACKEND_URL}"
      REDIS_HOST: "${REDIS_HOST:-redis}"
      REDIS_PORT: "${REDIS_PORT:-6379}"
      REDIS_DB: "${REDIS_DB:-2}"
      LOG_LEVEL: "${LOG_LEVEL:-INFO}"
      LOGFILE_NAME: "${LOGFILE_NAME:-task_servers.log}"
      SERVICE_NAME: celery
      RUNNING_AS_CELERY: "true"
      TZ: "${TZ:-Europe/London}"
    depends_on:
      - redis
    restart: unless-stopped
    command: >
      celery -A cp_server.tasks_server.celery_app:celery_app worker 
      -Q gpu_tasks 
      --concurrency=3 
      --prefetch-multiplier=1 
      --max-tasks-per-child=20 
      --pool=threads
      --without-gossip 
      --without-mingle 
      --heartbeat-interval=30 
      --loglevel=info
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              count: all
              capabilities: ["gpu"]
    healthcheck:
      test: ["CMD", "celery", "-A", "cp_server.tasks_server.celery_app:celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

volumes:
  cellpose_models:
