services:
  #######################################
  ############## Redis ##################
  #######################################
  redis:
    image: redis:latest  # TODO: Use a specific version
    ports:
      - "6380:6379"
    restart: on-failure

  ######################################
  ############# FastAPI ################
  ######################################
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile_app
      args:
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
    volumes:
      - "${DATA_DIR}:/data"
      - ./cp_server:/app/cp_server
    environment:
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_BACKEND_URL: "${CELERY_BACKEND_URL}"
      SERVICE_NAME: fastapi
    depends_on:
      - redis
    restart: on-failure
    ports:
      - "8000:8000"

  #######################################
  ########### Celery Workers ############
  #######################################

  celery-default:
    build:
      context: .
      dockerfile: Dockerfile_celery_default
      args:
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
    volumes:
      - "${DATA_DIR}:/data"
      - ./cp_server:/app/cp_server
    environment:
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_BACKEND_URL: "${CELERY_BACKEND_URL}"
      SERVICE_NAME: celery-default
    depends_on:
      - redis
    restart: on-failure

  celery-gpu:
    build:
      context: .
      dockerfile: Dockerfile_celery
      args:
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
    volumes:
      - "${DATA_DIR}:/data"
      - ./cp_server:/app/cp_server
    environment:
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_BACKEND_URL: "${CELERY_BACKEND_URL}"
      SERVICE_NAME: celery-gpu
    depends_on:
      - redis
    restart: on-failure
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              count: all
              capabilities: ["gpu"]
